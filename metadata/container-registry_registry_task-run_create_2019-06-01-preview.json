{"argGroups":[{"args":[{"format":{"maxLength":50,"minLength":5,"pattern":"^[a-zA-Z0-9]*$"},"help":{"short":"The name of the container registry."},"idPart":"name","options":["registry-name"],"required":true,"type":"string","var":"$Path.registryName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"},{"format":{"maxLength":50,"minLength":5,"pattern":"^[a-zA-Z0-9-]*$"},"help":{"short":"The name of the task run."},"idPart":"child_name_1","options":["n","name","task-run-name"],"required":true,"type":"string","var":"$Path.taskRunName"}],"name":""},{"args":[{"group":"Identity","help":{"short":"The principal ID of resource identity."},"options":["principal-id"],"type":"string","var":"$taskRun.identity.principalId"},{"blank":{"value":"True"},"group":"Identity","help":{"short":"Set the system managed identity."},"options":["system-assigned","mi-system-assigned"],"type":"string","var":"$taskRun.identity.systemAssigned"},{"group":"Identity","help":{"short":"The tenant ID of resource."},"options":["tenant-id"],"type":"string","var":"$taskRun.identity.tenantId"},{"enum":{"items":[{"name":"None","value":"None"},{"name":"SystemAssigned","value":"SystemAssigned"},{"name":"SystemAssigned, UserAssigned","value":"SystemAssigned, UserAssigned"},{"name":"UserAssigned","value":"UserAssigned"}]},"group":"Identity","help":{"short":"The identity type."},"hide":true,"options":["type"],"type":"string","var":"$taskRun.identity.type"},{"blank":{"value":[]},"group":"Identity","help":{"short":"Set the user managed identities."},"item":{"type":"string"},"options":["user-assigned","mi-user-assigned"],"type":"array<string>","var":"$taskRun.identity.userAssigned"},{"additionalProps":{"item":{"args":[{"help":{"short":"The client id of user assigned identity."},"options":["client-id"],"type":"string","var":"$taskRun.identity.userAssignedIdentities{}.clientId"},{"help":{"short":"The principal id of user assigned identity."},"options":["principal-id"],"type":"string","var":"$taskRun.identity.userAssignedIdentities{}.principalId"}],"type":"object"}},"group":"Identity","help":{"short":"The list of user identities associated with the resource. The user identity \r dictionary key references will be ARM resource ids in the form: \r '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r     providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."},"hide":true,"options":["user-assigned-identities"],"type":"object","var":"$taskRun.identity.userAssignedIdentities"}],"name":"Identity"},{"args":[{"group":"Properties","help":{"short":"How the run should be forced to rerun even if the run request configuration has not changed"},"options":["force-update-tag"],"type":"string","var":"$taskRun.properties.forceUpdateTag"},{"args":[{"args":[{"args":[{"help":{"short":"The CPU configuration in terms of number of cores required for the run."},"options":["cpu"],"type":"integer32","var":"@AgentProperties_create.cpu"}],"cls":"AgentProperties_create","help":{"short":"The machine configuration of the run agent."},"options":["agent-configuration"],"type":"object","var":"$taskRun.properties.runRequest.DockerBuildRequest.agentConfiguration"},{"help":{"short":"The collection of override arguments to be used when executing the run."},"item":{"args":[{"default":{"value":false},"help":{"short":"Flag to indicate whether the argument represents a secret and want to be removed from build logs."},"options":["is-secret"],"type":"boolean","var":"@Argument_create.isSecret"},{"help":{"short":"The name of the argument."},"options":["name"],"required":true,"type":"string","var":"@Argument_create.name"},{"help":{"short":"The value of the argument."},"options":["value"],"required":true,"type":"string","var":"@Argument_create.value"}],"cls":"Argument_create","type":"object"},"options":["arguments"],"type":"array<object>","var":"$taskRun.properties.runRequest.DockerBuildRequest.arguments"},{"args":[{"additionalProps":{"item":{"args":[{"help":{"short":"Indicates the managed identity assigned to the custom credential. If a user-assigned identity\r this value is the Client ID. If a system-assigned identity, the value will be `system`. In\r the case of a system-assigned identity, the Client ID will be determined by the runner. This\r identity may be used to authenticate to key vault to retrieve credentials or it may be the only \r source of authentication used for accessing the registry."},"options":["identity"],"type":"string","var":"@Credentials_create.customRegistries{}.identity"},{"help":{"short":"The password for logging into the custom registry. The password is a secret \r object that allows multiple ways of providing the value for it."},"options":["password"],"type":"@SecretObject_create","var":"@Credentials_create.customRegistries{}.password"},{"args":[{"enum":{"items":[{"name":"Opaque","value":"Opaque"},{"name":"Vaultsecret","value":"Vaultsecret"}]},"help":{"short":"The type of the secret object which determines how the value of the secret object has to be\r interpreted."},"options":["type"],"type":"string","var":"@SecretObject_create.type"},{"help":{"short":"The value of the secret. The format of this value will be determined\r based on the type of the secret object. If the type is Opaque, the value will be\r used as is without any modification."},"options":["value"],"type":"string","var":"@SecretObject_create.value"}],"cls":"SecretObject_create","help":{"short":"The username for logging into the custom registry."},"options":["user-name"],"type":"object","var":"@Credentials_create.customRegistries{}.userName"}],"type":"object"}},"help":{"short":"Describes the credential parameters for accessing other custom registries. The key\r for the dictionary item will be the registry login server (myregistry.azurecr.io) and\r the value of the item will be the registry credentials for accessing the registry."},"options":["custom-registries"],"type":"object","var":"@Credentials_create.customRegistries"},{"args":[{"enum":{"items":[{"name":"Default","value":"Default"},{"name":"None","value":"None"}]},"help":{"short":"The authentication mode which determines the source registry login scope. The credentials for the source registry\r will be generated using the given scope. These credentials will be used to login to\r the source registry during the run."},"options":["login-mode"],"type":"string","var":"@Credentials_create.sourceRegistry.loginMode"}],"help":{"short":"Describes the credential parameters for accessing the source registry."},"options":["source-registry"],"type":"object","var":"@Credentials_create.sourceRegistry"}],"cls":"Credentials_create","help":{"short":"The properties that describes a set of credentials that will be used when this run is invoked."},"options":["credentials"],"type":"object","var":"$taskRun.properties.runRequest.DockerBuildRequest.credentials"},{"help":{"short":"The Docker file path relative to the source location."},"options":["docker-file-path"],"required":true,"type":"string","var":"$taskRun.properties.runRequest.DockerBuildRequest.dockerFilePath"},{"help":{"short":"The fully qualified image names including the repository and tag."},"item":{"type":"string"},"options":["image-names"],"type":"array<string>","var":"$taskRun.properties.runRequest.DockerBuildRequest.imageNames"},{"default":{"value":true},"help":{"short":"The value of this property indicates whether the image built should be pushed to the registry or not."},"options":["is-push-enabled"],"type":"boolean","var":"$taskRun.properties.runRequest.DockerBuildRequest.isPushEnabled"},{"default":{"value":false},"help":{"short":"The value of this property indicates whether the image cache is enabled or not."},"options":["no-cache"],"type":"boolean","var":"$taskRun.properties.runRequest.DockerBuildRequest.noCache"},{"args":[{"enum":{"items":[{"name":"386","value":"386"},{"name":"amd64","value":"amd64"},{"name":"arm","value":"arm"},{"name":"arm64","value":"arm64"},{"name":"x86","value":"x86"}]},"help":{"short":"The OS architecture."},"options":["architecture"],"type":"string","var":"@PlatformProperties_create.architecture"},{"enum":{"items":[{"name":"Linux","value":"Linux"},{"name":"Windows","value":"Windows"}]},"help":{"short":"The operating system type required for the run."},"options":["os"],"required":true,"type":"string","var":"@PlatformProperties_create.os"},{"enum":{"items":[{"name":"v6","value":"v6"},{"name":"v7","value":"v7"},{"name":"v8","value":"v8"}]},"help":{"short":"Variant of the CPU."},"options":["variant"],"type":"string","var":"@PlatformProperties_create.variant"}],"cls":"PlatformProperties_create","help":{"short":"The platform properties against which the run has to happen."},"options":["platform"],"required":true,"type":"object","var":"$taskRun.properties.runRequest.DockerBuildRequest.platform"},{"help":{"short":"The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."},"options":["source-location"],"type":"string","var":"$taskRun.properties.runRequest.DockerBuildRequest.sourceLocation"},{"help":{"short":"The name of the target build stage for the docker build."},"options":["target"],"type":"string","var":"$taskRun.properties.runRequest.DockerBuildRequest.target"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"help":{"short":"Run timeout in seconds."},"options":["timeout"],"type":"integer32","var":"$taskRun.properties.runRequest.DockerBuildRequest.timeout"}],"options":["docker-build-request"],"type":"object","var":"$taskRun.properties.runRequest.DockerBuildRequest"},{"args":[{"help":{"short":"The machine configuration of the run agent."},"options":["agent-configuration"],"type":"@AgentProperties_create","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.agentConfiguration"},{"help":{"short":"The properties that describes a set of credentials that will be used when this run is invoked."},"options":["credentials"],"type":"@Credentials_create","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.credentials"},{"help":{"short":"Base64 encoded value of the template/definition file content."},"options":["encoded-task-content"],"required":true,"type":"string","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.encodedTaskContent"},{"help":{"short":"Base64 encoded value of the parameters/values file content."},"options":["encoded-values-content"],"type":"string","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.encodedValuesContent"},{"help":{"short":"The platform properties against which the run has to happen."},"options":["platform"],"required":true,"type":"@PlatformProperties_create","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.platform"},{"help":{"short":"The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."},"options":["source-location"],"type":"string","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.sourceLocation"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"help":{"short":"Run timeout in seconds."},"options":["timeout"],"type":"integer32","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.timeout"},{"help":{"short":"The collection of overridable values that can be passed when running a task."},"item":{"type":"@SetValue_create"},"options":["values"],"type":"array<@SetValue_create>","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest.values"}],"options":["encoded-task-run-request"],"type":"object","var":"$taskRun.properties.runRequest.EncodedTaskRunRequest"},{"args":[{"help":{"short":"The machine configuration of the run agent."},"options":["agent-configuration"],"type":"@AgentProperties_create","var":"$taskRun.properties.runRequest.FileTaskRunRequest.agentConfiguration"},{"help":{"short":"The properties that describes a set of credentials that will be used when this run is invoked."},"options":["credentials"],"type":"@Credentials_create","var":"$taskRun.properties.runRequest.FileTaskRunRequest.credentials"},{"help":{"short":"The platform properties against which the run has to happen."},"options":["platform"],"required":true,"type":"@PlatformProperties_create","var":"$taskRun.properties.runRequest.FileTaskRunRequest.platform"},{"help":{"short":"The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r If it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API."},"options":["source-location"],"type":"string","var":"$taskRun.properties.runRequest.FileTaskRunRequest.sourceLocation"},{"help":{"short":"The template/definition file path relative to the source."},"options":["task-file-path"],"required":true,"type":"string","var":"$taskRun.properties.runRequest.FileTaskRunRequest.taskFilePath"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"help":{"short":"Run timeout in seconds."},"options":["timeout"],"type":"integer32","var":"$taskRun.properties.runRequest.FileTaskRunRequest.timeout"},{"help":{"short":"The collection of overridable values that can be passed when running a task."},"item":{"args":[{"default":{"value":false},"help":{"short":"Flag to indicate whether the value represents a secret or not."},"options":["is-secret"],"type":"boolean","var":"@SetValue_create.isSecret"},{"help":{"short":"The name of the overridable value."},"options":["name"],"required":true,"type":"string","var":"@SetValue_create.name"},{"help":{"short":"The overridable value."},"options":["value"],"required":true,"type":"string","var":"@SetValue_create.value"}],"cls":"SetValue_create","type":"object"},"options":["values"],"type":"array<object>","var":"$taskRun.properties.runRequest.FileTaskRunRequest.values"},{"help":{"short":"The values/parameters file path relative to the source."},"options":["values-file-path"],"type":"string","var":"$taskRun.properties.runRequest.FileTaskRunRequest.valuesFilePath"}],"options":["file-task-run-request"],"type":"object","var":"$taskRun.properties.runRequest.FileTaskRunRequest"},{"args":[{"args":[{"help":{"short":"Gets or sets the collection of override arguments to be used when\r executing a build step."},"item":{"type":"@Argument_create"},"options":["arguments"],"type":"array<@Argument_create>","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.arguments"},{"help":{"short":"The source context against which run has to be queued."},"options":["context-path"],"type":"string","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.contextPath"},{"help":{"short":"The file against which run has to be queued."},"options":["file"],"type":"string","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.file"},{"help":{"short":"The name of the target build stage for the docker build."},"options":["target"],"type":"string","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.target"},{"help":{"short":"Base64 encoded update trigger token that will be attached with the base image trigger webhook."},"options":["update-trigger-token"],"type":"string","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.updateTriggerToken"},{"help":{"short":"The collection of overridable values that can be passed when running a Task."},"item":{"type":"@SetValue_create"},"options":["values"],"type":"array<@SetValue_create>","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.values"}],"help":{"short":"Set of overridable parameters that can be passed when running a Task."},"options":["override-task-step-properties"],"type":"object","var":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties"},{"help":{"short":"The resource ID of task against which run has to be queued."},"options":["task-id"],"required":true,"type":"string","var":"$taskRun.properties.runRequest.TaskRunRequest.taskId"}],"options":["task-run-request"],"type":"object","var":"$taskRun.properties.runRequest.TaskRunRequest"},{"help":{"short":"The dedicated agent pool for the run."},"options":["agent-pool-name"],"type":"string","var":"$taskRun.properties.runRequest.agentPoolName"},{"default":{"value":false},"help":{"short":"The value that indicates whether archiving is enabled for the run or not."},"options":["is-archive-enabled"],"type":"boolean","var":"$taskRun.properties.runRequest.isArchiveEnabled"},{"help":{"short":"The template that describes the repository and tag information for run log artifact."},"options":["log-template"],"type":"string","var":"$taskRun.properties.runRequest.logTemplate"}],"group":"Properties","help":{"short":"The request (parameters) for the run"},"options":["run-request"],"type":"object","var":"$taskRun.properties.runRequest"}],"name":"Properties"},{"args":[{"group":"TaskRun","help":{"short":"The location of the resource"},"options":["l","location"],"type":"ResourceLocation","var":"$taskRun.location"}],"name":"TaskRun"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/taskRuns/{taskRunName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"taskRun","props":[{"name":"identity","props":[{"arg":"$taskRun.identity.principalId","name":"principalId","type":"string"},{"arg":"$taskRun.identity.tenantId","name":"tenantId","type":"string"},{"arg":"$taskRun.identity.type","enum":{"items":[{"value":"None"},{"value":"SystemAssigned"},{"value":"SystemAssigned, UserAssigned"},{"value":"UserAssigned"}]},"name":"type","type":"string"},{"additionalProps":{"item":{"props":[{"arg":"$taskRun.identity.userAssignedIdentities{}.clientId","name":"clientId","type":"string"},{"arg":"$taskRun.identity.userAssignedIdentities{}.principalId","name":"principalId","type":"string"}],"type":"object"}},"arg":"$taskRun.identity.userAssignedIdentities","name":"userAssignedIdentities","type":"object"}],"systemAssigned":{"action":"create","arg":"$taskRun.identity.systemAssigned","name":"systemAssigned","type":"string"},"type":"IdentityObject","userAssigned":{"action":"create","arg":"$taskRun.identity.userAssigned","item":{"action":"create","type":"string"},"name":"userAssigned","type":"array<string>"}},{"arg":"$taskRun.location","name":"location","type":"ResourceLocation"},{"clientFlatten":true,"name":"properties","props":[{"arg":"$taskRun.properties.forceUpdateTag","name":"forceUpdateTag","type":"string"},{"arg":"$taskRun.properties.runRequest","discriminators":[{"property":"type","props":[{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.agentConfiguration","cls":"AgentProperties_create","name":"agentConfiguration","props":[{"arg":"@AgentProperties_create.cpu","name":"cpu","type":"integer32"}],"type":"object"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.arguments","identifiers":["name"],"item":{"cls":"Argument_create","props":[{"arg":"@Argument_create.isSecret","default":{"value":false},"name":"isSecret","type":"boolean"},{"arg":"@Argument_create.name","name":"name","required":true,"type":"string"},{"arg":"@Argument_create.value","name":"value","required":true,"type":"string"}],"type":"object"},"name":"arguments","type":"array<object>"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.credentials","cls":"Credentials_create","name":"credentials","props":[{"additionalProps":{"item":{"props":[{"arg":"@Credentials_create.customRegistries{}.identity","name":"identity","type":"string"},{"arg":"@Credentials_create.customRegistries{}.password","name":"password","type":"@SecretObject_create"},{"arg":"@Credentials_create.customRegistries{}.userName","cls":"SecretObject_create","name":"userName","props":[{"arg":"@SecretObject_create.type","enum":{"items":[{"value":"Opaque"},{"value":"Vaultsecret"}]},"name":"type","type":"string"},{"arg":"@SecretObject_create.value","name":"value","type":"string"}],"type":"object"}],"type":"object"}},"arg":"@Credentials_create.customRegistries","name":"customRegistries","type":"object"},{"arg":"@Credentials_create.sourceRegistry","name":"sourceRegistry","props":[{"arg":"@Credentials_create.sourceRegistry.loginMode","enum":{"items":[{"value":"Default"},{"value":"None"}]},"name":"loginMode","type":"string"}],"type":"object"}],"type":"object"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.dockerFilePath","name":"dockerFilePath","required":true,"type":"string"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.imageNames","item":{"type":"string"},"name":"imageNames","type":"array<string>"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.isPushEnabled","default":{"value":true},"name":"isPushEnabled","type":"boolean"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.noCache","default":{"value":false},"name":"noCache","type":"boolean"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.platform","cls":"PlatformProperties_create","name":"platform","props":[{"arg":"@PlatformProperties_create.architecture","enum":{"items":[{"value":"386"},{"value":"amd64"},{"value":"arm"},{"value":"arm64"},{"value":"x86"}]},"name":"architecture","type":"string"},{"arg":"@PlatformProperties_create.os","enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"os","required":true,"type":"string"},{"arg":"@PlatformProperties_create.variant","enum":{"items":[{"value":"v6"},{"value":"v7"},{"value":"v8"}]},"name":"variant","type":"string"}],"required":true,"type":"object"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.sourceLocation","name":"sourceLocation","type":"string"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.target","name":"target","type":"string"},{"arg":"$taskRun.properties.runRequest.DockerBuildRequest.timeout","default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"}],"value":"DockerBuildRequest"},{"property":"type","props":[{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.agentConfiguration","name":"agentConfiguration","type":"@AgentProperties_create"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.credentials","name":"credentials","type":"@Credentials_create"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.encodedTaskContent","name":"encodedTaskContent","required":true,"type":"string"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.encodedValuesContent","name":"encodedValuesContent","type":"string"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.platform","name":"platform","required":true,"type":"@PlatformProperties_create"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.sourceLocation","name":"sourceLocation","type":"string"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.timeout","default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest.values","item":{"type":"@SetValue_create"},"name":"values","type":"array<@SetValue_create>"}],"value":"EncodedTaskRunRequest"},{"property":"type","props":[{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.agentConfiguration","name":"agentConfiguration","type":"@AgentProperties_create"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.credentials","name":"credentials","type":"@Credentials_create"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.platform","name":"platform","required":true,"type":"@PlatformProperties_create"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.sourceLocation","name":"sourceLocation","type":"string"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.taskFilePath","name":"taskFilePath","required":true,"type":"string"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.timeout","default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.values","item":{"cls":"SetValue_create","props":[{"arg":"@SetValue_create.isSecret","default":{"value":false},"name":"isSecret","type":"boolean"},{"arg":"@SetValue_create.name","name":"name","required":true,"type":"string"},{"arg":"@SetValue_create.value","name":"value","required":true,"type":"string"}],"type":"object"},"name":"values","type":"array<object>"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest.valuesFilePath","name":"valuesFilePath","type":"string"}],"value":"FileTaskRunRequest"},{"property":"type","props":[{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties","name":"overrideTaskStepProperties","props":[{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.arguments","identifiers":["name"],"item":{"type":"@Argument_create"},"name":"arguments","type":"array<@Argument_create>"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.contextPath","name":"contextPath","type":"string"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.file","name":"file","type":"string"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.target","name":"target","type":"string"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.updateTriggerToken","name":"updateTriggerToken","type":"string"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.overrideTaskStepProperties.values","item":{"type":"@SetValue_create"},"name":"values","type":"array<@SetValue_create>"}],"type":"object"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest.taskId","name":"taskId","required":true,"type":"string"}],"value":"TaskRunRequest"}],"name":"runRequest","props":[{"arg":"$taskRun.properties.runRequest.agentPoolName","name":"agentPoolName","type":"string"},{"arg":"$taskRun.properties.runRequest.isArchiveEnabled","default":{"value":false},"name":"isArchiveEnabled","type":"boolean"},{"arg":"$taskRun.properties.runRequest.logTemplate","name":"logTemplate","type":"string"},{"enum":{"items":[{"arg":"$taskRun.properties.runRequest.DockerBuildRequest","value":"DockerBuildRequest"},{"arg":"$taskRun.properties.runRequest.EncodedTaskRunRequest","value":"EncodedTaskRunRequest"},{"arg":"$taskRun.properties.runRequest.FileTaskRunRequest","value":"FileTaskRunRequest"},{"arg":"$taskRun.properties.runRequest.TaskRunRequest","value":"TaskRunRequest"}]},"name":"type","required":true,"type":"string"}],"type":"object"}],"type":"object"}],"required":true,"type":"object"}}},"method":"put","path":{"params":[{"arg":"$Path.registryName","format":{"maxLength":50,"minLength":5,"pattern":"^[a-zA-Z0-9]*$"},"name":"registryName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","format":{"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"string"},{"arg":"$Path.taskRunName","format":{"maxLength":50,"minLength":5,"pattern":"^[a-zA-Z0-9-]*$"},"name":"taskRunName","required":true,"type":"string"}]},"query":{"consts":[{"const":true,"default":{"value":"2019-06-01-preview"},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/taskRuns/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"identity","props":[{"name":"principalId","type":"string"},{"name":"tenantId","type":"string"},{"enum":{"items":[{"value":"None"},{"value":"SystemAssigned"},{"value":"SystemAssigned, UserAssigned"},{"value":"UserAssigned"}]},"name":"type","type":"string"},{"additionalProps":{"item":{"props":[{"name":"clientId","type":"string"},{"name":"principalId","type":"string"}],"type":"object"}},"name":"userAssignedIdentities","type":"object"}],"type":"IdentityObject"},{"name":"location","type":"ResourceLocation"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"name":"forceUpdateTag","type":"string"},{"enum":{"items":[{"value":"Canceled"},{"value":"Creating"},{"value":"Deleting"},{"value":"Failed"},{"value":"Succeeded"},{"value":"Updating"}]},"name":"provisioningState","readOnly":true,"type":"string"},{"discriminators":[{"property":"type","props":[{"cls":"AgentProperties_read","name":"agentConfiguration","props":[{"name":"cpu","type":"integer32"}],"type":"object"},{"identifiers":["name"],"item":{"cls":"Argument_read","props":[{"default":{"value":false},"name":"isSecret","type":"boolean"},{"name":"name","required":true,"type":"string"},{"name":"value","required":true,"type":"string"}],"type":"object"},"name":"arguments","type":"array<object>"},{"cls":"Credentials_read","name":"credentials","props":[{"additionalProps":{"item":{"props":[{"name":"identity","type":"string"},{"name":"password","type":"@SecretObject_read"},{"cls":"SecretObject_read","name":"userName","props":[{"enum":{"items":[{"value":"Opaque"},{"value":"Vaultsecret"}]},"name":"type","type":"string"},{"name":"value","type":"string"}],"type":"object"}],"type":"object"}},"name":"customRegistries","type":"object"},{"name":"sourceRegistry","props":[{"enum":{"items":[{"value":"Default"},{"value":"None"}]},"name":"loginMode","type":"string"}],"type":"object"}],"type":"object"},{"name":"dockerFilePath","required":true,"type":"string"},{"item":{"type":"string"},"name":"imageNames","type":"array<string>"},{"default":{"value":true},"name":"isPushEnabled","type":"boolean"},{"default":{"value":false},"name":"noCache","type":"boolean"},{"cls":"PlatformProperties_read","name":"platform","props":[{"enum":{"items":[{"value":"386"},{"value":"amd64"},{"value":"arm"},{"value":"arm64"},{"value":"x86"}]},"name":"architecture","type":"string"},{"enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"os","required":true,"type":"string"},{"enum":{"items":[{"value":"v6"},{"value":"v7"},{"value":"v8"}]},"name":"variant","type":"string"}],"required":true,"type":"object"},{"name":"sourceLocation","type":"string"},{"name":"target","type":"string"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"}],"value":"DockerBuildRequest"},{"property":"type","props":[{"name":"agentConfiguration","type":"@AgentProperties_read"},{"name":"credentials","type":"@Credentials_read"},{"name":"encodedTaskContent","required":true,"type":"string"},{"name":"encodedValuesContent","type":"string"},{"name":"platform","required":true,"type":"@PlatformProperties_read"},{"name":"sourceLocation","type":"string"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"},{"item":{"type":"@SetValue_read"},"name":"values","type":"array<@SetValue_read>"}],"value":"EncodedTaskRunRequest"},{"property":"type","props":[{"name":"agentConfiguration","type":"@AgentProperties_read"},{"name":"credentials","type":"@Credentials_read"},{"name":"platform","required":true,"type":"@PlatformProperties_read"},{"name":"sourceLocation","type":"string"},{"name":"taskFilePath","required":true,"type":"string"},{"default":{"value":3600},"format":{"maximum":28800,"minimum":300},"name":"timeout","type":"integer32"},{"item":{"cls":"SetValue_read","props":[{"default":{"value":false},"name":"isSecret","type":"boolean"},{"name":"name","required":true,"type":"string"},{"name":"value","required":true,"type":"string"}],"type":"object"},"name":"values","type":"array<object>"},{"name":"valuesFilePath","type":"string"}],"value":"FileTaskRunRequest"},{"property":"type","props":[{"name":"overrideTaskStepProperties","props":[{"identifiers":["name"],"item":{"type":"@Argument_read"},"name":"arguments","type":"array<@Argument_read>"},{"name":"contextPath","type":"string"},{"name":"file","type":"string"},{"name":"target","type":"string"},{"name":"updateTriggerToken","type":"string"},{"item":{"type":"@SetValue_read"},"name":"values","type":"array<@SetValue_read>"}],"type":"object"},{"name":"taskId","required":true,"type":"string"}],"value":"TaskRunRequest"}],"name":"runRequest","props":[{"name":"agentPoolName","type":"string"},{"default":{"value":false},"name":"isArchiveEnabled","type":"boolean"},{"name":"logTemplate","type":"string"},{"enum":{"items":[{"value":"DockerBuildRequest"},{"value":"EncodedTaskRunRequest"},{"value":"FileTaskRunRequest"},{"value":"TaskRunRequest"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"name":"runResult","props":[{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerRegistry/registries/{}/runs/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"name":"agentConfiguration","type":"@AgentProperties_read"},{"name":"agentPoolName","type":"string"},{"format":{"protocol":"iso"},"name":"createTime","type":"dateTime"},{"item":{"type":"string"},"name":"customRegistries","type":"array<string>"},{"format":{"protocol":"iso"},"name":"finishTime","type":"dateTime"},{"name":"imageUpdateTrigger","props":[{"name":"id","type":"string"},{"identifiers":["registry"],"item":{"type":"@ImageDescriptor_read"},"name":"images","type":"array<@ImageDescriptor_read>"},{"format":{"protocol":"iso"},"name":"timestamp","type":"dateTime"}],"type":"object"},{"default":{"value":false},"name":"isArchiveEnabled","type":"boolean"},{"format":{"protocol":"iso"},"name":"lastUpdatedTime","type":"dateTime"},{"name":"logArtifact","readOnly":true,"type":"@ImageDescriptor_read"},{"identifiers":["registry"],"item":{"cls":"ImageDescriptor_read","props":[{"name":"digest","type":"string"},{"name":"registry","type":"string"},{"name":"repository","type":"string"},{"name":"tag","type":"string"}],"type":"object"},"name":"outputImages","type":"array<object>"},{"name":"platform","type":"@PlatformProperties_read"},{"enum":{"items":[{"value":"Canceled"},{"value":"Creating"},{"value":"Deleting"},{"value":"Failed"},{"value":"Succeeded"},{"value":"Updating"}]},"name":"provisioningState","type":"string"},{"name":"runErrorMessage","readOnly":true,"type":"string"},{"name":"runId","type":"string"},{"enum":{"items":[{"value":"AutoBuild"},{"value":"AutoRun"},{"value":"QuickBuild"},{"value":"QuickRun"}]},"name":"runType","type":"string"},{"name":"sourceRegistryAuth","type":"string"},{"name":"sourceTrigger","props":[{"name":"branchName","type":"string"},{"name":"commitId","type":"string"},{"name":"eventType","type":"string"},{"name":"id","type":"string"},{"name":"providerType","type":"string"},{"name":"pullRequestId","type":"string"},{"name":"repositoryUrl","type":"string"}],"type":"object"},{"format":{"protocol":"iso"},"name":"startTime","type":"dateTime"},{"enum":{"items":[{"value":"Canceled"},{"value":"Error"},{"value":"Failed"},{"value":"Queued"},{"value":"Running"},{"value":"Started"},{"value":"Succeeded"},{"value":"Timeout"}]},"name":"status","type":"string"},{"name":"task","type":"string"},{"name":"timerTrigger","props":[{"name":"scheduleOccurrence","type":"string"},{"name":"timerTriggerName","type":"string"}],"type":"object"},{"name":"updateTriggerToken","type":"string"}],"type":"object"},{"name":"systemData","readOnly":true,"type":"@SystemData_read"},{"name":"type","readOnly":true,"type":"string"}],"readOnly":true,"type":"object"}],"type":"object"},{"cls":"SystemData_read","name":"systemData","props":[{"format":{"protocol":"iso"},"name":"createdAt","type":"dateTime"},{"name":"createdBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"createdByType","type":"string"},{"format":{"protocol":"iso"},"name":"lastModifiedAt","type":"dateTime"},{"name":"lastModifiedBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"lastModifiedByType","type":"string"}],"readOnly":true,"type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200,201]},{"body":{"json":{"schema":{"type":"@ODataV4Format"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"azure-async-operation"},"operationId":"TaskRuns_Create"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerregistry/registries/{}/taskruns/{}","plane":"mgmt-plane"}]}