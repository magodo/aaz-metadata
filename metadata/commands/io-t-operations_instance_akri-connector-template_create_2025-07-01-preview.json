{"argGroups":[{"args":[{"format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"help":{"short":"Name of AkriConnectorTemplate resource."},"idPart":"child_name_1","options":["n","name","akri-connector-template-name"],"required":true,"type":"string","var":"$Path.akriConnectorTemplateName"},{"format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"help":{"short":"Name of instance."},"idPart":"name","options":["instance-name"],"required":true,"type":"string","var":"$Path.instanceName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"args":[{"help":{"short":"The maximum version of AIO required for the connector."},"options":["aio-max-version"],"type":"string","var":"$resource.properties.aioMetadata.aioMaxVersion"},{"help":{"short":"The minimum version of AIO required for the connector."},"options":["aio-min-version"],"type":"string","var":"$resource.properties.aioMetadata.aioMinVersion"}],"group":"Properties","help":{"short":"Metadata about AIO."},"options":["aio-metadata"],"type":"object","var":"$resource.properties.aioMetadata"},{"format":{"minLength":1},"group":"Properties","help":{"short":"Device inbound endpoint types."},"item":{"args":[{"args":[{"help":{"short":"The additional configuration schema reference."},"options":["additional-config-schema-ref"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.additionalConfigSchemaRef"},{"help":{"short":"The default configuration schema reference for datasets."},"options":["default-dataset-config-schema-ref"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultDatasetConfigSchemaRef"},{"help":{"short":"The default configuration schema reference for events."},"options":["default-events-config-schema-ref"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultEventsConfigSchemaRef"},{"help":{"short":"The default configuration schema reference for process control."},"options":["default-process-control-config-schema-ref"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultProcessControlConfigSchemaRef"},{"help":{"short":"The default configuration schema reference for streams."},"options":["default-streams-config-schema-ref"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultStreamsConfigSchemaRef"}],"help":{"short":"The configuration schema references for the device inbound endpoint."},"options":["configuration-schema-refs"],"type":"object","var":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs"},{"help":{"short":"A description of the device inbound endpoint."},"options":["description"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].description"},{"format":{"minLength":1},"help":{"short":"The type of the device inbound endpoint."},"options":["endpoint-type"],"required":true,"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].endpointType"},{"format":{"minLength":1},"help":{"short":"The version of the device inbound endpoint."},"options":["version"],"type":"string","var":"$resource.properties.deviceInboundEndpointTypes[].version"}],"type":"object"},"options":["device-inbound-endpoint-types"],"type":"array<object>","var":"$resource.properties.deviceInboundEndpointTypes"},{"args":[{"args":[{"default":{"value":"info"},"help":{"short":"The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'."},"options":["level"],"type":"string","var":"$resource.properties.diagnostics.logs.level"}],"help":{"short":"The log settings for the Connector template."},"options":["logs"],"required":true,"type":"object","var":"$resource.properties.diagnostics.logs"}],"group":"Properties","help":{"short":"Diagnostics settings for the Connector template."},"options":["diagnostics"],"type":"object","var":"$resource.properties.diagnostics"},{"args":[{"args":[{"args":[{"args":[{"help":{"short":"The audience for the service account token."},"options":["audience"],"required":true,"type":"string","var":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken.serviceAccountTokenSettings.audience"}],"help":{"short":"The service account token for the MQTT connection."},"options":["service-account-token-settings"],"required":true,"type":"object","var":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken.serviceAccountTokenSettings"}],"options":["service-account-token"],"type":"object","var":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken"}],"help":{"short":"Authentication properties."},"options":["authentication"],"type":"object","var":"$resource.properties.mqttConnectionConfiguration.authentication"},{"help":{"short":"Host of the Broker in the form of <hostname>:<port>."},"options":["host"],"type":"string","var":"$resource.properties.mqttConnectionConfiguration.host"},{"format":{"minimum":0},"help":{"short":"KeepAlive for connection in seconds."},"options":["keep-alive-seconds"],"type":"integer32","var":"$resource.properties.mqttConnectionConfiguration.keepAliveSeconds"},{"format":{"minimum":0},"help":{"short":"The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack."},"options":["max-inflight-messages"],"type":"integer32","var":"$resource.properties.mqttConnectionConfiguration.maxInflightMessages"},{"enum":{"items":[{"name":"Mqtt","value":"Mqtt"}]},"help":{"short":"The protocol to use for the connection. Currently only `mqtt` is supported."},"options":["protocol"],"type":"string","var":"$resource.properties.mqttConnectionConfiguration.protocol"},{"format":{"minimum":0},"help":{"short":"Session expiry in seconds."},"options":["session-expiry-seconds"],"type":"integer32","var":"$resource.properties.mqttConnectionConfiguration.sessionExpirySeconds"},{"args":[{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"Mode for TLS."},"options":["mode"],"type":"string","var":"$resource.properties.mqttConnectionConfiguration.tls.mode"},{"help":{"short":"Trusted CA certificate config map."},"options":["trusted-ca-certificate-config-map-ref"],"type":"string","var":"$resource.properties.mqttConnectionConfiguration.tls.trustedCaCertificateConfigMapRef"}],"help":{"short":"TLS configuration."},"options":["tls"],"type":"object","var":"$resource.properties.mqttConnectionConfiguration.tls"}],"group":"Properties","help":{"short":"Mqtt connection configuration settings."},"options":["mqtt-connection-configuration"],"type":"object","var":"$resource.properties.mqttConnectionConfiguration"},{"args":[{"args":[{"args":[{"args":[{"args":[{"help":{"short":"If set, the operation will be atomic. If the operation fails, all changes will be rolled back."},"options":["atomic"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.atomic"},{"help":{"short":"Disable pre/post upgrade hooks for the operation."},"options":["disable-hooks"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.disableHooks"},{"help":{"short":"Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."},"options":["timeout"],"type":"integer32","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.timeout"},{"help":{"short":"If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."},"options":["wait"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.wait"},{"help":{"short":"If set, the operation will wait for jobs to complete before marking the release as successful."},"options":["wait-for-jobs"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.waitForJobs"}],"help":{"short":"Delete operation configuration for the Helm chart."},"options":["delete"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete"},{"args":[{"help":{"short":"If set, the operation will be atomic. If the operation fails, all changes will be rolled back."},"options":["atomic"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.atomic"},{"help":{"short":"Disable pre/post upgrade hooks for the operation."},"options":["disable-hooks"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.disableHooks"},{"help":{"short":"Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."},"options":["timeout"],"type":"integer32","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.timeout"},{"help":{"short":"If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."},"options":["wait"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.wait"},{"help":{"short":"If set, the operation will wait for jobs to complete before marking the release as successful."},"options":["wait-for-jobs"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.waitForJobs"}],"help":{"short":"Install operation configuration for the Helm chart."},"options":["install"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install"},{"args":[{"help":{"short":"If set, the operation will be atomic. If the operation fails, all changes will be rolled back."},"options":["atomic"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.atomic"},{"help":{"short":"Disable pre/post upgrade hooks for the operation."},"options":["disable-hooks"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.disableHooks"},{"help":{"short":"Time to wait for any individual Kubernetes operation (like `Jobs` for hooks)."},"options":["timeout"],"type":"integer32","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.timeout"},{"help":{"short":"If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful."},"options":["wait"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.wait"},{"help":{"short":"If set, the operation will wait for jobs to complete before marking the release as successful."},"options":["wait-for-jobs"],"type":"boolean","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.waitForJobs"}],"help":{"short":"Upgrade operation configuration for the Helm chart."},"options":["upgrade"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade"}],"help":{"short":"Advanced configuration for the Helm chart. Install, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`."},"options":["advanced-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration"},{"args":[{"args":[{"args":[{"args":[{"help":{"short":"The key of the password in the secret."},"options":["password-key"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.passwordKey"},{"help":{"short":"The name of the secret."},"options":["secret-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.secretRef"},{"help":{"short":"The key of the username in the secret."},"options":["username-key"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.usernameKey"}],"help":{"short":"Optional reference to a secret in the same namespace to use for pulling the Helm chart."},"options":["auth-secret-ref"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef"},{"help":{"short":"The registry to use for the Helm chart."},"options":["registry"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.registry"}],"help":{"short":"The registry settings for the container registry."},"options":["container-registry-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings"}],"options":["container-registry"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry"},{"args":[{"help":{"short":"The name of the registry endpoint."},"options":["registry-endpoint-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.RegistryEndpointRef.registryEndpointRef"}],"options":["registry-endpoint-ref"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.RegistryEndpointRef"}],"help":{"short":"The registry settings for the helm chart to be used."},"options":["registry-settings"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings"},{"help":{"short":"The release name of the Helm chart."},"options":["release-name"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.releaseName"},{"help":{"short":"The name of the repository"},"options":["repository-name"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.repositoryName"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"A map of values to pass to the helm chart."},"options":["values"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.values"},{"help":{"short":"The version of the Helm chart."},"options":["version"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.version"}],"help":{"short":"The Helm configuration settings."},"options":["helm-configuration-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings"}],"options":["helm-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.HelmConfiguration"},{"args":[{"args":[{"args":[{"args":[{"help":{"short":"The image name without any registry reference, tag or digest."},"options":["image-name"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.imageName"},{"enum":{"items":[{"name":"Always","value":"Always"},{"name":"IfNotPresent","value":"IfNotPresent"},{"name":"Never","value":"Never"}]},"help":{"short":"The pull policy of the image."},"options":["image-pull-policy"],"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.imagePullPolicy"},{"args":[{"args":[{"args":[{"help":{"short":"Optional list of references to secrets in the same namespace to use for pulling the connector image."},"item":{"args":[{"help":{"short":"The name of the image pull secret."},"options":["secret-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.imagePullSecrets[].secretRef"}],"type":"object"},"options":["image-pull-secrets"],"type":"array<object>","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.imagePullSecrets"},{"help":{"short":"The container registry to use for the artifact."},"options":["registry"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.registry"}],"help":{"short":"The registry settings for the container registry."},"options":["container-registry-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings"}],"options":["container-registry"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry"},{"args":[{"help":{"short":"The name of the registry endpoint."},"options":["registry-endpoint-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.RegistryEndpointRef.registryEndpointRef"}],"options":["registry-endpoint-ref"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.RegistryEndpointRef"}],"help":{"short":"The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image."},"options":["registry-settings"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings"},{"help":{"short":"The number of replicas to be set up."},"options":["replicas"],"type":"integer32","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.replicas"},{"args":[{"args":[{"help":{"short":"The digest of the image."},"options":["digest"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Digest.digest"}],"options":["digest"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Digest"},{"args":[{"help":{"short":"The tag of the image."},"options":["tag"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Tag.tag"}],"options":["tag"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Tag"}],"help":{"short":"Optional image tag or digest. If not specified, the default tag is `latest`."},"options":["tag-digest-settings"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings"}],"help":{"short":"The image configuration settings."},"options":["image-configuration-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings"}],"options":["image-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration"},{"args":[{"additionalProps":{"item":{"type":"any"}},"help":{"short":"The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource. See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec"},"options":["stateful-set-configuration-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.StatefulSetConfiguration.statefulSetConfigurationSettings"}],"options":["stateful-set-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.StatefulSetConfiguration"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Additional configuration for the image of the managed configuration."},"options":["additional-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.additionalConfiguration"},{"args":[{"args":[{"format":{"maximum":100,"minimum":1},"help":{"short":"The bucketized allocation of AEPs for connectors."},"options":["bucket-size"],"required":true,"type":"integer32","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation.Bucketized.bucketSize"}],"options":["bucketized"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation.Bucketized"}],"help":{"short":"Allocation settings for the managed configuration."},"options":["allocation"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation"},{"help":{"short":"The persistent volume claim templates for the managed configuration. See https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json."},"item":{"additionalProps":{"item":{"type":"any"}},"type":"object"},"options":["persistent-volume-claim-templates"],"type":"array<object>","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaimTemplates"},{"help":{"short":"The persistent volume claims for the managed configuration."},"item":{"args":[{"help":{"short":"The name of the persistent volume claim."},"options":["claim-name"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims[].claimName"},{"help":{"short":"The mount path for the persistent volume claim."},"options":["mount-path"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims[].mountPath"}],"type":"object"},"options":["persistent-volume-claims"],"type":"array<object>","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims"},{"help":{"short":"Connector secrets that will be mounted onto all connector instances."},"item":{"args":[{"help":{"short":"The application-defined alias for the secret."},"options":["secret-alias"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretAlias"},{"help":{"short":"The key in the secret to be mounted."},"options":["secret-key"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretKey"},{"help":{"short":"The name of the secret to be mounted."},"options":["secret-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretRef"}],"type":"object"},"options":["secrets"],"type":"array<object>","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets"},{"args":[{"help":{"short":"The secret reference for certificates to trust."},"options":["trust-list-secret-ref"],"required":true,"type":"string","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.trustSettings.trustListSecretRef"}],"help":{"short":"Trust list for the connector. This is used to specify the certificates that all connector instances should trust."},"options":["trust-settings"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.trustSettings"}],"help":{"short":"The managed configuration settings."},"options":["managed-configuration-settings"],"required":true,"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings"}],"options":["managed-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration.ManagedConfiguration"}],"group":"Properties","help":{"short":"The runtime configuration for the Connector template."},"options":["runtime-configuration"],"type":"object","var":"$resource.properties.runtimeConfiguration"}],"name":"Properties"},{"args":[{"args":[{"help":{"short":"The name of the extended location."},"options":["name"],"required":true,"type":"string","var":"$resource.extendedLocation.name"},{"enum":{"items":[{"name":"CustomLocation","value":"CustomLocation"}]},"help":{"short":"Type of ExtendedLocation."},"options":["type"],"required":true,"type":"string","var":"$resource.extendedLocation.type"}],"group":"Resource","help":{"short":"Edge location of the resource."},"options":["extended-location"],"type":"object","var":"$resource.extendedLocation"}],"name":"Resource"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/akriConnectorTemplates/{akriConnectorTemplateName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"resource","props":[{"arg":"$resource.extendedLocation","name":"extendedLocation","props":[{"arg":"$resource.extendedLocation.name","name":"name","required":true,"type":"string"},{"arg":"$resource.extendedLocation.type","enum":{"items":[{"value":"CustomLocation"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"name":"properties","props":[{"arg":"$resource.properties.aioMetadata","name":"aioMetadata","props":[{"arg":"$resource.properties.aioMetadata.aioMaxVersion","name":"aioMaxVersion","type":"string"},{"arg":"$resource.properties.aioMetadata.aioMinVersion","name":"aioMinVersion","type":"string"}],"type":"object"},{"arg":"$resource.properties.deviceInboundEndpointTypes","format":{"minLength":1},"identifiers":["version","endpointType"],"item":{"props":[{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs","name":"configurationSchemaRefs","props":[{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.additionalConfigSchemaRef","name":"additionalConfigSchemaRef","type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultDatasetConfigSchemaRef","name":"defaultDatasetConfigSchemaRef","type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultEventsConfigSchemaRef","name":"defaultEventsConfigSchemaRef","type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultProcessControlConfigSchemaRef","name":"defaultProcessControlConfigSchemaRef","type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].configurationSchemaRefs.defaultStreamsConfigSchemaRef","name":"defaultStreamsConfigSchemaRef","type":"string"}],"type":"object"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].description","name":"description","type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].endpointType","format":{"minLength":1},"name":"endpointType","required":true,"type":"string"},{"arg":"$resource.properties.deviceInboundEndpointTypes[].version","format":{"minLength":1},"name":"version","type":"string"}],"type":"object"},"name":"deviceInboundEndpointTypes","required":true,"type":"array<object>"},{"arg":"$resource.properties.diagnostics","name":"diagnostics","props":[{"arg":"$resource.properties.diagnostics.logs","name":"logs","props":[{"arg":"$resource.properties.diagnostics.logs.level","default":{"value":"info"},"name":"level","type":"string"}],"required":true,"type":"object"}],"type":"object"},{"arg":"$resource.properties.mqttConnectionConfiguration","name":"mqttConnectionConfiguration","props":[{"arg":"$resource.properties.mqttConnectionConfiguration.authentication","discriminators":[{"property":"method","props":[{"arg":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken.serviceAccountTokenSettings","name":"serviceAccountTokenSettings","props":[{"arg":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken.serviceAccountTokenSettings.audience","name":"audience","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ServiceAccountToken"}],"name":"authentication","props":[{"enum":{"items":[{"arg":"$resource.properties.mqttConnectionConfiguration.authentication.ServiceAccountToken","value":"ServiceAccountToken"}]},"name":"method","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.mqttConnectionConfiguration.host","name":"host","type":"string"},{"arg":"$resource.properties.mqttConnectionConfiguration.keepAliveSeconds","format":{"minimum":0},"name":"keepAliveSeconds","type":"integer32"},{"arg":"$resource.properties.mqttConnectionConfiguration.maxInflightMessages","format":{"minimum":0},"name":"maxInflightMessages","type":"integer32"},{"arg":"$resource.properties.mqttConnectionConfiguration.protocol","enum":{"items":[{"value":"Mqtt"}]},"name":"protocol","type":"string"},{"arg":"$resource.properties.mqttConnectionConfiguration.sessionExpirySeconds","format":{"minimum":0},"name":"sessionExpirySeconds","type":"integer32"},{"arg":"$resource.properties.mqttConnectionConfiguration.tls","name":"tls","props":[{"arg":"$resource.properties.mqttConnectionConfiguration.tls.mode","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"arg":"$resource.properties.mqttConnectionConfiguration.tls.trustedCaCertificateConfigMapRef","name":"trustedCaCertificateConfigMapRef","type":"string"}],"type":"object"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration","discriminators":[{"property":"runtimeConfigurationType","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings","name":"helmConfigurationSettings","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration","name":"advancedConfiguration","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete","name":"delete","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.atomic","name":"atomic","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.disableHooks","name":"disableHooks","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.timeout","name":"timeout","type":"integer32"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.wait","name":"wait","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.delete.waitForJobs","name":"waitForJobs","type":"boolean"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install","name":"install","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.atomic","name":"atomic","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.disableHooks","name":"disableHooks","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.timeout","name":"timeout","type":"integer32"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.wait","name":"wait","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.install.waitForJobs","name":"waitForJobs","type":"boolean"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade","name":"upgrade","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.atomic","name":"atomic","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.disableHooks","name":"disableHooks","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.timeout","name":"timeout","type":"integer32"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.wait","name":"wait","type":"boolean"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.advancedConfiguration.upgrade.waitForJobs","name":"waitForJobs","type":"boolean"}],"type":"object"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings","discriminators":[{"property":"registrySettingsType","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings","name":"containerRegistrySettings","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef","name":"authSecretRef","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.passwordKey","name":"passwordKey","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.secretRef","name":"secretRef","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.authSecretRef.usernameKey","name":"usernameKey","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.registry","name":"registry","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ContainerRegistry"},{"property":"registrySettingsType","props":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.RegistryEndpointRef.registryEndpointRef","name":"registryEndpointRef","required":true,"type":"string"}],"value":"RegistryEndpointRef"}],"name":"registrySettings","props":[{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.ContainerRegistry","value":"ContainerRegistry"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.registrySettings.RegistryEndpointRef","value":"RegistryEndpointRef"}]},"name":"registrySettingsType","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.releaseName","name":"releaseName","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.repositoryName","name":"repositoryName","required":true,"type":"string"},{"additionalProps":{"item":{"type":"string"}},"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.values","name":"values","type":"object"},{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration.helmConfigurationSettings.version","name":"version","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"HelmConfiguration"},{"property":"runtimeConfigurationType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings","discriminators":[{"property":"managedConfigurationType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings","name":"imageConfigurationSettings","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.imageName","name":"imageName","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.imagePullPolicy","enum":{"items":[{"value":"Always"},{"value":"IfNotPresent"},{"value":"Never"}]},"name":"imagePullPolicy","type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings","discriminators":[{"property":"registrySettingsType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings","name":"containerRegistrySettings","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.imagePullSecrets","identifiers":["secretRef"],"item":{"props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.imagePullSecrets[].secretRef","name":"secretRef","required":true,"type":"string"}],"type":"object"},"name":"imagePullSecrets","type":"array<object>"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry.containerRegistrySettings.registry","name":"registry","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ContainerRegistry"},{"property":"registrySettingsType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.RegistryEndpointRef.registryEndpointRef","name":"registryEndpointRef","required":true,"type":"string"}],"value":"RegistryEndpointRef"}],"name":"registrySettings","props":[{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.ContainerRegistry","value":"ContainerRegistry"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.registrySettings.RegistryEndpointRef","value":"RegistryEndpointRef"}]},"name":"registrySettingsType","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.replicas","name":"replicas","type":"integer32"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings","discriminators":[{"property":"tagDigestType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Digest.digest","name":"digest","required":true,"type":"string"}],"value":"Digest"},{"property":"tagDigestType","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Tag.tag","name":"tag","required":true,"type":"string"}],"value":"Tag"}],"name":"tagDigestSettings","props":[{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Digest","value":"Digest"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration.imageConfigurationSettings.tagDigestSettings.Tag","value":"Tag"}]},"name":"tagDigestType","required":true,"type":"string"}],"type":"object"}],"required":true,"type":"object"}],"value":"ImageConfiguration"},{"property":"managedConfigurationType","props":[{"additionalProps":{"item":{"type":"any"}},"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.StatefulSetConfiguration.statefulSetConfigurationSettings","name":"statefulSetConfigurationSettings","required":true,"type":"object"}],"value":"StatefulSetConfiguration"}],"name":"managedConfigurationSettings","props":[{"additionalProps":{"item":{"type":"string"}},"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.additionalConfiguration","name":"additionalConfiguration","type":"object"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation","discriminators":[{"property":"policy","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation.Bucketized.bucketSize","format":{"maximum":100,"minimum":1},"name":"bucketSize","required":true,"type":"integer32"}],"value":"Bucketized"}],"name":"allocation","props":[{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.allocation.Bucketized","value":"Bucketized"}]},"name":"policy","required":true,"type":"string"}],"type":"object"},{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.ImageConfiguration","value":"ImageConfiguration"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.StatefulSetConfiguration","value":"StatefulSetConfiguration"}]},"name":"managedConfigurationType","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaimTemplates","item":{"additionalProps":{"item":{"type":"any"}},"type":"object"},"name":"persistentVolumeClaimTemplates","type":"array<object>"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims","identifiers":["claimName"],"item":{"props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims[].claimName","name":"claimName","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.persistentVolumeClaims[].mountPath","name":"mountPath","required":true,"type":"string"}],"type":"object"},"name":"persistentVolumeClaims","type":"array<object>"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets","identifiers":["secretAlias"],"item":{"props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretAlias","name":"secretAlias","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretKey","name":"secretKey","required":true,"type":"string"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.secrets[].secretRef","name":"secretRef","required":true,"type":"string"}],"type":"object"},"name":"secrets","type":"array<object>"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.trustSettings","name":"trustSettings","props":[{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration.managedConfigurationSettings.trustSettings.trustListSecretRef","name":"trustListSecretRef","required":true,"type":"string"}],"type":"object"}],"required":true,"type":"object"}],"value":"ManagedConfiguration"}],"name":"runtimeConfiguration","props":[{"enum":{"items":[{"arg":"$resource.properties.runtimeConfiguration.HelmConfiguration","value":"HelmConfiguration"},{"arg":"$resource.properties.runtimeConfiguration.ManagedConfiguration","value":"ManagedConfiguration"}]},"name":"runtimeConfigurationType","required":true,"type":"string"}],"required":true,"type":"object"}],"type":"object"}],"required":true,"type":"object"}}},"method":"put","path":{"params":[{"arg":"$Path.akriConnectorTemplateName","format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"name":"akriConnectorTemplateName","required":true,"type":"string"},{"arg":"$Path.instanceName","format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"name":"instanceName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","format":{"maxLength":90,"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"uuid"}]},"query":{"consts":[{"const":true,"default":{"value":"2025-07-01-preview"},"format":{"minLength":1},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"name":"extendedLocation","props":[{"name":"name","required":true,"type":"string"},{"enum":{"items":[{"value":"CustomLocation"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTOperations/instances/{}/akriConnectorTemplates/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"name","readOnly":true,"type":"string"},{"name":"properties","props":[{"name":"aioMetadata","props":[{"name":"aioMaxVersion","type":"string"},{"name":"aioMinVersion","type":"string"}],"type":"object"},{"format":{"minLength":1},"identifiers":["version","endpointType"],"item":{"props":[{"name":"configurationSchemaRefs","props":[{"name":"additionalConfigSchemaRef","type":"string"},{"name":"defaultDatasetConfigSchemaRef","type":"string"},{"name":"defaultEventsConfigSchemaRef","type":"string"},{"name":"defaultProcessControlConfigSchemaRef","type":"string"},{"name":"defaultStreamsConfigSchemaRef","type":"string"}],"type":"object"},{"name":"description","type":"string"},{"format":{"minLength":1},"name":"endpointType","required":true,"type":"string"},{"format":{"minLength":1},"name":"version","type":"string"}],"type":"object"},"name":"deviceInboundEndpointTypes","required":true,"type":"array<object>"},{"name":"diagnostics","props":[{"name":"logs","props":[{"default":{"value":"info"},"name":"level","type":"string"}],"required":true,"type":"object"}],"type":"object"},{"name":"mqttConnectionConfiguration","props":[{"discriminators":[{"property":"method","props":[{"name":"serviceAccountTokenSettings","props":[{"name":"audience","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ServiceAccountToken"}],"name":"authentication","props":[{"enum":{"items":[{"value":"ServiceAccountToken"}]},"name":"method","required":true,"type":"string"}],"type":"object"},{"name":"host","type":"string"},{"format":{"minimum":0},"name":"keepAliveSeconds","type":"integer32"},{"format":{"minimum":0},"name":"maxInflightMessages","type":"integer32"},{"enum":{"items":[{"value":"Mqtt"}]},"name":"protocol","type":"string"},{"format":{"minimum":0},"name":"sessionExpirySeconds","type":"integer32"},{"name":"tls","props":[{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"name":"trustedCaCertificateConfigMapRef","type":"string"}],"type":"object"}],"type":"object"},{"enum":{"items":[{"value":"Accepted"},{"value":"Canceled"},{"value":"Deleting"},{"value":"Failed"},{"value":"Provisioning"},{"value":"Succeeded"},{"value":"Updating"}]},"name":"provisioningState","readOnly":true,"type":"string"},{"discriminators":[{"property":"runtimeConfigurationType","props":[{"name":"helmConfigurationSettings","props":[{"name":"advancedConfiguration","props":[{"name":"delete","props":[{"name":"atomic","type":"boolean"},{"name":"disableHooks","type":"boolean"},{"name":"timeout","type":"integer32"},{"name":"wait","type":"boolean"},{"name":"waitForJobs","type":"boolean"}],"type":"object"},{"name":"install","props":[{"name":"atomic","type":"boolean"},{"name":"disableHooks","type":"boolean"},{"name":"timeout","type":"integer32"},{"name":"wait","type":"boolean"},{"name":"waitForJobs","type":"boolean"}],"type":"object"},{"name":"upgrade","props":[{"name":"atomic","type":"boolean"},{"name":"disableHooks","type":"boolean"},{"name":"timeout","type":"integer32"},{"name":"wait","type":"boolean"},{"name":"waitForJobs","type":"boolean"}],"type":"object"}],"type":"object"},{"discriminators":[{"property":"registrySettingsType","props":[{"name":"containerRegistrySettings","props":[{"name":"authSecretRef","props":[{"name":"passwordKey","required":true,"type":"string"},{"name":"secretRef","required":true,"type":"string"},{"name":"usernameKey","required":true,"type":"string"}],"type":"object"},{"name":"registry","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ContainerRegistry"},{"property":"registrySettingsType","props":[{"name":"registryEndpointRef","required":true,"type":"string"}],"value":"RegistryEndpointRef"}],"name":"registrySettings","props":[{"enum":{"items":[{"value":"ContainerRegistry"},{"value":"RegistryEndpointRef"}]},"name":"registrySettingsType","required":true,"type":"string"}],"type":"object"},{"name":"releaseName","required":true,"type":"string"},{"name":"repositoryName","required":true,"type":"string"},{"additionalProps":{"item":{"type":"string"}},"name":"values","type":"object"},{"name":"version","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"HelmConfiguration"},{"property":"runtimeConfigurationType","props":[{"discriminators":[{"property":"managedConfigurationType","props":[{"name":"imageConfigurationSettings","props":[{"name":"imageName","required":true,"type":"string"},{"enum":{"items":[{"value":"Always"},{"value":"IfNotPresent"},{"value":"Never"}]},"name":"imagePullPolicy","type":"string"},{"discriminators":[{"property":"registrySettingsType","props":[{"name":"containerRegistrySettings","props":[{"identifiers":["secretRef"],"item":{"props":[{"name":"secretRef","required":true,"type":"string"}],"type":"object"},"name":"imagePullSecrets","type":"array<object>"},{"name":"registry","required":true,"type":"string"}],"required":true,"type":"object"}],"value":"ContainerRegistry"},{"property":"registrySettingsType","props":[{"name":"registryEndpointRef","required":true,"type":"string"}],"value":"RegistryEndpointRef"}],"name":"registrySettings","props":[{"enum":{"items":[{"value":"ContainerRegistry"},{"value":"RegistryEndpointRef"}]},"name":"registrySettingsType","required":true,"type":"string"}],"type":"object"},{"name":"replicas","type":"integer32"},{"discriminators":[{"property":"tagDigestType","props":[{"name":"digest","required":true,"type":"string"}],"value":"Digest"},{"property":"tagDigestType","props":[{"name":"tag","required":true,"type":"string"}],"value":"Tag"}],"name":"tagDigestSettings","props":[{"enum":{"items":[{"value":"Digest"},{"value":"Tag"}]},"name":"tagDigestType","required":true,"type":"string"}],"type":"object"}],"required":true,"type":"object"}],"value":"ImageConfiguration"},{"property":"managedConfigurationType","props":[{"additionalProps":{"item":{"type":"any"}},"name":"statefulSetConfigurationSettings","required":true,"type":"object"}],"value":"StatefulSetConfiguration"}],"name":"managedConfigurationSettings","props":[{"additionalProps":{"item":{"type":"string"}},"name":"additionalConfiguration","type":"object"},{"discriminators":[{"property":"policy","props":[{"format":{"maximum":100,"minimum":1},"name":"bucketSize","required":true,"type":"integer32"}],"value":"Bucketized"}],"name":"allocation","props":[{"enum":{"items":[{"value":"Bucketized"}]},"name":"policy","required":true,"type":"string"}],"type":"object"},{"enum":{"items":[{"value":"ImageConfiguration"},{"value":"StatefulSetConfiguration"}]},"name":"managedConfigurationType","required":true,"type":"string"},{"item":{"additionalProps":{"item":{"type":"any"}},"type":"object"},"name":"persistentVolumeClaimTemplates","type":"array<object>"},{"identifiers":["claimName"],"item":{"props":[{"name":"claimName","required":true,"type":"string"},{"name":"mountPath","required":true,"type":"string"}],"type":"object"},"name":"persistentVolumeClaims","type":"array<object>"},{"identifiers":["secretAlias"],"item":{"props":[{"name":"secretAlias","required":true,"type":"string"},{"name":"secretKey","required":true,"type":"string"},{"name":"secretRef","required":true,"type":"string"}],"type":"object"},"name":"secrets","type":"array<object>"},{"name":"trustSettings","props":[{"name":"trustListSecretRef","required":true,"type":"string"}],"type":"object"}],"required":true,"type":"object"}],"value":"ManagedConfiguration"}],"name":"runtimeConfiguration","props":[{"enum":{"items":[{"value":"HelmConfiguration"},{"value":"ManagedConfiguration"}]},"name":"runtimeConfigurationType","required":true,"type":"string"}],"required":true,"type":"object"}],"type":"object"},{"name":"systemData","props":[{"format":{"protocol":"iso"},"name":"createdAt","type":"dateTime"},{"name":"createdBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"createdByType","type":"string"},{"format":{"protocol":"iso"},"name":"lastModifiedAt","type":"dateTime"},{"name":"lastModifiedBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"lastModifiedByType","type":"string"}],"readOnly":true,"type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200,201]},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"azure-async-operation"},"operationId":"AkriConnectorTemplate_CreateOrUpdate"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotoperations/instances/{}/akriconnectortemplates/{}","plane":"mgmt-plane"}]}