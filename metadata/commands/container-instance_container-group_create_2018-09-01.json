{"argGroups":[{"args":[{"help":{"short":"The name of the container group."},"idPart":"name","options":["n","name","container-group-name"],"required":true,"type":"string","var":"$Path.containerGroupName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"group":"ContainerGroup","help":{"short":"The resource location."},"options":["l","location"],"type":"ResourceLocation","var":"$containerGroup.location"},{"additionalProps":{"item":{"type":"string"}},"group":"ContainerGroup","help":{"short":"The resource tags."},"options":["tags"],"type":"object","var":"$containerGroup.tags"}],"name":"ContainerGroup"},{"args":[{"group":"Properties","help":{"short":"The containers within the container group."},"item":{"args":[{"help":{"short":"The user-provided name of the container instance."},"options":["name"],"required":true,"type":"string","var":"$containerGroup.properties.containers[].name"},{"group":"Properties","help":{"short":"The commands to execute within the container instance in exec form."},"item":{"type":"string"},"options":["command"],"type":"array<string>","var":"$containerGroup.properties.containers[].properties.command"},{"group":"Properties","help":{"short":"The environment variables to set in the container instance."},"item":{"args":[{"help":{"short":"The name of the environment variable."},"options":["name"],"required":true,"type":"string","var":"$containerGroup.properties.containers[].properties.environmentVariables[].name"},{"help":{"short":"The value of the secure environment variable."},"options":["secure-value"],"type":"string","var":"$containerGroup.properties.containers[].properties.environmentVariables[].secureValue"},{"help":{"short":"The value of the environment variable."},"options":["value"],"type":"string","var":"$containerGroup.properties.containers[].properties.environmentVariables[].value"}],"type":"object"},"options":["environment-variables"],"type":"array<object>","var":"$containerGroup.properties.containers[].properties.environmentVariables"},{"group":"Properties","help":{"short":"The name of the image used to create the container instance."},"options":["image"],"required":true,"type":"string","var":"$containerGroup.properties.containers[].properties.image"},{"args":[{"args":[{"help":{"short":"The commands to execute within the container."},"item":{"type":"string"},"options":["command"],"type":"array<string>","var":"@ContainerProbe_create.exec.command"}],"help":{"short":"The execution command to probe"},"options":["exec"],"type":"object","var":"@ContainerProbe_create.exec"},{"help":{"short":"The failure threshold."},"options":["failure-threshold"],"type":"integer32","var":"@ContainerProbe_create.failureThreshold"},{"args":[{"help":{"short":"The path to probe."},"options":["path"],"type":"string","var":"@ContainerProbe_create.httpGet.path"},{"help":{"short":"The port number to probe."},"options":["port"],"required":true,"type":"integer32","var":"@ContainerProbe_create.httpGet.port"},{"enum":{"items":[{"name":"http","value":"http"},{"name":"https","value":"https"}]},"help":{"short":"The scheme."},"options":["scheme"],"type":"string","var":"@ContainerProbe_create.httpGet.scheme"}],"help":{"short":"The Http Get settings to probe"},"options":["http-get"],"type":"object","var":"@ContainerProbe_create.httpGet"},{"help":{"short":"The initial delay seconds."},"options":["initial-delay-seconds"],"type":"integer32","var":"@ContainerProbe_create.initialDelaySeconds"},{"help":{"short":"The period seconds."},"options":["period-seconds"],"type":"integer32","var":"@ContainerProbe_create.periodSeconds"},{"help":{"short":"The success threshold."},"options":["success-threshold"],"type":"integer32","var":"@ContainerProbe_create.successThreshold"},{"help":{"short":"The timeout seconds."},"options":["timeout-seconds"],"type":"integer32","var":"@ContainerProbe_create.timeoutSeconds"}],"cls":"ContainerProbe_create","group":"Properties","help":{"short":"The liveness probe."},"options":["liveness-probe"],"type":"object","var":"$containerGroup.properties.containers[].properties.livenessProbe"},{"group":"Properties","help":{"short":"The exposed ports on the container instance."},"item":{"args":[{"help":{"short":"The port number exposed within the container group."},"options":["port"],"required":true,"type":"integer32","var":"$containerGroup.properties.containers[].properties.ports[].port"},{"enum":{"items":[{"name":"TCP","value":"TCP"},{"name":"UDP","value":"UDP"}]},"help":{"short":"The protocol associated with the port."},"options":["protocol"],"type":"string","var":"$containerGroup.properties.containers[].properties.ports[].protocol"}],"type":"object"},"options":["ports"],"type":"array<object>","var":"$containerGroup.properties.containers[].properties.ports"},{"group":"Properties","help":{"short":"The readiness probe."},"options":["readiness-probe"],"type":"@ContainerProbe_create","var":"$containerGroup.properties.containers[].properties.readinessProbe"},{"args":[{"args":[{"help":{"short":"The CPU limit of this container instance."},"options":["cpu"],"type":"float64","var":"$containerGroup.properties.containers[].properties.resources.limits.cpu"},{"help":{"short":"The memory limit in GB of this container instance."},"options":["memory-in-gb"],"type":"float64","var":"$containerGroup.properties.containers[].properties.resources.limits.memoryInGB"}],"help":{"short":"The resource limits of this container instance."},"options":["limits"],"type":"object","var":"$containerGroup.properties.containers[].properties.resources.limits"},{"args":[{"help":{"short":"The CPU request of this container instance."},"options":["cpu"],"required":true,"type":"float64","var":"$containerGroup.properties.containers[].properties.resources.requests.cpu"},{"help":{"short":"The memory request in GB of this container instance."},"options":["memory-in-gb"],"required":true,"type":"float64","var":"$containerGroup.properties.containers[].properties.resources.requests.memoryInGB"}],"help":{"short":"The resource requests of this container instance."},"options":["requests"],"required":true,"type":"object","var":"$containerGroup.properties.containers[].properties.resources.requests"}],"group":"Properties","help":{"short":"The resource requirements of the container instance."},"options":["resources"],"required":true,"type":"object","var":"$containerGroup.properties.containers[].properties.resources"},{"group":"Properties","help":{"short":"The volume mounts available to the container instance."},"item":{"args":[{"help":{"short":"The path within the container where the volume should be mounted. Must not contain colon (:)."},"options":["mount-path"],"required":true,"type":"string","var":"$containerGroup.properties.containers[].properties.volumeMounts[].mountPath"},{"help":{"short":"The name of the volume mount."},"options":["name"],"required":true,"type":"string","var":"$containerGroup.properties.containers[].properties.volumeMounts[].name"},{"help":{"short":"The flag indicating whether the volume mount is read-only."},"options":["read-only"],"type":"boolean","var":"$containerGroup.properties.containers[].properties.volumeMounts[].readOnly"}],"type":"object"},"options":["volume-mounts"],"type":"array<object>","var":"$containerGroup.properties.containers[].properties.volumeMounts"}],"type":"object"},"options":["containers"],"required":true,"type":"array<object>","var":"$containerGroup.properties.containers"},{"args":[{"args":[{"enum":{"items":[{"name":"ContainerInsights","value":"ContainerInsights"},{"name":"ContainerInstanceLogs","value":"ContainerInstanceLogs"}]},"help":{"short":"The log type to be used."},"options":["log-type"],"type":"string","var":"$containerGroup.properties.diagnostics.logAnalytics.logType"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Metadata for log analytics."},"options":["metadata"],"type":"object","var":"$containerGroup.properties.diagnostics.logAnalytics.metadata"},{"help":{"short":"The workspace id for log analytics"},"options":["workspace-id"],"required":true,"type":"string","var":"$containerGroup.properties.diagnostics.logAnalytics.workspaceId"},{"help":{"short":"The workspace key for log analytics"},"options":["workspace-key"],"required":true,"type":"string","var":"$containerGroup.properties.diagnostics.logAnalytics.workspaceKey"}],"help":{"short":"Container group log analytics information."},"options":["log-analytics"],"type":"object","var":"$containerGroup.properties.diagnostics.logAnalytics"}],"group":"Properties","help":{"short":"The diagnostic information for a container group."},"options":["diagnostics"],"type":"object","var":"$containerGroup.properties.diagnostics"},{"group":"Properties","help":{"short":"The image registry credentials by which the container group is created from."},"item":{"args":[{"help":{"short":"The password for the private registry."},"options":["password"],"type":"string","var":"$containerGroup.properties.imageRegistryCredentials[].password"},{"help":{"short":"The Docker image registry server without a protocol such as \"http\" and \"https\"."},"options":["server"],"required":true,"type":"string","var":"$containerGroup.properties.imageRegistryCredentials[].server"},{"help":{"short":"The username for the private registry."},"options":["username"],"required":true,"type":"string","var":"$containerGroup.properties.imageRegistryCredentials[].username"}],"type":"object"},"options":["image-registry-credentials"],"type":"array<object>","var":"$containerGroup.properties.imageRegistryCredentials"},{"args":[{"help":{"short":"The Dns name label for the IP."},"options":["dns-name-label"],"type":"string","var":"$containerGroup.properties.ipAddress.dnsNameLabel"},{"help":{"short":"The IP exposed to the public internet."},"options":["ip"],"type":"string","var":"$containerGroup.properties.ipAddress.ip"},{"help":{"short":"The list of ports exposed on the container group."},"item":{"args":[{"help":{"short":"The port number."},"options":["port"],"required":true,"type":"integer32","var":"$containerGroup.properties.ipAddress.ports[].port"},{"enum":{"items":[{"name":"TCP","value":"TCP"},{"name":"UDP","value":"UDP"}]},"help":{"short":"The protocol associated with the port."},"options":["protocol"],"type":"string","var":"$containerGroup.properties.ipAddress.ports[].protocol"}],"type":"object"},"options":["ports"],"required":true,"type":"array<object>","var":"$containerGroup.properties.ipAddress.ports"},{"enum":{"items":[{"name":"Private","value":"Private"},{"name":"Public","value":"Public"}]},"help":{"short":"Specifies if the IP is exposed to the public internet."},"options":["type"],"required":true,"type":"string","var":"$containerGroup.properties.ipAddress.type"}],"group":"Properties","help":{"short":"The IP address type of the container group."},"options":["ip-address"],"type":"object","var":"$containerGroup.properties.ipAddress"},{"args":[{"help":{"short":"The identifier for a network profile."},"options":["id"],"required":true,"type":"string","var":"$containerGroup.properties.networkProfile.id"}],"group":"Properties","help":{"short":"The network profile information for a container group."},"options":["network-profile"],"type":"object","var":"$containerGroup.properties.networkProfile"},{"enum":{"items":[{"name":"Linux","value":"Linux"},{"name":"Windows","value":"Windows"}]},"group":"Properties","help":{"short":"The operating system type required by the containers in the container group."},"options":["os-type"],"required":true,"type":"string","var":"$containerGroup.properties.osType"},{"enum":{"items":[{"name":"Always","value":"Always"},{"name":"Never","value":"Never"},{"name":"OnFailure","value":"OnFailure"}]},"group":"Properties","help":{"short":"Restart policy for all containers within the container group.  - `Always` Always restart - `OnFailure` Restart on failure - `Never` Never restart "},"options":["restart-policy"],"type":"string","var":"$containerGroup.properties.restartPolicy"},{"group":"Properties","help":{"short":"The list of volumes that can be mounted by containers in this container group."},"item":{"args":[{"args":[{"help":{"short":"The flag indicating whether the Azure File shared mounted as a volume is read-only."},"options":["read-only"],"type":"boolean","var":"$containerGroup.properties.volumes[].azureFile.readOnly"},{"help":{"short":"The name of the Azure File share to be mounted as a volume."},"options":["share-name"],"required":true,"type":"string","var":"$containerGroup.properties.volumes[].azureFile.shareName"},{"help":{"short":"The storage account access key used to access the Azure File share."},"options":["storage-account-key"],"type":"string","var":"$containerGroup.properties.volumes[].azureFile.storageAccountKey"},{"help":{"short":"The name of the storage account that contains the Azure File share."},"options":["storage-account-name"],"required":true,"type":"string","var":"$containerGroup.properties.volumes[].azureFile.storageAccountName"}],"help":{"short":"The Azure File volume."},"options":["azure-file"],"type":"object","var":"$containerGroup.properties.volumes[].azureFile"},{"blank":{"value":{}},"help":{"short":"The empty directory volume."},"options":["empty-dir"],"type":"object","var":"$containerGroup.properties.volumes[].emptyDir"},{"args":[{"help":{"short":"Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name."},"options":["directory"],"type":"string","var":"$containerGroup.properties.volumes[].gitRepo.directory"},{"help":{"short":"Repository URL"},"options":["repository"],"required":true,"type":"string","var":"$containerGroup.properties.volumes[].gitRepo.repository"},{"help":{"short":"Commit hash for the specified revision."},"options":["revision"],"type":"string","var":"$containerGroup.properties.volumes[].gitRepo.revision"}],"help":{"short":"The git repo volume."},"options":["git-repo"],"type":"object","var":"$containerGroup.properties.volumes[].gitRepo"},{"help":{"short":"The name of the volume."},"options":["name"],"required":true,"type":"string","var":"$containerGroup.properties.volumes[].name"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"The secret volume."},"options":["secret"],"type":"object","var":"$containerGroup.properties.volumes[].secret"}],"type":"object"},"options":["volumes"],"type":"array<object>","var":"$containerGroup.properties.volumes"}],"name":"Properties"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerInstance/containerGroups/{containerGroupName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"containerGroup","props":[{"arg":"$containerGroup.location","name":"location","type":"ResourceLocation"},{"clientFlatten":true,"name":"properties","props":[{"arg":"$containerGroup.properties.containers","item":{"props":[{"arg":"$containerGroup.properties.containers[].name","name":"name","required":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"arg":"$containerGroup.properties.containers[].properties.command","item":{"type":"string"},"name":"command","type":"array<string>"},{"arg":"$containerGroup.properties.containers[].properties.environmentVariables","item":{"props":[{"arg":"$containerGroup.properties.containers[].properties.environmentVariables[].name","name":"name","required":true,"type":"string"},{"arg":"$containerGroup.properties.containers[].properties.environmentVariables[].secureValue","name":"secureValue","type":"string"},{"arg":"$containerGroup.properties.containers[].properties.environmentVariables[].value","name":"value","type":"string"}],"type":"object"},"name":"environmentVariables","type":"array<object>"},{"arg":"$containerGroup.properties.containers[].properties.image","name":"image","required":true,"type":"string"},{"arg":"$containerGroup.properties.containers[].properties.livenessProbe","cls":"ContainerProbe_create","name":"livenessProbe","props":[{"arg":"@ContainerProbe_create.exec","name":"exec","props":[{"arg":"@ContainerProbe_create.exec.command","item":{"type":"string"},"name":"command","type":"array<string>"}],"type":"object"},{"arg":"@ContainerProbe_create.failureThreshold","name":"failureThreshold","type":"integer32"},{"arg":"@ContainerProbe_create.httpGet","name":"httpGet","props":[{"arg":"@ContainerProbe_create.httpGet.path","name":"path","type":"string"},{"arg":"@ContainerProbe_create.httpGet.port","name":"port","required":true,"type":"integer32"},{"arg":"@ContainerProbe_create.httpGet.scheme","enum":{"items":[{"value":"http"},{"value":"https"}]},"name":"scheme","type":"string"}],"type":"object"},{"arg":"@ContainerProbe_create.initialDelaySeconds","name":"initialDelaySeconds","type":"integer32"},{"arg":"@ContainerProbe_create.periodSeconds","name":"periodSeconds","type":"integer32"},{"arg":"@ContainerProbe_create.successThreshold","name":"successThreshold","type":"integer32"},{"arg":"@ContainerProbe_create.timeoutSeconds","name":"timeoutSeconds","type":"integer32"}],"type":"object"},{"arg":"$containerGroup.properties.containers[].properties.ports","item":{"props":[{"arg":"$containerGroup.properties.containers[].properties.ports[].port","name":"port","required":true,"type":"integer32"},{"arg":"$containerGroup.properties.containers[].properties.ports[].protocol","enum":{"items":[{"value":"TCP"},{"value":"UDP"}]},"name":"protocol","type":"string"}],"type":"object"},"name":"ports","type":"array<object>"},{"arg":"$containerGroup.properties.containers[].properties.readinessProbe","name":"readinessProbe","type":"@ContainerProbe_create"},{"arg":"$containerGroup.properties.containers[].properties.resources","name":"resources","props":[{"arg":"$containerGroup.properties.containers[].properties.resources.limits","name":"limits","props":[{"arg":"$containerGroup.properties.containers[].properties.resources.limits.cpu","name":"cpu","type":"float64"},{"arg":"$containerGroup.properties.containers[].properties.resources.limits.memoryInGB","name":"memoryInGB","type":"float64"}],"type":"object"},{"arg":"$containerGroup.properties.containers[].properties.resources.requests","name":"requests","props":[{"arg":"$containerGroup.properties.containers[].properties.resources.requests.cpu","name":"cpu","required":true,"type":"float64"},{"arg":"$containerGroup.properties.containers[].properties.resources.requests.memoryInGB","name":"memoryInGB","required":true,"type":"float64"}],"required":true,"type":"object"}],"required":true,"type":"object"},{"arg":"$containerGroup.properties.containers[].properties.volumeMounts","item":{"props":[{"arg":"$containerGroup.properties.containers[].properties.volumeMounts[].mountPath","name":"mountPath","required":true,"type":"string"},{"arg":"$containerGroup.properties.containers[].properties.volumeMounts[].name","name":"name","required":true,"type":"string"},{"arg":"$containerGroup.properties.containers[].properties.volumeMounts[].readOnly","name":"readOnly","type":"boolean"}],"type":"object"},"name":"volumeMounts","type":"array<object>"}],"required":true,"type":"object"}],"type":"object"},"name":"containers","required":true,"type":"array<object>"},{"arg":"$containerGroup.properties.diagnostics","name":"diagnostics","props":[{"arg":"$containerGroup.properties.diagnostics.logAnalytics","name":"logAnalytics","props":[{"arg":"$containerGroup.properties.diagnostics.logAnalytics.logType","enum":{"items":[{"value":"ContainerInsights"},{"value":"ContainerInstanceLogs"}]},"name":"logType","type":"string"},{"additionalProps":{"item":{"type":"string"}},"arg":"$containerGroup.properties.diagnostics.logAnalytics.metadata","name":"metadata","type":"object"},{"arg":"$containerGroup.properties.diagnostics.logAnalytics.workspaceId","name":"workspaceId","required":true,"type":"string"},{"arg":"$containerGroup.properties.diagnostics.logAnalytics.workspaceKey","name":"workspaceKey","required":true,"type":"string"}],"type":"object"}],"type":"object"},{"arg":"$containerGroup.properties.imageRegistryCredentials","item":{"props":[{"arg":"$containerGroup.properties.imageRegistryCredentials[].password","name":"password","type":"string"},{"arg":"$containerGroup.properties.imageRegistryCredentials[].server","name":"server","required":true,"type":"string"},{"arg":"$containerGroup.properties.imageRegistryCredentials[].username","name":"username","required":true,"type":"string"}],"type":"object"},"name":"imageRegistryCredentials","type":"array<object>"},{"arg":"$containerGroup.properties.ipAddress","name":"ipAddress","props":[{"arg":"$containerGroup.properties.ipAddress.dnsNameLabel","name":"dnsNameLabel","type":"string"},{"arg":"$containerGroup.properties.ipAddress.ip","name":"ip","type":"string"},{"arg":"$containerGroup.properties.ipAddress.ports","item":{"props":[{"arg":"$containerGroup.properties.ipAddress.ports[].port","name":"port","required":true,"type":"integer32"},{"arg":"$containerGroup.properties.ipAddress.ports[].protocol","enum":{"items":[{"value":"TCP"},{"value":"UDP"}]},"name":"protocol","type":"string"}],"type":"object"},"name":"ports","required":true,"type":"array<object>"},{"arg":"$containerGroup.properties.ipAddress.type","enum":{"items":[{"value":"Private"},{"value":"Public"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"arg":"$containerGroup.properties.networkProfile","name":"networkProfile","props":[{"arg":"$containerGroup.properties.networkProfile.id","name":"id","required":true,"type":"string"}],"type":"object"},{"arg":"$containerGroup.properties.osType","enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"osType","required":true,"type":"string"},{"arg":"$containerGroup.properties.restartPolicy","enum":{"items":[{"value":"Always"},{"value":"Never"},{"value":"OnFailure"}]},"name":"restartPolicy","type":"string"},{"arg":"$containerGroup.properties.volumes","item":{"props":[{"arg":"$containerGroup.properties.volumes[].azureFile","name":"azureFile","props":[{"arg":"$containerGroup.properties.volumes[].azureFile.readOnly","name":"readOnly","type":"boolean"},{"arg":"$containerGroup.properties.volumes[].azureFile.shareName","name":"shareName","required":true,"type":"string"},{"arg":"$containerGroup.properties.volumes[].azureFile.storageAccountKey","name":"storageAccountKey","type":"string"},{"arg":"$containerGroup.properties.volumes[].azureFile.storageAccountName","name":"storageAccountName","required":true,"type":"string"}],"type":"object"},{"arg":"$containerGroup.properties.volumes[].emptyDir","name":"emptyDir","type":"object"},{"arg":"$containerGroup.properties.volumes[].gitRepo","name":"gitRepo","props":[{"arg":"$containerGroup.properties.volumes[].gitRepo.directory","name":"directory","type":"string"},{"arg":"$containerGroup.properties.volumes[].gitRepo.repository","name":"repository","required":true,"type":"string"},{"arg":"$containerGroup.properties.volumes[].gitRepo.revision","name":"revision","type":"string"}],"type":"object"},{"arg":"$containerGroup.properties.volumes[].name","name":"name","required":true,"type":"string"},{"additionalProps":{"item":{"type":"string"}},"arg":"$containerGroup.properties.volumes[].secret","name":"secret","type":"object"}],"type":"object"},"name":"volumes","type":"array<object>"}],"required":true,"type":"object"},{"additionalProps":{"item":{"type":"string"}},"arg":"$containerGroup.tags","name":"tags","type":"object"}],"required":true,"type":"object"}}},"method":"put","path":{"params":[{"arg":"$Path.containerGroupName","name":"containerGroupName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"string"}]},"query":{"consts":[{"const":true,"default":{"value":"2018-09-01"},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerInstance/containerGroups/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"location","type":"ResourceLocation"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"item":{"props":[{"name":"name","required":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"item":{"type":"string"},"name":"command","type":"array<string>"},{"item":{"props":[{"name":"name","required":true,"type":"string"},{"name":"secureValue","type":"string"},{"name":"value","type":"string"}],"type":"object"},"name":"environmentVariables","type":"array<object>"},{"name":"image","required":true,"type":"string"},{"name":"instanceView","props":[{"cls":"ContainerState_read","name":"currentState","props":[{"name":"detailStatus","type":"string"},{"name":"exitCode","type":"integer"},{"format":{"protocol":"iso"},"name":"finishTime","type":"dateTime"},{"format":{"protocol":"iso"},"name":"startTime","type":"dateTime"},{"name":"state","type":"string"}],"readOnly":true,"type":"object"},{"item":{"cls":"Event_read","props":[{"name":"count","type":"integer"},{"format":{"protocol":"iso"},"name":"firstTimestamp","type":"dateTime"},{"format":{"protocol":"iso"},"name":"lastTimestamp","type":"dateTime"},{"name":"message","type":"string"},{"name":"name","type":"string"},{"name":"type","type":"string"}],"type":"object"},"name":"events","readOnly":true,"type":"array<object>"},{"name":"previousState","readOnly":true,"type":"@ContainerState_read"},{"name":"restartCount","readOnly":true,"type":"integer"}],"readOnly":true,"type":"object"},{"cls":"ContainerProbe_read","name":"livenessProbe","props":[{"name":"exec","props":[{"item":{"type":"string"},"name":"command","type":"array<string>"}],"type":"object"},{"name":"failureThreshold","type":"integer32"},{"name":"httpGet","props":[{"name":"path","type":"string"},{"name":"port","required":true,"type":"integer32"},{"enum":{"items":[{"value":"http"},{"value":"https"}]},"name":"scheme","type":"string"}],"type":"object"},{"name":"initialDelaySeconds","type":"integer32"},{"name":"periodSeconds","type":"integer32"},{"name":"successThreshold","type":"integer32"},{"name":"timeoutSeconds","type":"integer32"}],"type":"object"},{"item":{"props":[{"name":"port","required":true,"type":"integer32"},{"enum":{"items":[{"value":"TCP"},{"value":"UDP"}]},"name":"protocol","type":"string"}],"type":"object"},"name":"ports","type":"array<object>"},{"name":"readinessProbe","type":"@ContainerProbe_read"},{"name":"resources","props":[{"name":"limits","props":[{"name":"cpu","type":"float64"},{"name":"memoryInGB","type":"float64"}],"type":"object"},{"name":"requests","props":[{"name":"cpu","required":true,"type":"float64"},{"name":"memoryInGB","required":true,"type":"float64"}],"required":true,"type":"object"}],"required":true,"type":"object"},{"item":{"props":[{"name":"mountPath","required":true,"type":"string"},{"name":"name","required":true,"type":"string"},{"name":"readOnly","type":"boolean"}],"type":"object"},"name":"volumeMounts","type":"array<object>"}],"required":true,"type":"object"}],"type":"object"},"name":"containers","required":true,"type":"array<object>"},{"name":"diagnostics","props":[{"name":"logAnalytics","props":[{"enum":{"items":[{"value":"ContainerInsights"},{"value":"ContainerInstanceLogs"}]},"name":"logType","type":"string"},{"additionalProps":{"item":{"type":"string"}},"name":"metadata","type":"object"},{"name":"workspaceId","required":true,"type":"string"},{"name":"workspaceKey","required":true,"type":"string"}],"type":"object"}],"type":"object"},{"item":{"props":[{"name":"password","type":"string"},{"name":"server","required":true,"type":"string"},{"name":"username","required":true,"type":"string"}],"type":"object"},"name":"imageRegistryCredentials","type":"array<object>"},{"name":"instanceView","props":[{"item":{"type":"@Event_read"},"name":"events","readOnly":true,"type":"array<@Event_read>"},{"name":"state","readOnly":true,"type":"string"}],"readOnly":true,"type":"object"},{"name":"ipAddress","props":[{"name":"dnsNameLabel","type":"string"},{"name":"fqdn","readOnly":true,"type":"string"},{"name":"ip","type":"string"},{"item":{"props":[{"name":"port","required":true,"type":"integer32"},{"enum":{"items":[{"value":"TCP"},{"value":"UDP"}]},"name":"protocol","type":"string"}],"type":"object"},"name":"ports","required":true,"type":"array<object>"},{"enum":{"items":[{"value":"Private"},{"value":"Public"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"name":"networkProfile","props":[{"name":"id","required":true,"type":"string"}],"type":"object"},{"enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"osType","required":true,"type":"string"},{"name":"provisioningState","readOnly":true,"type":"string"},{"enum":{"items":[{"value":"Always"},{"value":"Never"},{"value":"OnFailure"}]},"name":"restartPolicy","type":"string"},{"item":{"props":[{"name":"azureFile","props":[{"name":"readOnly","type":"boolean"},{"name":"shareName","required":true,"type":"string"},{"name":"storageAccountKey","type":"string"},{"name":"storageAccountName","required":true,"type":"string"}],"type":"object"},{"name":"emptyDir","type":"object"},{"name":"gitRepo","props":[{"name":"directory","type":"string"},{"name":"repository","required":true,"type":"string"},{"name":"revision","type":"string"}],"type":"object"},{"name":"name","required":true,"type":"string"},{"additionalProps":{"item":{"type":"string"}},"name":"secret","type":"object"}],"type":"object"},"name":"volumes","type":"array<object>"}],"required":true,"type":"object"},{"additionalProps":{"item":{"type":"string"}},"name":"tags","type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200,201]},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"azure-async-operation"},"operationId":"ContainerGroups_CreateOrUpdate"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerinstance/containergroups/{}","plane":"mgmt-plane"}]}