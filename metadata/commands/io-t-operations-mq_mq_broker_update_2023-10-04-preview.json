{"argGroups":[{"args":[{"format":{"pattern":"^[a-zA-Z0-9-]{3,24}$"},"help":{"short":"Name of MQ broker resource"},"idPart":"child_name_1","options":["n","name","broker-name"],"required":true,"type":"string","var":"$Path.brokerName"},{"format":{"pattern":"^[a-zA-Z0-9-]{3,24}$"},"help":{"short":"Name of MQ resource"},"idPart":"name","options":["mq-name"],"required":true,"type":"string","var":"$Path.mqName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"args":[{"help":{"short":"Image pull policy."},"options":["pull-policy"],"type":"string","var":"@ContainerImageUpdate_update.pullPolicy"},{"help":{"short":"Image pull secrets."},"options":["pull-secrets"],"type":"string","var":"@ContainerImageUpdate_update.pullSecrets"},{"help":{"short":"The Docker image name."},"options":["repository"],"type":"string","var":"@ContainerImageUpdate_update.repository"},{"help":{"short":"The Docker  image tag."},"options":["tag"],"type":"string","var":"@ContainerImageUpdate_update.tag"}],"cls":"ContainerImageUpdate_update","group":"Properties","help":{"short":"The details of Authentication Docker Image."},"options":["auth-image"],"type":"object","var":"$properties.properties.authImage"},{"group":"Properties","help":{"short":"The details of Broker Docker Image."},"options":["broker-image"],"type":"@ContainerImageUpdate_update","var":"$properties.properties.brokerImage"},{"args":[{"help":{"short":"Toleration effect."},"options":["effect"],"type":"string","var":"@NodeTolerationsUpdate_update.effect"},{"help":{"short":"Toleration key."},"options":["key"],"type":"string","var":"@NodeTolerationsUpdate_update.key"},{"help":{"short":"Toleration operator like 'Exists', 'Equal' etc."},"options":["operator"],"type":"string","var":"@NodeTolerationsUpdate_update.operator"},{"help":{"short":"Toleration Value."},"options":["value"],"type":"string","var":"@NodeTolerationsUpdate_update.value"}],"cls":"NodeTolerationsUpdate_update","group":"Properties","help":{"short":"The details of Node Tolerations for Broker Pods."},"options":["broker-node-tolerations"],"type":"object","var":"$properties.properties.brokerNodeTolerations"},{"args":[{"args":[{"format":{"maximum":65535,"minimum":0},"help":{"short":"Partitions is desired number of physical backend chains of the given distributed MQTT broker."},"options":["partitions"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.partitions"},{"format":{"maximum":65535,"minimum":0},"help":{"short":"Redundancy Factor is desired numbers of broker instances in one chain."},"options":["redundancy-factor"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.redundancyFactor"},{"help":{"short":"Defines whether disk transfer is enabled or not."},"options":["temporary-disk-transfer-enabled"],"type":"boolean","var":"$properties.properties.cardinality.backendChain.temporaryDiskTransferEnabled"},{"format":{"maximum":100,"minimum":0},"help":{"short":"Defines the percentage usage of buffer pool above which disk transfer will start."},"options":["temporary-disk-transfer-high-watermark-percent"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.temporaryDiskTransferHighWatermarkPercent"},{"format":{"maximum":100,"minimum":0},"help":{"short":"Defines the percentage usage of buffer pool below which disk transfer will stop."},"options":["temporary-disk-transfer-low-watermark-percent"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.temporaryDiskTransferLowWatermarkPercent"},{"format":{"maximum":100,"minimum":0},"help":{"short":"Defines the limits for memory usage percent of the backend instances of the MQTT broker."},"options":["temporary-max-backend-mem-usage-percent"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.temporaryMaxBackendMemUsagePercent"},{"args":[{"format":{"maximum":65535,"minimum":0},"help":{"short":"Maximum number of messages a client can have inflight."},"options":["max-inflight-messages"],"type":"integer32","var":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightMessages"},{"format":{"maximum":65535,"minimum":0},"help":{"short":"Maximum number of patch inflight per node."},"options":["max-inflight-patches"],"type":"integer32","var":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightPatches"},{"format":{"maximum":65535,"minimum":0},"help":{"short":"Maximum number of patch a client can have in flight."},"options":["max-inflight-patches-per-client"],"type":"integer32","var":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightPatchesPerClient"},{"format":{"maximum":4294967295,"minimum":0},"help":{"short":"Maximum message expiry interval, in seconds."},"options":["max-message-expiry-secs"],"type":"integer64","var":"@TemporaryResourceLimitsConfigUpdate_update.maxMessageExpirySecs"},{"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Maximum receive for external clients."},"options":["max-queued-messages"],"type":"integer64","var":"@TemporaryResourceLimitsConfigUpdate_update.maxQueuedMessages"},{"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Maximum receive QoS0 for external clients."},"options":["max-queued-qos0-messages"],"type":"integer64","var":"@TemporaryResourceLimitsConfigUpdate_update.maxQueuedQos0Messages"},{"format":{"maximum":4294967295,"minimum":0},"help":{"short":"Maximum session expiry interval, in seconds."},"options":["max-session-expiry-secs"],"type":"integer64","var":"@TemporaryResourceLimitsConfigUpdate_update.maxSessionExpirySecs"}],"cls":"TemporaryResourceLimitsConfigUpdate_update","help":{"short":"Defines the limits for resources of the backend instances of the MQTT broker."},"options":["temporary-resource-limits"],"type":"object","var":"$properties.properties.cardinality.backendChain.temporaryResourceLimits"},{"default":{"value":1},"format":{"maximum":65535,"minimum":0},"help":{"short":"Number of logical backend workers per pod."},"options":["workers"],"type":"integer32","var":"$properties.properties.cardinality.backendChain.workers"}],"help":{"short":"The backend broker desired properties"},"options":["backend-chain"],"type":"object","var":"$properties.properties.cardinality.backendChain"},{"args":[{"format":{"maximum":65535,"minimum":0},"help":{"short":"Replicas is desired number of frontend replicas of the given distributed MQTT broker."},"options":["replicas"],"type":"integer32","var":"$properties.properties.cardinality.frontend.replicas"},{"help":{"short":"Defines the limits for resources of the frontend instances of the MQTT broker."},"options":["temporary-resource-limits"],"type":"@TemporaryResourceLimitsConfigUpdate_update","var":"$properties.properties.cardinality.frontend.temporaryResourceLimits"},{"default":{"value":2},"format":{"maximum":65535,"minimum":0},"help":{"short":"Number of logical frontend workers per pod."},"options":["workers"],"type":"integer32","var":"$properties.properties.cardinality.frontend.workers"}],"help":{"short":"The frontend broker desired properties"},"options":["frontend"],"type":"object","var":"$properties.properties.cardinality.frontend"}],"group":"Properties","help":{"short":"The cardinality details of the broker."},"options":["cardinality"],"type":"object","var":"$properties.properties.cardinality"},{"args":[{"help":{"short":"Diagnostic Service endpoint"},"options":["diagnostic-service-endpoint"],"type":"string","var":"$properties.properties.diagnostics.diagnosticServiceEndpoint"},{"default":{"value":true},"help":{"short":"Knob to enable/disable metrics. Default = true"},"options":["enable-metrics"],"type":"boolean","var":"$properties.properties.diagnostics.enableMetrics"},{"default":{"value":true},"help":{"short":"Enable self check on Broker via Probe."},"options":["enable-self-check"],"type":"boolean","var":"$properties.properties.diagnostics.enableSelfCheck"},{"default":{"value":true},"help":{"short":"Enable self tracing on the Broker so that every selfCheckFrequencySeconds a random message is traced even if it didn't have trace context."},"options":["enable-self-tracing"],"type":"boolean","var":"$properties.properties.diagnostics.enableSelfTracing"},{"default":{"value":true},"help":{"short":"Knob to enable/disable entire tracing infrastructure."},"options":["enable-tracing"],"type":"boolean","var":"$properties.properties.diagnostics.enableTracing"},{"default":{"value":"text"},"help":{"short":"Format for the logs generated."},"options":["log-format"],"type":"string","var":"$properties.properties.diagnostics.logFormat"},{"default":{"value":"info,hyper=off,kube_client=off,tower=off,conhash=off,h2=off"},"help":{"short":"Log level for the Broker."},"options":["log-level"],"type":"string","var":"$properties.properties.diagnostics.logLevel"},{"default":{"value":60},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Maximum time for the CellMap to live."},"options":["max-cell-map-lifetime"],"type":"integer64","var":"$properties.properties.diagnostics.maxCellMapLifetime"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Metric update frequency in seconds."},"options":["metric-update-frequency-seconds"],"type":"integer64","var":"$properties.properties.diagnostics.metricUpdateFrequencySeconds"},{"default":{"value":"sample.azurecr.io/diagnostics-probe:0.5.0"},"help":{"short":"Probe Image to run."},"options":["probe-image"],"type":"string","var":"$properties.properties.diagnostics.probeImage"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Frequency for the self check to run."},"options":["self-check-frequency-seconds"],"type":"integer64","var":"$properties.properties.diagnostics.selfCheckFrequencySeconds"},{"default":{"value":15},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"Time out period of the self check."},"options":["self-check-timeout-seconds"],"type":"integer64","var":"$properties.properties.diagnostics.selfCheckTimeoutSeconds"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"The frequency at which selfTrace should run."},"options":["self-trace-frequency-seconds"],"type":"integer64","var":"$properties.properties.diagnostics.selfTraceFrequencySeconds"},{"default":{"value":1000},"format":{"maximum":9223372036853999616,"minimum":0},"help":{"short":"The number of the spans generated by the Tracing."},"options":["span-channel-capacity"],"type":"integer64","var":"$properties.properties.diagnostics.spanChannelCapacity"}],"group":"Properties","help":{"short":"The diagnostic details of the broker deployment."},"options":["diagnostics"],"type":"object","var":"$properties.properties.diagnostics"},{"args":[{"args":[{"help":{"short":"AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"},"item":{"type":"string"},"options":["access-modes"],"type":"array<string>","var":"@VolumeClaimSpecUpdate_update.accessModes"},{"args":[{"help":{"short":"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."},"options":["api-group"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSource.apiGroup"},{"help":{"short":"Kind is the type of resource being referenced"},"options":["kind"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSource.kind"},{"help":{"short":"Name is the name of resource being referenced"},"options":["name"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSource.name"}],"help":{"short":"This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."},"options":["data-source"],"type":"object","var":"@VolumeClaimSpecUpdate_update.dataSource"},{"args":[{"help":{"short":"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."},"options":["api-group"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSourceRef.apiGroup"},{"help":{"short":"Kind is the type of resource being referenced"},"options":["kind"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSourceRef.kind"},{"help":{"short":"Name is the name of resource being referenced"},"options":["name"],"type":"string","var":"@VolumeClaimSpecUpdate_update.dataSourceRef.name"}],"help":{"short":"Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Alpha) Using this field requires the AnyVolumeDataSource feature gate to be enabled."},"options":["data-source-ref"],"type":"object","var":"@VolumeClaimSpecUpdate_update.dataSourceRef"},{"args":[{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"options":["limits"],"type":"object","var":"@VolumeClaimSpecUpdate_update.resources.limits"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"options":["requests"],"type":"object","var":"@VolumeClaimSpecUpdate_update.resources.requests"}],"help":{"short":"Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"},"options":["resources"],"type":"object","var":"@VolumeClaimSpecUpdate_update.resources"},{"args":[{"help":{"short":"MatchExpressions is a list of label selector requirements. The requirements are ANDed."},"item":{"args":[{"help":{"short":"key is the label key that the selector applies to."},"options":["key"],"required":true,"type":"string","var":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].key"},{"help":{"short":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."},"options":["operator"],"required":true,"type":"string","var":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].operator"},{"help":{"short":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."},"item":{"type":"string"},"options":["values"],"type":"array<string>","var":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].values"}],"type":"object"},"options":["match-expressions"],"type":"array<object>","var":"@VolumeClaimSpecUpdate_update.selector.matchExpressions"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."},"options":["match-labels"],"type":"object","var":"@VolumeClaimSpecUpdate_update.selector.matchLabels"}],"help":{"short":"A label query over volumes to consider for binding."},"options":["selector"],"type":"object","var":"@VolumeClaimSpecUpdate_update.selector"},{"help":{"short":"Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"},"options":["storage-class-name"],"type":"string","var":"@VolumeClaimSpecUpdate_update.storageClassName"},{"help":{"short":"volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."},"options":["volume-mode"],"type":"string","var":"@VolumeClaimSpecUpdate_update.volumeMode"},{"help":{"short":"VolumeName is the binding reference to the PersistentVolume backing this claim."},"options":["volume-name"],"type":"string","var":"@VolumeClaimSpecUpdate_update.volumeName"}],"cls":"VolumeClaimSpecUpdate_update","help":{"short":"Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details."},"options":["ephemeral-volume-claim-spec"],"type":"object","var":"$properties.properties.diskBackedMessageBufferSettings.ephemeralVolumeClaimSpec"},{"help":{"short":"The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details."},"options":["max-size"],"type":"string","var":"$properties.properties.diskBackedMessageBufferSettings.maxSize"},{"help":{"short":"Use the specified persistent volume claim template to mount a persistent volume for the message buffer."},"options":["persistent-volume-claim-spec"],"type":"@VolumeClaimSpecUpdate_update","var":"$properties.properties.diskBackedMessageBufferSettings.persistentVolumeClaimSpec"}],"group":"Properties","help":{"short":"The settings of the disk-backed message buffer."},"options":["disk-backed-message-buffer-settings"],"type":"object","var":"$properties.properties.diskBackedMessageBufferSettings"},{"default":{"value":true},"group":"Properties","help":{"short":"The setting to enable or disable encryption of internal Traffic."},"options":["encrypt-internal-traffic"],"type":"boolean","var":"$properties.properties.encryptInternalTraffic"},{"group":"Properties","help":{"short":"The details of Health Manager Docker Image."},"options":["health-manager-image"],"type":"@ContainerImageUpdate_update","var":"$properties.properties.healthManagerImage"},{"group":"Properties","help":{"short":"The details of Node Tolerations for Health Manager Pods."},"options":["health-manager-node-tolerations"],"type":"@NodeTolerationsUpdate_update","var":"$properties.properties.healthManagerNodeTolerations"},{"args":[{"default":{"value":"720h"},"help":{"short":"Duration of CA cert."},"options":["duration"],"type":"string","var":"$properties.properties.internalCerts.duration"},{"args":[{"default":{"value":"ECDSA"},"help":{"short":"algorithm for private key."},"options":["algorithm"],"type":"string","var":"$properties.properties.internalCerts.privateKey.algorithm"},{"default":{"value":"Always"},"help":{"short":"cert-manager rotationPolicy."},"options":["rotation-policy"],"type":"string","var":"$properties.properties.internalCerts.privateKey.rotationPolicy"},{"default":{"value":256},"format":{"maximum":65535,"minimum":0},"help":{"short":"size of private key."},"options":["size"],"type":"integer32","var":"$properties.properties.internalCerts.privateKey.size"}],"help":{"short":"Cert Manager private key."},"options":["private-key"],"type":"object","var":"$properties.properties.internalCerts.privateKey"},{"default":{"value":"240h"},"help":{"short":"Renew before time of CA cert."},"options":["renew-before"],"type":"string","var":"$properties.properties.internalCerts.renewBefore"}],"group":"Properties","help":{"short":"Details of the internal CA cert that will be used to secure communication between pods."},"options":["internal-certs"],"type":"object","var":"$properties.properties.internalCerts"},{"default":{"value":"medium"},"enum":{"items":[{"name":"high","value":"high"},{"name":"low","value":"low"},{"name":"medium","value":"medium"},{"name":"tiny","value":"tiny"}]},"group":"Properties","help":{"short":"Memory profile of broker."},"options":["memory-profile"],"type":"string","var":"$properties.properties.memoryProfile"},{"enum":{"items":[{"name":"auto","value":"auto"},{"name":"distributed","value":"distributed"}]},"group":"Properties","help":{"short":"The Running Mode of the Broker Deployment."},"options":["mode"],"type":"string","var":"$properties.properties.mode"},{"additionalProps":{"item":{"type":"string"}},"group":"Properties","help":{"short":"Resource tags."},"options":["tags"],"type":"object","var":"$properties.tags"}],"name":"Properties"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperationsMQ/mq/{mqName}/broker/{brokerName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"properties","props":[{"clientFlatten":true,"name":"properties","props":[{"arg":"$properties.properties.authImage","cls":"ContainerImageUpdate_update","name":"authImage","props":[{"arg":"@ContainerImageUpdate_update.pullPolicy","name":"pullPolicy","type":"string"},{"arg":"@ContainerImageUpdate_update.pullSecrets","name":"pullSecrets","type":"string"},{"arg":"@ContainerImageUpdate_update.repository","name":"repository","type":"string"},{"arg":"@ContainerImageUpdate_update.tag","name":"tag","type":"string"}],"type":"object"},{"arg":"$properties.properties.brokerImage","name":"brokerImage","type":"@ContainerImageUpdate_update"},{"arg":"$properties.properties.brokerNodeTolerations","cls":"NodeTolerationsUpdate_update","name":"brokerNodeTolerations","props":[{"arg":"@NodeTolerationsUpdate_update.effect","name":"effect","type":"string"},{"arg":"@NodeTolerationsUpdate_update.key","name":"key","type":"string"},{"arg":"@NodeTolerationsUpdate_update.operator","name":"operator","type":"string"},{"arg":"@NodeTolerationsUpdate_update.value","name":"value","type":"string"}],"type":"object"},{"arg":"$properties.properties.cardinality","name":"cardinality","props":[{"arg":"$properties.properties.cardinality.backendChain","name":"backendChain","props":[{"arg":"$properties.properties.cardinality.backendChain.partitions","format":{"maximum":65535,"minimum":0},"name":"partitions","type":"integer32"},{"arg":"$properties.properties.cardinality.backendChain.redundancyFactor","format":{"maximum":65535,"minimum":0},"name":"redundancyFactor","type":"integer32"},{"arg":"$properties.properties.cardinality.backendChain.temporaryDiskTransferEnabled","name":"temporaryDiskTransferEnabled","type":"boolean"},{"arg":"$properties.properties.cardinality.backendChain.temporaryDiskTransferHighWatermarkPercent","format":{"maximum":100,"minimum":0},"name":"temporaryDiskTransferHighWatermarkPercent","type":"integer32"},{"arg":"$properties.properties.cardinality.backendChain.temporaryDiskTransferLowWatermarkPercent","format":{"maximum":100,"minimum":0},"name":"temporaryDiskTransferLowWatermarkPercent","type":"integer32"},{"arg":"$properties.properties.cardinality.backendChain.temporaryMaxBackendMemUsagePercent","format":{"maximum":100,"minimum":0},"name":"temporaryMaxBackendMemUsagePercent","type":"integer32"},{"arg":"$properties.properties.cardinality.backendChain.temporaryResourceLimits","cls":"TemporaryResourceLimitsConfigUpdate_update","name":"temporaryResourceLimits","props":[{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightMessages","format":{"maximum":65535,"minimum":0},"name":"maxInflightMessages","type":"integer32"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightPatches","format":{"maximum":65535,"minimum":0},"name":"maxInflightPatches","type":"integer32"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxInflightPatchesPerClient","format":{"maximum":65535,"minimum":0},"name":"maxInflightPatchesPerClient","type":"integer32"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxMessageExpirySecs","format":{"maximum":4294967295,"minimum":0},"name":"maxMessageExpirySecs","type":"integer64"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxQueuedMessages","format":{"maximum":9223372036853999616,"minimum":0},"name":"maxQueuedMessages","type":"integer64"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxQueuedQos0Messages","format":{"maximum":9223372036853999616,"minimum":0},"name":"maxQueuedQos0Messages","type":"integer64"},{"arg":"@TemporaryResourceLimitsConfigUpdate_update.maxSessionExpirySecs","format":{"maximum":4294967295,"minimum":0},"name":"maxSessionExpirySecs","type":"integer64"}],"type":"object"},{"arg":"$properties.properties.cardinality.backendChain.workers","default":{"value":1},"format":{"maximum":65535,"minimum":0},"name":"workers","type":"integer32"}],"type":"object"},{"arg":"$properties.properties.cardinality.frontend","name":"frontend","props":[{"arg":"$properties.properties.cardinality.frontend.replicas","format":{"maximum":65535,"minimum":0},"name":"replicas","type":"integer32"},{"arg":"$properties.properties.cardinality.frontend.temporaryResourceLimits","name":"temporaryResourceLimits","type":"@TemporaryResourceLimitsConfigUpdate_update"},{"arg":"$properties.properties.cardinality.frontend.workers","default":{"value":2},"format":{"maximum":65535,"minimum":0},"name":"workers","type":"integer32"}],"type":"object"}],"type":"object"},{"arg":"$properties.properties.diagnostics","name":"diagnostics","props":[{"arg":"$properties.properties.diagnostics.diagnosticServiceEndpoint","name":"diagnosticServiceEndpoint","type":"string"},{"arg":"$properties.properties.diagnostics.enableMetrics","default":{"value":true},"name":"enableMetrics","type":"boolean"},{"arg":"$properties.properties.diagnostics.enableSelfCheck","default":{"value":true},"name":"enableSelfCheck","type":"boolean"},{"arg":"$properties.properties.diagnostics.enableSelfTracing","default":{"value":true},"name":"enableSelfTracing","type":"boolean"},{"arg":"$properties.properties.diagnostics.enableTracing","default":{"value":true},"name":"enableTracing","type":"boolean"},{"arg":"$properties.properties.diagnostics.logFormat","default":{"value":"text"},"name":"logFormat","type":"string"},{"arg":"$properties.properties.diagnostics.logLevel","default":{"value":"info,hyper=off,kube_client=off,tower=off,conhash=off,h2=off"},"name":"logLevel","type":"string"},{"arg":"$properties.properties.diagnostics.maxCellMapLifetime","default":{"value":60},"format":{"maximum":9223372036853999616,"minimum":0},"name":"maxCellMapLifetime","type":"integer64"},{"arg":"$properties.properties.diagnostics.metricUpdateFrequencySeconds","default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"metricUpdateFrequencySeconds","type":"integer64"},{"arg":"$properties.properties.diagnostics.probeImage","default":{"value":"sample.azurecr.io/diagnostics-probe:0.5.0"},"name":"probeImage","type":"string"},{"arg":"$properties.properties.diagnostics.selfCheckFrequencySeconds","default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfCheckFrequencySeconds","type":"integer64"},{"arg":"$properties.properties.diagnostics.selfCheckTimeoutSeconds","default":{"value":15},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfCheckTimeoutSeconds","type":"integer64"},{"arg":"$properties.properties.diagnostics.selfTraceFrequencySeconds","default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfTraceFrequencySeconds","type":"integer64"},{"arg":"$properties.properties.diagnostics.spanChannelCapacity","default":{"value":1000},"format":{"maximum":9223372036853999616,"minimum":0},"name":"spanChannelCapacity","type":"integer64"}],"type":"object"},{"arg":"$properties.properties.diskBackedMessageBufferSettings","name":"diskBackedMessageBufferSettings","props":[{"arg":"$properties.properties.diskBackedMessageBufferSettings.ephemeralVolumeClaimSpec","cls":"VolumeClaimSpecUpdate_update","name":"ephemeralVolumeClaimSpec","props":[{"arg":"@VolumeClaimSpecUpdate_update.accessModes","item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"arg":"@VolumeClaimSpecUpdate_update.dataSource","name":"dataSource","props":[{"arg":"@VolumeClaimSpecUpdate_update.dataSource.apiGroup","name":"apiGroup","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.dataSource.kind","name":"kind","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.dataSource.name","name":"name","type":"string"}],"type":"object"},{"arg":"@VolumeClaimSpecUpdate_update.dataSourceRef","name":"dataSourceRef","props":[{"arg":"@VolumeClaimSpecUpdate_update.dataSourceRef.apiGroup","name":"apiGroup","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.dataSourceRef.kind","name":"kind","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.dataSourceRef.name","name":"name","type":"string"}],"type":"object"},{"arg":"@VolumeClaimSpecUpdate_update.resources","name":"resources","props":[{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimSpecUpdate_update.resources.limits","name":"limits","type":"object"},{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimSpecUpdate_update.resources.requests","name":"requests","type":"object"}],"type":"object"},{"arg":"@VolumeClaimSpecUpdate_update.selector","name":"selector","props":[{"arg":"@VolumeClaimSpecUpdate_update.selector.matchExpressions","item":{"props":[{"arg":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].key","name":"key","required":true,"type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].operator","name":"operator","required":true,"type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.selector.matchExpressions[].values","item":{"type":"string"},"name":"values","type":"array<string>"}],"type":"object"},"name":"matchExpressions","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimSpecUpdate_update.selector.matchLabels","name":"matchLabels","type":"object"}],"type":"object"},{"arg":"@VolumeClaimSpecUpdate_update.storageClassName","name":"storageClassName","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.volumeMode","name":"volumeMode","type":"string"},{"arg":"@VolumeClaimSpecUpdate_update.volumeName","name":"volumeName","type":"string"}],"type":"object"},{"arg":"$properties.properties.diskBackedMessageBufferSettings.maxSize","name":"maxSize","type":"string"},{"arg":"$properties.properties.diskBackedMessageBufferSettings.persistentVolumeClaimSpec","name":"persistentVolumeClaimSpec","type":"@VolumeClaimSpecUpdate_update"}],"type":"object"},{"arg":"$properties.properties.encryptInternalTraffic","default":{"value":true},"name":"encryptInternalTraffic","type":"boolean"},{"arg":"$properties.properties.healthManagerImage","name":"healthManagerImage","type":"@ContainerImageUpdate_update"},{"arg":"$properties.properties.healthManagerNodeTolerations","name":"healthManagerNodeTolerations","type":"@NodeTolerationsUpdate_update"},{"arg":"$properties.properties.internalCerts","name":"internalCerts","props":[{"arg":"$properties.properties.internalCerts.duration","default":{"value":"720h"},"name":"duration","type":"string"},{"arg":"$properties.properties.internalCerts.privateKey","name":"privateKey","props":[{"arg":"$properties.properties.internalCerts.privateKey.algorithm","default":{"value":"ECDSA"},"name":"algorithm","type":"string"},{"arg":"$properties.properties.internalCerts.privateKey.rotationPolicy","default":{"value":"Always"},"name":"rotationPolicy","type":"string"},{"arg":"$properties.properties.internalCerts.privateKey.size","default":{"value":256},"format":{"maximum":65535,"minimum":0},"name":"size","type":"integer32"}],"type":"object"},{"arg":"$properties.properties.internalCerts.renewBefore","default":{"value":"240h"},"name":"renewBefore","type":"string"}],"type":"object"},{"arg":"$properties.properties.memoryProfile","default":{"value":"medium"},"enum":{"items":[{"value":"high"},{"value":"low"},{"value":"medium"},{"value":"tiny"}]},"name":"memoryProfile","type":"string"},{"arg":"$properties.properties.mode","enum":{"items":[{"value":"auto"},{"value":"distributed"}]},"name":"mode","type":"string"}],"type":"object"},{"additionalProps":{"item":{"type":"string"}},"arg":"$properties.tags","name":"tags","type":"object"}],"required":true,"type":"object"}}},"method":"patch","path":{"params":[{"arg":"$Path.brokerName","format":{"pattern":"^[a-zA-Z0-9-]{3,24}$"},"name":"brokerName","required":true,"type":"string"},{"arg":"$Path.mqName","format":{"pattern":"^[a-zA-Z0-9-]{3,24}$"},"name":"mqName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","format":{"maxLength":90,"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","format":{"minLength":1},"name":"subscriptionId","required":true,"type":"string"}]},"query":{"consts":[{"const":true,"default":{"value":"2023-10-04-preview"},"format":{"minLength":1},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"name":"extendedLocation","props":[{"name":"name","required":true,"type":"string"},{"enum":{"items":[{"value":"CustomLocation"}]},"name":"type","required":true,"type":"string"}],"required":true,"type":"object"},{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTOperationsMQ/mq/{}/broker/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"location","required":true,"type":"ResourceLocation"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"cls":"ContainerImage_read","name":"authImage","props":[{"name":"pullPolicy","type":"string"},{"name":"pullSecrets","type":"string"},{"name":"repository","required":true,"type":"string"},{"name":"tag","required":true,"type":"string"}],"required":true,"type":"object"},{"name":"brokerImage","required":true,"type":"@ContainerImage_read"},{"cls":"NodeTolerations_read","name":"brokerNodeTolerations","props":[{"name":"effect","required":true,"type":"string"},{"name":"key","required":true,"type":"string"},{"name":"operator","required":true,"type":"string"},{"name":"value","required":true,"type":"string"}],"type":"object"},{"name":"cardinality","props":[{"name":"backendChain","props":[{"format":{"maximum":65535,"minimum":0},"name":"partitions","required":true,"type":"integer32"},{"format":{"maximum":65535,"minimum":0},"name":"redundancyFactor","required":true,"type":"integer32"},{"name":"temporaryDiskTransferEnabled","type":"boolean"},{"format":{"maximum":100,"minimum":0},"name":"temporaryDiskTransferHighWatermarkPercent","type":"integer32"},{"format":{"maximum":100,"minimum":0},"name":"temporaryDiskTransferLowWatermarkPercent","type":"integer32"},{"format":{"maximum":100,"minimum":0},"name":"temporaryMaxBackendMemUsagePercent","type":"integer32"},{"cls":"TemporaryResourceLimitsConfig_read","name":"temporaryResourceLimits","props":[{"format":{"maximum":65535,"minimum":0},"name":"maxInflightMessages","required":true,"type":"integer32"},{"format":{"maximum":65535,"minimum":0},"name":"maxInflightPatches","required":true,"type":"integer32"},{"format":{"maximum":65535,"minimum":0},"name":"maxInflightPatchesPerClient","required":true,"type":"integer32"},{"format":{"maximum":4294967295,"minimum":0},"name":"maxMessageExpirySecs","type":"integer64"},{"format":{"maximum":9223372036853999616,"minimum":0},"name":"maxQueuedMessages","required":true,"type":"integer64"},{"format":{"maximum":9223372036853999616,"minimum":0},"name":"maxQueuedQos0Messages","required":true,"type":"integer64"},{"format":{"maximum":4294967295,"minimum":0},"name":"maxSessionExpirySecs","required":true,"type":"integer64"}],"type":"object"},{"default":{"value":1},"format":{"maximum":65535,"minimum":0},"name":"workers","type":"integer32"}],"required":true,"type":"object"},{"name":"frontend","props":[{"format":{"maximum":65535,"minimum":0},"name":"replicas","required":true,"type":"integer32"},{"name":"temporaryResourceLimits","type":"@TemporaryResourceLimitsConfig_read"},{"default":{"value":2},"format":{"maximum":65535,"minimum":0},"name":"workers","type":"integer32"}],"required":true,"type":"object"}],"type":"object"},{"name":"diagnostics","props":[{"name":"diagnosticServiceEndpoint","type":"string"},{"default":{"value":true},"name":"enableMetrics","type":"boolean"},{"default":{"value":true},"name":"enableSelfCheck","type":"boolean"},{"default":{"value":true},"name":"enableSelfTracing","type":"boolean"},{"default":{"value":true},"name":"enableTracing","type":"boolean"},{"default":{"value":"text"},"name":"logFormat","type":"string"},{"default":{"value":"info,hyper=off,kube_client=off,tower=off,conhash=off,h2=off"},"name":"logLevel","type":"string"},{"default":{"value":60},"format":{"maximum":9223372036853999616,"minimum":0},"name":"maxCellMapLifetime","type":"integer64"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"metricUpdateFrequencySeconds","type":"integer64"},{"default":{"value":"sample.azurecr.io/diagnostics-probe:0.5.0"},"name":"probeImage","type":"string"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfCheckFrequencySeconds","type":"integer64"},{"default":{"value":15},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfCheckTimeoutSeconds","type":"integer64"},{"default":{"value":30},"format":{"maximum":9223372036853999616,"minimum":0},"name":"selfTraceFrequencySeconds","type":"integer64"},{"default":{"value":1000},"format":{"maximum":9223372036853999616,"minimum":0},"name":"spanChannelCapacity","type":"integer64"}],"type":"object"},{"name":"diskBackedMessageBufferSettings","props":[{"cls":"VolumeClaimSpec_read","name":"ephemeralVolumeClaimSpec","props":[{"item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"name":"dataSource","props":[{"name":"apiGroup","type":"string"},{"name":"kind","required":true,"type":"string"},{"name":"name","required":true,"type":"string"}],"type":"object"},{"name":"dataSourceRef","props":[{"name":"apiGroup","type":"string"},{"name":"kind","required":true,"type":"string"},{"name":"name","required":true,"type":"string"}],"type":"object"},{"name":"resources","props":[{"additionalProps":{"item":{"type":"string"}},"name":"limits","type":"object"},{"additionalProps":{"item":{"type":"string"}},"name":"requests","type":"object"}],"type":"object"},{"name":"selector","props":[{"item":{"props":[{"name":"key","required":true,"type":"string"},{"name":"operator","required":true,"type":"string"},{"item":{"type":"string"},"name":"values","type":"array<string>"}],"type":"object"},"name":"matchExpressions","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"name":"matchLabels","type":"object"}],"type":"object"},{"name":"storageClassName","type":"string"},{"name":"volumeMode","type":"string"},{"name":"volumeName","type":"string"}],"type":"object"},{"name":"maxSize","required":true,"type":"string"},{"name":"persistentVolumeClaimSpec","type":"@VolumeClaimSpec_read"}],"type":"object"},{"default":{"value":true},"name":"encryptInternalTraffic","type":"boolean"},{"name":"healthManagerImage","required":true,"type":"@ContainerImage_read"},{"name":"healthManagerNodeTolerations","type":"@NodeTolerations_read"},{"name":"internalCerts","props":[{"default":{"value":"720h"},"name":"duration","required":true,"type":"string"},{"name":"privateKey","props":[{"default":{"value":"ECDSA"},"name":"algorithm","required":true,"type":"string"},{"default":{"value":"Always"},"name":"rotationPolicy","required":true,"type":"string"},{"default":{"value":256},"format":{"maximum":65535,"minimum":0},"name":"size","required":true,"type":"integer32"}],"required":true,"type":"object"},{"default":{"value":"240h"},"name":"renewBefore","required":true,"type":"string"}],"type":"object"},{"default":{"value":"medium"},"enum":{"items":[{"value":"high"},{"value":"low"},{"value":"medium"},{"value":"tiny"}]},"name":"memoryProfile","type":"string"},{"enum":{"items":[{"value":"auto"},{"value":"distributed"}]},"name":"mode","required":true,"type":"string"},{"enum":{"items":[{"value":"Accepted"},{"value":"Canceled"},{"value":"Deleting"},{"value":"Failed"},{"value":"Provisioning"},{"value":"Succeeded"},{"value":"Updating"}]},"name":"provisioningState","readOnly":true,"type":"string"}],"type":"object"},{"name":"systemData","props":[{"format":{"protocol":"iso"},"name":"createdAt","type":"dateTime"},{"name":"createdBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"createdByType","type":"string"},{"format":{"protocol":"iso"},"name":"lastModifiedAt","type":"dateTime"},{"name":"lastModifiedBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"lastModifiedByType","type":"string"}],"readOnly":true,"type":"object"},{"additionalProps":{"item":{"type":"string"}},"name":"tags","type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200]},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"operationId":"Broker_Update"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotoperationsmq/mq/{}/broker/{}","plane":"mgmt-plane"}]}