{"argGroups":[{"args":[{"format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"help":{"short":"Name of broker."},"idPart":"child_name_1","options":["n","name","broker-name"],"required":true,"type":"string","var":"$Path.brokerName"},{"format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"help":{"short":"Name of instance."},"idPart":"name","options":["instance-name"],"required":true,"type":"string","var":"$Path.instanceName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"args":[{"args":[{"format":{"maximum":65535,"minimum":0},"help":{"short":"Upper bound of a client's Keep Alive, in seconds."},"options":["max-keep-alive-seconds"],"type":"integer32","var":"$resource.properties.advanced.clients.maxKeepAliveSeconds"},{"format":{"maximum":4294967295,"minimum":1},"help":{"short":"Upper bound of Message Expiry Interval, in seconds."},"options":["max-message-expiry-seconds"],"type":"integer32","var":"$resource.properties.advanced.clients.maxMessageExpirySeconds"},{"format":{"maximum":268435456,"minimum":1},"help":{"short":"Max message size for a packet in Bytes."},"options":["max-packet-size-bytes"],"type":"integer32","var":"$resource.properties.advanced.clients.maxPacketSizeBytes"},{"format":{"maximum":65535,"minimum":1},"help":{"short":"Upper bound of Receive Maximum that a client can request in the CONNECT packet."},"options":["max-receive-maximum"],"type":"integer32","var":"$resource.properties.advanced.clients.maxReceiveMaximum"},{"format":{"maximum":4294967295,"minimum":1},"help":{"short":"Upper bound of Session Expiry Interval, in seconds."},"options":["max-session-expiry-seconds"],"type":"integer32","var":"$resource.properties.advanced.clients.maxSessionExpirySeconds"},{"args":[{"format":{"minimum":1},"help":{"short":"The maximum length of the queue before messages start getting dropped."},"options":["length"],"type":"integer64","var":"$resource.properties.advanced.clients.subscriberQueueLimit.length"},{"default":{"value":"None"},"enum":{"items":[{"name":"DropOldest","value":"DropOldest"},{"name":"None","value":"None"}]},"help":{"short":"The strategy to use for dropping messages from the queue."},"options":["strategy"],"type":"string","var":"$resource.properties.advanced.clients.subscriberQueueLimit.strategy"}],"help":{"short":"The limit on the number of queued messages for a subscriber."},"options":["subscriber-queue-limit"],"type":"object","var":"$resource.properties.advanced.clients.subscriberQueueLimit"}],"help":{"short":"Configurations related to All Clients."},"options":["clients"],"type":"object","var":"$resource.properties.advanced.clients"},{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"The setting to enable or disable encryption of internal Traffic."},"options":["encrypt-internal-traffic"],"type":"string","var":"$resource.properties.advanced.encryptInternalTraffic"},{"args":[{"help":{"short":"Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."},"options":["duration"],"required":true,"type":"string","var":"$resource.properties.advanced.internalCerts.duration"},{"args":[{"enum":{"items":[{"name":"Ec256","value":"Ec256"},{"name":"Ec384","value":"Ec384"},{"name":"Ec521","value":"Ec521"},{"name":"Ed25519","value":"Ed25519"},{"name":"Rsa2048","value":"Rsa2048"},{"name":"Rsa4096","value":"Rsa4096"},{"name":"Rsa8192","value":"Rsa8192"}]},"help":{"short":"algorithm for private key."},"options":["algorithm"],"required":true,"type":"string","var":"$resource.properties.advanced.internalCerts.privateKey.algorithm"},{"enum":{"items":[{"name":"Always","value":"Always"},{"name":"Never","value":"Never"}]},"help":{"short":"cert-manager private key rotationPolicy."},"options":["rotation-policy"],"required":true,"type":"string","var":"$resource.properties.advanced.internalCerts.privateKey.rotationPolicy"}],"help":{"short":"Configuration of certificate private key."},"options":["private-key"],"required":true,"type":"object","var":"$resource.properties.advanced.internalCerts.privateKey"},{"help":{"short":"When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes."},"options":["renew-before"],"required":true,"type":"string","var":"$resource.properties.advanced.internalCerts.renewBefore"}],"help":{"short":"Certificate rotation and private key configuration."},"options":["internal-certs"],"type":"object","var":"$resource.properties.advanced.internalCerts"}],"group":"Properties","help":{"short":"Advanced settings of Broker."},"options":["advanced"],"type":"object","var":"$resource.properties.advanced"},{"args":[{"args":[{"format":{"maximum":16,"minimum":1},"help":{"short":"The desired number of physical backend partitions."},"options":["partitions"],"required":true,"type":"integer32","var":"$resource.properties.cardinality.backendChain.partitions"},{"format":{"maximum":5,"minimum":1},"help":{"short":"The desired numbers of backend replicas (pods) in a physical partition."},"options":["redundancy-factor"],"required":true,"type":"integer32","var":"$resource.properties.cardinality.backendChain.redundancyFactor"},{"default":{"value":1},"format":{"maximum":16,"minimum":1},"help":{"short":"Number of logical backend workers per replica (pod)."},"options":["workers"],"type":"integer32","var":"$resource.properties.cardinality.backendChain.workers"}],"help":{"short":"The backend broker desired properties"},"options":["backend-chain"],"required":true,"type":"object","var":"$resource.properties.cardinality.backendChain"},{"args":[{"format":{"maximum":16,"minimum":1},"help":{"short":"The desired number of frontend instances (pods)."},"options":["replicas"],"required":true,"type":"integer32","var":"$resource.properties.cardinality.frontend.replicas"},{"default":{"value":2},"format":{"maximum":16,"minimum":1},"help":{"short":"Number of logical frontend workers per instance (pod)."},"options":["workers"],"type":"integer32","var":"$resource.properties.cardinality.frontend.workers"}],"help":{"short":"The frontend desired properties"},"options":["frontend"],"required":true,"type":"object","var":"$resource.properties.cardinality.frontend"}],"group":"Properties","help":{"short":"The cardinality details of the broker."},"options":["cardinality"],"type":"object","var":"$resource.properties.cardinality"},{"args":[{"args":[{"default":{"value":"info"},"help":{"short":"The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'."},"options":["level"],"type":"string","var":"$resource.properties.diagnostics.logs.level"}],"help":{"short":"Diagnostic log settings for the resource."},"options":["logs"],"type":"object","var":"$resource.properties.diagnostics.logs"},{"args":[{"default":{"value":9600},"format":{"maximum":65535,"minimum":0},"help":{"short":"The prometheus port to expose the metrics."},"options":["prometheus-port"],"type":"integer32","var":"$resource.properties.diagnostics.metrics.prometheusPort"}],"help":{"short":"The metrics settings for the resource."},"options":["metrics"],"type":"object","var":"$resource.properties.diagnostics.metrics"},{"args":[{"default":{"value":30},"format":{"maximum":300,"minimum":30},"help":{"short":"The self check interval."},"options":["interval-seconds"],"type":"integer32","var":"$resource.properties.diagnostics.selfCheck.intervalSeconds"},{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"The toggle to enable/disable self check."},"options":["mode"],"type":"string","var":"$resource.properties.diagnostics.selfCheck.mode"},{"default":{"value":15},"format":{"maximum":120,"minimum":5},"help":{"short":"The timeout for self check."},"options":["timeout-seconds"],"type":"integer32","var":"$resource.properties.diagnostics.selfCheck.timeoutSeconds"}],"help":{"short":"The self check properties."},"options":["self-check"],"type":"object","var":"$resource.properties.diagnostics.selfCheck"},{"args":[{"default":{"value":16},"format":{"maximum":128,"minimum":1},"help":{"short":"The cache size in megabytes."},"options":["cache-size-megabytes"],"type":"integer32","var":"$resource.properties.diagnostics.traces.cacheSizeMegabytes"},{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"The toggle to enable/disable traces."},"options":["mode"],"type":"string","var":"$resource.properties.diagnostics.traces.mode"},{"args":[{"default":{"value":30},"format":{"maximum":300,"minimum":1},"help":{"short":"The self tracing interval."},"options":["interval-seconds"],"type":"integer32","var":"$resource.properties.diagnostics.traces.selfTracing.intervalSeconds"},{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"The toggle to enable/disable self tracing."},"options":["mode"],"type":"string","var":"$resource.properties.diagnostics.traces.selfTracing.mode"}],"help":{"short":"The self tracing properties."},"options":["self-tracing"],"type":"object","var":"$resource.properties.diagnostics.traces.selfTracing"},{"default":{"value":1000},"format":{"maximum":100000,"minimum":1000},"help":{"short":"The span channel capacity."},"options":["span-channel-capacity"],"type":"integer32","var":"$resource.properties.diagnostics.traces.spanChannelCapacity"}],"help":{"short":"The trace properties."},"options":["traces"],"type":"object","var":"$resource.properties.diagnostics.traces"}],"group":"Properties","help":{"short":"Spec defines the desired identities of Broker diagnostics settings."},"options":["diagnostics"],"type":"object","var":"$resource.properties.diagnostics"},{"args":[{"args":[{"help":{"short":"AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"},"item":{"type":"string"},"options":["access-modes"],"type":"array<string>","var":"@VolumeClaimSpec_create.accessModes"},{"args":[{"help":{"short":"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."},"options":["api-group"],"type":"string","var":"@LocalKubernetesReference_create.apiGroup"},{"help":{"short":"Kind is the type of resource being referenced"},"options":["kind"],"required":true,"type":"string","var":"@LocalKubernetesReference_create.kind"},{"help":{"short":"Name is the name of resource being referenced"},"options":["name"],"required":true,"type":"string","var":"@LocalKubernetesReference_create.name"}],"cls":"LocalKubernetesReference_create","help":{"short":"This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."},"options":["data-source"],"type":"object","var":"@VolumeClaimSpec_create.dataSource"},{"args":[{"help":{"short":"APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required."},"options":["api-group"],"type":"string","var":"@KubernetesReference_create.apiGroup"},{"help":{"short":"Kind is the type of resource being referenced"},"options":["kind"],"required":true,"type":"string","var":"@KubernetesReference_create.kind"},{"help":{"short":"Name is the name of resource being referenced"},"options":["name"],"required":true,"type":"string","var":"@KubernetesReference_create.name"},{"help":{"short":"Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace."},"options":["namespace"],"type":"string","var":"@KubernetesReference_create.namespace"}],"cls":"KubernetesReference_create","help":{"short":"Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."},"options":["data-source-ref"],"type":"object","var":"@VolumeClaimSpec_create.dataSourceRef"},{"args":[{"help":{"short":"Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.  This is an alpha field and requires enabling the DynamicResourceAllocation feature gate.  This field is immutable. It can only be set for containers."},"item":{"args":[{"help":{"short":"Name of the resource. This must match the name of a resource in spec.resourceClaims."},"options":["name"],"required":true,"type":"string","var":"@VolumeClaimResourceRequirements_create.claims[].name"}],"type":"object"},"options":["claims"],"type":"array<object>","var":"@VolumeClaimResourceRequirements_create.claims"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"options":["limits"],"type":"object","var":"@VolumeClaimResourceRequirements_create.limits"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"},"options":["requests"],"type":"object","var":"@VolumeClaimResourceRequirements_create.requests"}],"cls":"VolumeClaimResourceRequirements_create","help":{"short":"Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"},"options":["resources"],"type":"object","var":"@VolumeClaimSpec_create.resources"},{"args":[{"help":{"short":"MatchExpressions is a list of label selector requirements. The requirements are ANDed."},"item":{"args":[{"help":{"short":"key is the label key that the selector applies to."},"options":["key"],"required":true,"type":"string","var":"@VolumeClaimSpecSelector_create.matchExpressions[].key"},{"enum":{"items":[{"name":"DoesNotExist","value":"DoesNotExist"},{"name":"Exists","value":"Exists"},{"name":"In","value":"In"},{"name":"NotIn","value":"NotIn"}]},"help":{"short":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist."},"options":["operator"],"required":true,"type":"string","var":"@VolumeClaimSpecSelector_create.matchExpressions[].operator"},{"help":{"short":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch."},"item":{"type":"string"},"options":["values"],"type":"array<string>","var":"@VolumeClaimSpecSelector_create.matchExpressions[].values"}],"type":"object"},"options":["match-expressions"],"type":"array<object>","var":"@VolumeClaimSpecSelector_create.matchExpressions"},{"additionalProps":{"item":{"type":"string"}},"help":{"short":"MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."},"options":["match-labels"],"type":"object","var":"@VolumeClaimSpecSelector_create.matchLabels"}],"cls":"VolumeClaimSpecSelector_create","help":{"short":"A label query over volumes to consider for binding."},"options":["selector"],"type":"object","var":"@VolumeClaimSpec_create.selector"},{"help":{"short":"Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"},"options":["storage-class-name"],"type":"string","var":"@VolumeClaimSpec_create.storageClassName"},{"help":{"short":"volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."},"options":["volume-mode"],"type":"string","var":"@VolumeClaimSpec_create.volumeMode"},{"help":{"short":"VolumeName is the binding reference to the PersistentVolume backing this claim."},"options":["volume-name"],"type":"string","var":"@VolumeClaimSpec_create.volumeName"}],"cls":"VolumeClaimSpec_create","help":{"short":"Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details."},"options":["ephemeral-volume-claim-spec"],"type":"object","var":"$resource.properties.diskBackedMessageBuffer.ephemeralVolumeClaimSpec"},{"format":{"pattern":"^[0-9]+[KMGTPE]$"},"help":{"short":"The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details."},"options":["max-size"],"required":true,"type":"string","var":"$resource.properties.diskBackedMessageBuffer.maxSize"},{"help":{"short":"Use the specified persistent volume claim template to mount a persistent volume for the message buffer."},"options":["persistent-volume-claim-spec"],"type":"@VolumeClaimSpec_create","var":"$resource.properties.diskBackedMessageBuffer.persistentVolumeClaimSpec"}],"group":"Properties","help":{"short":"Settings of Disk Backed Message Buffer."},"options":["disk-backed-message-buffer"],"type":"object","var":"$resource.properties.diskBackedMessageBuffer"},{"args":[{"default":{"value":"Enabled"},"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"The toggle to enable/disable cpu resource limits."},"options":["cpu"],"type":"string","var":"$resource.properties.generateResourceLimits.cpu"}],"group":"Properties","help":{"short":"This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted."},"options":["generate-resource-limits"],"type":"object","var":"$resource.properties.generateResourceLimits"},{"default":{"value":"Medium"},"enum":{"items":[{"name":"High","value":"High"},{"name":"Low","value":"Low"},{"name":"Medium","value":"Medium"},{"name":"Tiny","value":"Tiny"}]},"group":"Properties","help":{"short":"Memory profile of Broker."},"options":["memory-profile"],"type":"string","var":"$resource.properties.memoryProfile"},{"args":[{"args":[{"help":{"short":"The user property key to enable persistence."},"options":["user-property-key"],"required":true,"type":"string","var":"$resource.properties.persistence.dynamicSettings.userPropertyKey"},{"help":{"short":"The user property value to enable persistence."},"options":["user-property-value"],"required":true,"type":"string","var":"$resource.properties.persistence.dynamicSettings.userPropertyValue"}],"help":{"short":"Client sets the specified user property key/value in the CONNECT/SUBSCRIBE/PUBLISH.  Optionally, if the customer specifies a configurable user property, it will work to enable persistence dynamically. The default user property key is 'aio-persistence' and value 'true'."},"options":["dynamic-settings"],"type":"object","var":"$resource.properties.persistence.dynamicSettings"},{"args":[{"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"Determines if encryption is enabled."},"options":["mode"],"required":true,"type":"string","var":"$resource.properties.persistence.encryption.mode"}],"help":{"short":"Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption."},"options":["encryption"],"type":"object","var":"$resource.properties.persistence.encryption"},{"help":{"short":"The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required."},"options":["max-size"],"required":true,"type":"string","var":"$resource.properties.persistence.maxSize"},{"args":[{"help":{"short":"AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"},"item":{"type":"string"},"options":["access-modes"],"type":"array<string>","var":"$resource.properties.persistence.persistentVolumeClaimSpec.accessModes"},{"help":{"short":"This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field."},"options":["data-source"],"type":"@LocalKubernetesReference_create","var":"$resource.properties.persistence.persistentVolumeClaimSpec.dataSource"},{"help":{"short":"Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled."},"options":["data-source-ref"],"type":"@KubernetesReference_create","var":"$resource.properties.persistence.persistentVolumeClaimSpec.dataSourceRef"},{"help":{"short":"Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"},"options":["resources"],"type":"@VolumeClaimResourceRequirements_create","var":"$resource.properties.persistence.persistentVolumeClaimSpec.resources"},{"help":{"short":"A label query over volumes to consider for binding."},"options":["selector"],"type":"@VolumeClaimSpecSelector_create","var":"$resource.properties.persistence.persistentVolumeClaimSpec.selector"},{"help":{"short":"Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"},"options":["storage-class-name"],"type":"string","var":"$resource.properties.persistence.persistentVolumeClaimSpec.storageClassName"},{"help":{"short":"volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature."},"options":["volume-mode"],"type":"string","var":"$resource.properties.persistence.persistentVolumeClaimSpec.volumeMode"},{"help":{"short":"VolumeName is the binding reference to the PersistentVolume backing this claim."},"options":["volume-name"],"type":"string","var":"$resource.properties.persistence.persistentVolumeClaimSpec.volumeName"}],"help":{"short":"Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.  If unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class."},"options":["persistent-volume-claim-spec"],"type":"object","var":"$resource.properties.persistence.persistentVolumeClaimSpec"},{"args":[{"args":[{"args":[{"args":[{"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"Mode of the BrokerRetainMessagesCustomPolicy."},"options":["mode"],"required":true,"type":"string","var":"$resource.properties.persistence.retain.Custom.retainSettings.dynamic.mode"}],"help":{"short":"Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."},"options":["dynamic"],"type":"object","var":"$resource.properties.persistence.retain.Custom.retainSettings.dynamic"},{"help":{"short":"List of topics under which retained messages would be persisted to disk. Wildcards # and + supported."},"item":{"type":"string"},"options":["topics"],"type":"array<string>","var":"$resource.properties.persistence.retain.Custom.retainSettings.topics"}],"help":{"short":"Settings for the policy."},"options":["retain-settings"],"required":true,"type":"object","var":"$resource.properties.persistence.retain.Custom.retainSettings"}],"options":["custom"],"type":"object","var":"$resource.properties.persistence.retain.Custom"}],"help":{"short":"Controls which topic's retained messages should be persisted to disk."},"options":["retain"],"type":"object","var":"$resource.properties.persistence.retain"},{"args":[{"args":[{"args":[{"args":[{"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"Mode of the BrokerStateStoreCustomPolicy."},"options":["mode"],"required":true,"type":"string","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.dynamic.mode"}],"help":{"short":"Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."},"options":["dynamic"],"type":"object","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.dynamic"},{"help":{"short":"List of key and key type to persist to disk."},"item":{"args":[{"enum":{"items":[{"name":"Binary","value":"Binary"},{"name":"Pattern","value":"Pattern"},{"name":"String","value":"String"}]},"help":{"short":"The key to persist to disk."},"options":["key-type"],"required":true,"type":"string","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources[].keyType"},{"help":{"short":"List of keys to persist to disk, required."},"item":{"type":"string"},"options":["keys"],"required":true,"type":"array<string>","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources[].keys"}],"type":"object"},"options":["state-store-resources"],"type":"array<object>","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources"}],"help":{"short":"Settings for the policy."},"options":["state-store-settings"],"required":true,"type":"object","var":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings"}],"options":["custom"],"type":"object","var":"$resource.properties.persistence.stateStore.Custom"}],"help":{"short":"Controls which keys should be persisted to disk for the state store."},"options":["state-store"],"type":"object","var":"$resource.properties.persistence.stateStore"},{"args":[{"args":[{"args":[{"args":[{"enum":{"items":[{"name":"Disabled","value":"Disabled"},{"name":"Enabled","value":"Enabled"}]},"help":{"short":"Mode of the BrokerSubscriberQueueCustomPolicy."},"options":["mode"],"required":true,"type":"string","var":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.dynamic.mode"}],"help":{"short":"Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR)."},"options":["dynamic"],"type":"object","var":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.dynamic"},{"help":{"short":"List of client IDs of the subscribers, wildcard * supported."},"item":{"type":"string"},"options":["subscriber-client-ids"],"type":"array<string>","var":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.subscriberClientIds"},{"help":{"short":"List of topics under which messages would be persisted to disk for each subscriber. Wildcards # and + supported."},"item":{"type":"string"},"options":["topics"],"type":"array<string>","var":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.topics"}],"help":{"short":"Custom policy, required if mode is Custom. Subscriber queues from all groups are persisted to disk (logical OR)."},"options":["subscriber-queue-settings"],"required":true,"type":"object","var":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings"}],"options":["custom"],"type":"object","var":"$resource.properties.persistence.subscriberQueue.Custom"}],"help":{"short":"Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set."},"options":["subscriber-queue"],"type":"object","var":"$resource.properties.persistence.subscriberQueue"}],"group":"Properties","help":{"short":"The persistence settings of the Broker."},"options":["persistence"],"type":"object","var":"$resource.properties.persistence"}],"name":"Properties"},{"args":[{"args":[{"help":{"short":"The name of the extended location."},"options":["name"],"required":true,"type":"string","var":"$resource.extendedLocation.name"},{"enum":{"items":[{"name":"CustomLocation","value":"CustomLocation"}]},"help":{"short":"Type of ExtendedLocation."},"options":["type"],"required":true,"type":"string","var":"$resource.extendedLocation.type"}],"group":"Resource","help":{"short":"Edge location of the resource."},"options":["extended-location"],"type":"object","var":"$resource.extendedLocation"}],"name":"Resource"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.IoTOperations/instances/{instanceName}/brokers/{brokerName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"resource","props":[{"arg":"$resource.extendedLocation","name":"extendedLocation","props":[{"arg":"$resource.extendedLocation.name","name":"name","required":true,"type":"string"},{"arg":"$resource.extendedLocation.type","enum":{"items":[{"value":"CustomLocation"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"name":"properties","props":[{"arg":"$resource.properties.advanced","name":"advanced","props":[{"arg":"$resource.properties.advanced.clients","name":"clients","props":[{"arg":"$resource.properties.advanced.clients.maxKeepAliveSeconds","format":{"maximum":65535,"minimum":0},"name":"maxKeepAliveSeconds","type":"integer32"},{"arg":"$resource.properties.advanced.clients.maxMessageExpirySeconds","format":{"maximum":4294967295,"minimum":1},"name":"maxMessageExpirySeconds","type":"integer32"},{"arg":"$resource.properties.advanced.clients.maxPacketSizeBytes","format":{"maximum":268435456,"minimum":1},"name":"maxPacketSizeBytes","type":"integer32"},{"arg":"$resource.properties.advanced.clients.maxReceiveMaximum","format":{"maximum":65535,"minimum":1},"name":"maxReceiveMaximum","type":"integer32"},{"arg":"$resource.properties.advanced.clients.maxSessionExpirySeconds","format":{"maximum":4294967295,"minimum":1},"name":"maxSessionExpirySeconds","type":"integer32"},{"arg":"$resource.properties.advanced.clients.subscriberQueueLimit","name":"subscriberQueueLimit","props":[{"arg":"$resource.properties.advanced.clients.subscriberQueueLimit.length","format":{"minimum":1},"name":"length","type":"integer64"},{"arg":"$resource.properties.advanced.clients.subscriberQueueLimit.strategy","default":{"value":"None"},"enum":{"items":[{"value":"DropOldest"},{"value":"None"}]},"name":"strategy","type":"string"}],"type":"object"}],"type":"object"},{"arg":"$resource.properties.advanced.encryptInternalTraffic","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"encryptInternalTraffic","type":"string"},{"arg":"$resource.properties.advanced.internalCerts","name":"internalCerts","props":[{"arg":"$resource.properties.advanced.internalCerts.duration","name":"duration","required":true,"type":"string"},{"arg":"$resource.properties.advanced.internalCerts.privateKey","name":"privateKey","props":[{"arg":"$resource.properties.advanced.internalCerts.privateKey.algorithm","enum":{"items":[{"value":"Ec256"},{"value":"Ec384"},{"value":"Ec521"},{"value":"Ed25519"},{"value":"Rsa2048"},{"value":"Rsa4096"},{"value":"Rsa8192"}]},"name":"algorithm","required":true,"type":"string"},{"arg":"$resource.properties.advanced.internalCerts.privateKey.rotationPolicy","enum":{"items":[{"value":"Always"},{"value":"Never"}]},"name":"rotationPolicy","required":true,"type":"string"}],"required":true,"type":"object"},{"arg":"$resource.properties.advanced.internalCerts.renewBefore","name":"renewBefore","required":true,"type":"string"}],"type":"object"}],"type":"object"},{"arg":"$resource.properties.cardinality","name":"cardinality","props":[{"arg":"$resource.properties.cardinality.backendChain","name":"backendChain","props":[{"arg":"$resource.properties.cardinality.backendChain.partitions","format":{"maximum":16,"minimum":1},"name":"partitions","required":true,"type":"integer32"},{"arg":"$resource.properties.cardinality.backendChain.redundancyFactor","format":{"maximum":5,"minimum":1},"name":"redundancyFactor","required":true,"type":"integer32"},{"arg":"$resource.properties.cardinality.backendChain.workers","default":{"value":1},"format":{"maximum":16,"minimum":1},"name":"workers","type":"integer32"}],"required":true,"type":"object"},{"arg":"$resource.properties.cardinality.frontend","name":"frontend","props":[{"arg":"$resource.properties.cardinality.frontend.replicas","format":{"maximum":16,"minimum":1},"name":"replicas","required":true,"type":"integer32"},{"arg":"$resource.properties.cardinality.frontend.workers","default":{"value":2},"format":{"maximum":16,"minimum":1},"name":"workers","type":"integer32"}],"required":true,"type":"object"}],"type":"object"},{"arg":"$resource.properties.diagnostics","name":"diagnostics","props":[{"arg":"$resource.properties.diagnostics.logs","name":"logs","props":[{"arg":"$resource.properties.diagnostics.logs.level","default":{"value":"info"},"name":"level","type":"string"}],"type":"object"},{"arg":"$resource.properties.diagnostics.metrics","name":"metrics","props":[{"arg":"$resource.properties.diagnostics.metrics.prometheusPort","default":{"value":9600},"format":{"maximum":65535,"minimum":0},"name":"prometheusPort","type":"integer32"}],"type":"object"},{"arg":"$resource.properties.diagnostics.selfCheck","name":"selfCheck","props":[{"arg":"$resource.properties.diagnostics.selfCheck.intervalSeconds","default":{"value":30},"format":{"maximum":300,"minimum":30},"name":"intervalSeconds","type":"integer32"},{"arg":"$resource.properties.diagnostics.selfCheck.mode","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"arg":"$resource.properties.diagnostics.selfCheck.timeoutSeconds","default":{"value":15},"format":{"maximum":120,"minimum":5},"name":"timeoutSeconds","type":"integer32"}],"type":"object"},{"arg":"$resource.properties.diagnostics.traces","name":"traces","props":[{"arg":"$resource.properties.diagnostics.traces.cacheSizeMegabytes","default":{"value":16},"format":{"maximum":128,"minimum":1},"name":"cacheSizeMegabytes","type":"integer32"},{"arg":"$resource.properties.diagnostics.traces.mode","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"arg":"$resource.properties.diagnostics.traces.selfTracing","name":"selfTracing","props":[{"arg":"$resource.properties.diagnostics.traces.selfTracing.intervalSeconds","default":{"value":30},"format":{"maximum":300,"minimum":1},"name":"intervalSeconds","type":"integer32"},{"arg":"$resource.properties.diagnostics.traces.selfTracing.mode","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"}],"type":"object"},{"arg":"$resource.properties.diagnostics.traces.spanChannelCapacity","default":{"value":1000},"format":{"maximum":100000,"minimum":1000},"name":"spanChannelCapacity","type":"integer32"}],"type":"object"}],"type":"object"},{"arg":"$resource.properties.diskBackedMessageBuffer","name":"diskBackedMessageBuffer","props":[{"arg":"$resource.properties.diskBackedMessageBuffer.ephemeralVolumeClaimSpec","cls":"VolumeClaimSpec_create","name":"ephemeralVolumeClaimSpec","props":[{"arg":"@VolumeClaimSpec_create.accessModes","item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"arg":"@VolumeClaimSpec_create.dataSource","cls":"LocalKubernetesReference_create","name":"dataSource","props":[{"arg":"@LocalKubernetesReference_create.apiGroup","name":"apiGroup","type":"string"},{"arg":"@LocalKubernetesReference_create.kind","name":"kind","required":true,"type":"string"},{"arg":"@LocalKubernetesReference_create.name","name":"name","required":true,"type":"string"}],"type":"object"},{"arg":"@VolumeClaimSpec_create.dataSourceRef","cls":"KubernetesReference_create","name":"dataSourceRef","props":[{"arg":"@KubernetesReference_create.apiGroup","name":"apiGroup","type":"string"},{"arg":"@KubernetesReference_create.kind","name":"kind","required":true,"type":"string"},{"arg":"@KubernetesReference_create.name","name":"name","required":true,"type":"string"},{"arg":"@KubernetesReference_create.namespace","name":"namespace","type":"string"}],"type":"object"},{"arg":"@VolumeClaimSpec_create.resources","cls":"VolumeClaimResourceRequirements_create","name":"resources","props":[{"arg":"@VolumeClaimResourceRequirements_create.claims","item":{"props":[{"arg":"@VolumeClaimResourceRequirements_create.claims[].name","name":"name","required":true,"type":"string"}],"type":"object"},"name":"claims","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimResourceRequirements_create.limits","name":"limits","type":"object"},{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimResourceRequirements_create.requests","name":"requests","type":"object"}],"type":"object"},{"arg":"@VolumeClaimSpec_create.selector","cls":"VolumeClaimSpecSelector_create","name":"selector","props":[{"arg":"@VolumeClaimSpecSelector_create.matchExpressions","item":{"props":[{"arg":"@VolumeClaimSpecSelector_create.matchExpressions[].key","name":"key","required":true,"type":"string"},{"arg":"@VolumeClaimSpecSelector_create.matchExpressions[].operator","enum":{"items":[{"value":"DoesNotExist"},{"value":"Exists"},{"value":"In"},{"value":"NotIn"}]},"name":"operator","required":true,"type":"string"},{"arg":"@VolumeClaimSpecSelector_create.matchExpressions[].values","item":{"type":"string"},"name":"values","type":"array<string>"}],"type":"object"},"name":"matchExpressions","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"arg":"@VolumeClaimSpecSelector_create.matchLabels","name":"matchLabels","type":"object"}],"type":"object"},{"arg":"@VolumeClaimSpec_create.storageClassName","name":"storageClassName","type":"string"},{"arg":"@VolumeClaimSpec_create.volumeMode","name":"volumeMode","type":"string"},{"arg":"@VolumeClaimSpec_create.volumeName","name":"volumeName","type":"string"}],"type":"object"},{"arg":"$resource.properties.diskBackedMessageBuffer.maxSize","format":{"pattern":"^[0-9]+[KMGTPE]$"},"name":"maxSize","required":true,"type":"string"},{"arg":"$resource.properties.diskBackedMessageBuffer.persistentVolumeClaimSpec","name":"persistentVolumeClaimSpec","type":"@VolumeClaimSpec_create"}],"type":"object"},{"arg":"$resource.properties.generateResourceLimits","name":"generateResourceLimits","props":[{"arg":"$resource.properties.generateResourceLimits.cpu","default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"cpu","type":"string"}],"type":"object"},{"arg":"$resource.properties.memoryProfile","default":{"value":"Medium"},"enum":{"items":[{"value":"High"},{"value":"Low"},{"value":"Medium"},{"value":"Tiny"}]},"name":"memoryProfile","type":"string"},{"arg":"$resource.properties.persistence","name":"persistence","props":[{"arg":"$resource.properties.persistence.dynamicSettings","name":"dynamicSettings","props":[{"arg":"$resource.properties.persistence.dynamicSettings.userPropertyKey","name":"userPropertyKey","required":true,"type":"string"},{"arg":"$resource.properties.persistence.dynamicSettings.userPropertyValue","name":"userPropertyValue","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.encryption","name":"encryption","props":[{"arg":"$resource.properties.persistence.encryption.mode","enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.maxSize","name":"maxSize","required":true,"type":"string"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec","name":"persistentVolumeClaimSpec","props":[{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.accessModes","item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.dataSource","name":"dataSource","type":"@LocalKubernetesReference_create"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.dataSourceRef","name":"dataSourceRef","type":"@KubernetesReference_create"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.resources","name":"resources","type":"@VolumeClaimResourceRequirements_create"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.selector","name":"selector","type":"@VolumeClaimSpecSelector_create"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.storageClassName","name":"storageClassName","type":"string"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.volumeMode","name":"volumeMode","type":"string"},{"arg":"$resource.properties.persistence.persistentVolumeClaimSpec.volumeName","name":"volumeName","type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.retain","discriminators":[{"property":"mode","props":[{"arg":"$resource.properties.persistence.retain.Custom.retainSettings","name":"retainSettings","props":[{"arg":"$resource.properties.persistence.retain.Custom.retainSettings.dynamic","name":"dynamic","props":[{"arg":"$resource.properties.persistence.retain.Custom.retainSettings.dynamic.mode","enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.retain.Custom.retainSettings.topics","item":{"type":"string"},"name":"topics","type":"array<string>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"retain","props":[{"enum":{"items":[{"value":"All"},{"arg":"$resource.properties.persistence.retain.Custom","value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.stateStore","discriminators":[{"property":"mode","props":[{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings","name":"stateStoreSettings","props":[{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.dynamic","name":"dynamic","props":[{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.dynamic.mode","enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources","item":{"props":[{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources[].keyType","enum":{"items":[{"value":"Binary"},{"value":"Pattern"},{"value":"String"}]},"name":"keyType","required":true,"type":"string"},{"arg":"$resource.properties.persistence.stateStore.Custom.stateStoreSettings.stateStoreResources[].keys","item":{"type":"string"},"name":"keys","required":true,"type":"array<string>"}],"type":"object"},"name":"stateStoreResources","type":"array<object>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"stateStore","props":[{"enum":{"items":[{"value":"All"},{"arg":"$resource.properties.persistence.stateStore.Custom","value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.subscriberQueue","discriminators":[{"property":"mode","props":[{"arg":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings","name":"subscriberQueueSettings","props":[{"arg":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.dynamic","name":"dynamic","props":[{"arg":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.dynamic.mode","enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"arg":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.subscriberClientIds","item":{"type":"string"},"name":"subscriberClientIds","type":"array<string>"},{"arg":"$resource.properties.persistence.subscriberQueue.Custom.subscriberQueueSettings.topics","item":{"type":"string"},"name":"topics","type":"array<string>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"subscriberQueue","props":[{"enum":{"items":[{"value":"All"},{"arg":"$resource.properties.persistence.subscriberQueue.Custom","value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"}],"type":"object"}],"type":"object"}],"required":true,"type":"object"}}},"method":"put","path":{"params":[{"arg":"$Path.brokerName","format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"name":"brokerName","required":true,"type":"string"},{"arg":"$Path.instanceName","format":{"maxLength":63,"minLength":3,"pattern":"^[a-z0-9][a-z0-9-]*[a-z0-9]$"},"name":"instanceName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","format":{"maxLength":90,"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"uuid"}]},"query":{"consts":[{"const":true,"default":{"value":"2025-07-01-preview"},"format":{"minLength":1},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"name":"extendedLocation","props":[{"name":"name","required":true,"type":"string"},{"enum":{"items":[{"value":"CustomLocation"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.IoTOperations/instances/{}/brokers/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"name","readOnly":true,"type":"string"},{"name":"properties","props":[{"name":"advanced","props":[{"name":"clients","props":[{"format":{"maximum":65535,"minimum":0},"name":"maxKeepAliveSeconds","type":"integer32"},{"format":{"maximum":4294967295,"minimum":1},"name":"maxMessageExpirySeconds","type":"integer32"},{"format":{"maximum":268435456,"minimum":1},"name":"maxPacketSizeBytes","type":"integer32"},{"format":{"maximum":65535,"minimum":1},"name":"maxReceiveMaximum","type":"integer32"},{"format":{"maximum":4294967295,"minimum":1},"name":"maxSessionExpirySeconds","type":"integer32"},{"name":"subscriberQueueLimit","props":[{"format":{"minimum":1},"name":"length","type":"integer64"},{"default":{"value":"None"},"enum":{"items":[{"value":"DropOldest"},{"value":"None"}]},"name":"strategy","type":"string"}],"type":"object"}],"type":"object"},{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"encryptInternalTraffic","type":"string"},{"name":"internalCerts","props":[{"name":"duration","required":true,"type":"string"},{"name":"privateKey","props":[{"enum":{"items":[{"value":"Ec256"},{"value":"Ec384"},{"value":"Ec521"},{"value":"Ed25519"},{"value":"Rsa2048"},{"value":"Rsa4096"},{"value":"Rsa8192"}]},"name":"algorithm","required":true,"type":"string"},{"enum":{"items":[{"value":"Always"},{"value":"Never"}]},"name":"rotationPolicy","required":true,"type":"string"}],"required":true,"type":"object"},{"name":"renewBefore","required":true,"type":"string"}],"type":"object"}],"type":"object"},{"name":"cardinality","props":[{"name":"backendChain","props":[{"format":{"maximum":16,"minimum":1},"name":"partitions","required":true,"type":"integer32"},{"format":{"maximum":5,"minimum":1},"name":"redundancyFactor","required":true,"type":"integer32"},{"default":{"value":1},"format":{"maximum":16,"minimum":1},"name":"workers","type":"integer32"}],"required":true,"type":"object"},{"name":"frontend","props":[{"format":{"maximum":16,"minimum":1},"name":"replicas","required":true,"type":"integer32"},{"default":{"value":2},"format":{"maximum":16,"minimum":1},"name":"workers","type":"integer32"}],"required":true,"type":"object"}],"type":"object"},{"name":"diagnostics","props":[{"name":"logs","props":[{"default":{"value":"info"},"name":"level","type":"string"}],"type":"object"},{"name":"metrics","props":[{"default":{"value":9600},"format":{"maximum":65535,"minimum":0},"name":"prometheusPort","type":"integer32"}],"type":"object"},{"name":"selfCheck","props":[{"default":{"value":30},"format":{"maximum":300,"minimum":30},"name":"intervalSeconds","type":"integer32"},{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"default":{"value":15},"format":{"maximum":120,"minimum":5},"name":"timeoutSeconds","type":"integer32"}],"type":"object"},{"name":"traces","props":[{"default":{"value":16},"format":{"maximum":128,"minimum":1},"name":"cacheSizeMegabytes","type":"integer32"},{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"},{"name":"selfTracing","props":[{"default":{"value":30},"format":{"maximum":300,"minimum":1},"name":"intervalSeconds","type":"integer32"},{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","type":"string"}],"type":"object"},{"default":{"value":1000},"format":{"maximum":100000,"minimum":1000},"name":"spanChannelCapacity","type":"integer32"}],"type":"object"}],"type":"object"},{"name":"diskBackedMessageBuffer","props":[{"cls":"VolumeClaimSpec_read","name":"ephemeralVolumeClaimSpec","props":[{"item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"cls":"LocalKubernetesReference_read","name":"dataSource","props":[{"name":"apiGroup","type":"string"},{"name":"kind","required":true,"type":"string"},{"name":"name","required":true,"type":"string"}],"type":"object"},{"cls":"KubernetesReference_read","name":"dataSourceRef","props":[{"name":"apiGroup","type":"string"},{"name":"kind","required":true,"type":"string"},{"name":"name","required":true,"type":"string"},{"name":"namespace","type":"string"}],"type":"object"},{"cls":"VolumeClaimResourceRequirements_read","name":"resources","props":[{"item":{"props":[{"name":"name","required":true,"type":"string"}],"type":"object"},"name":"claims","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"name":"limits","type":"object"},{"additionalProps":{"item":{"type":"string"}},"name":"requests","type":"object"}],"type":"object"},{"cls":"VolumeClaimSpecSelector_read","name":"selector","props":[{"item":{"props":[{"name":"key","required":true,"type":"string"},{"enum":{"items":[{"value":"DoesNotExist"},{"value":"Exists"},{"value":"In"},{"value":"NotIn"}]},"name":"operator","required":true,"type":"string"},{"item":{"type":"string"},"name":"values","type":"array<string>"}],"type":"object"},"name":"matchExpressions","type":"array<object>"},{"additionalProps":{"item":{"type":"string"}},"name":"matchLabels","type":"object"}],"type":"object"},{"name":"storageClassName","type":"string"},{"name":"volumeMode","type":"string"},{"name":"volumeName","type":"string"}],"type":"object"},{"format":{"pattern":"^[0-9]+[KMGTPE]$"},"name":"maxSize","required":true,"type":"string"},{"name":"persistentVolumeClaimSpec","type":"@VolumeClaimSpec_read"}],"type":"object"},{"name":"generateResourceLimits","props":[{"default":{"value":"Enabled"},"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"cpu","type":"string"}],"type":"object"},{"default":{"value":"Medium"},"enum":{"items":[{"value":"High"},{"value":"Low"},{"value":"Medium"},{"value":"Tiny"}]},"name":"memoryProfile","type":"string"},{"name":"persistence","props":[{"name":"dynamicSettings","props":[{"name":"userPropertyKey","required":true,"type":"string"},{"name":"userPropertyValue","required":true,"type":"string"}],"type":"object"},{"name":"encryption","props":[{"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"name":"maxSize","required":true,"type":"string"},{"name":"persistentVolumeClaimSpec","props":[{"item":{"type":"string"},"name":"accessModes","type":"array<string>"},{"name":"dataSource","type":"@LocalKubernetesReference_read"},{"name":"dataSourceRef","type":"@KubernetesReference_read"},{"name":"resources","type":"@VolumeClaimResourceRequirements_read"},{"name":"selector","type":"@VolumeClaimSpecSelector_read"},{"name":"storageClassName","type":"string"},{"name":"volumeMode","type":"string"},{"name":"volumeName","type":"string"}],"type":"object"},{"discriminators":[{"property":"mode","props":[{"name":"retainSettings","props":[{"name":"dynamic","props":[{"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"item":{"type":"string"},"name":"topics","type":"array<string>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"retain","props":[{"enum":{"items":[{"value":"All"},{"value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"discriminators":[{"property":"mode","props":[{"name":"stateStoreSettings","props":[{"name":"dynamic","props":[{"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"item":{"props":[{"enum":{"items":[{"value":"Binary"},{"value":"Pattern"},{"value":"String"}]},"name":"keyType","required":true,"type":"string"},{"item":{"type":"string"},"name":"keys","required":true,"type":"array<string>"}],"type":"object"},"name":"stateStoreResources","type":"array<object>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"stateStore","props":[{"enum":{"items":[{"value":"All"},{"value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"discriminators":[{"property":"mode","props":[{"name":"subscriberQueueSettings","props":[{"name":"dynamic","props":[{"enum":{"items":[{"value":"Disabled"},{"value":"Enabled"}]},"name":"mode","required":true,"type":"string"}],"type":"object"},{"item":{"type":"string"},"name":"subscriberClientIds","type":"array<string>"},{"item":{"type":"string"},"name":"topics","type":"array<string>"}],"required":true,"type":"object"}],"value":"Custom"}],"name":"subscriberQueue","props":[{"enum":{"items":[{"value":"All"},{"value":"Custom"},{"value":"None"}]},"name":"mode","required":true,"type":"string"}],"type":"object"}],"type":"object"},{"enum":{"items":[{"value":"Accepted"},{"value":"Canceled"},{"value":"Deleting"},{"value":"Failed"},{"value":"Provisioning"},{"value":"Succeeded"},{"value":"Updating"}]},"name":"provisioningState","readOnly":true,"type":"string"}],"type":"object"},{"name":"systemData","props":[{"format":{"protocol":"iso"},"name":"createdAt","type":"dateTime"},{"name":"createdBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"createdByType","type":"string"},{"format":{"protocol":"iso"},"name":"lastModifiedAt","type":"dateTime"},{"name":"lastModifiedBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"lastModifiedByType","type":"string"}],"readOnly":true,"type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200,201]},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"azure-async-operation"},"operationId":"Broker_CreateOrUpdate"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.iotoperations/instances/{}/brokers/{}","plane":"mgmt-plane"}]}