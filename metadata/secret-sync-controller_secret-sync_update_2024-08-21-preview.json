{"argGroups":[{"args":[{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"format":{"maxLength":253,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"help":{"short":"The name of the SecretSync"},"idPart":"name","options":["n","name","secret-sync-name"],"required":true,"type":"string","var":"$Path.secretSyncName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"format":{"maxLength":253,"pattern":"^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?"},"group":"Properties","help":{"short":"ForceSynchronization can be used to force the secret synchronization. The secret synchronization is triggered by changing the value in this field. This field is not used to resolve synchronization conflicts."},"options":["force-synchronization"],"type":"string","var":"$properties.properties.forceSynchronization"},{"format":{"minLength":1},"group":"Properties","help":{"short":"An array of SecretObjectData that maps secret data from the external secret provider to the Kubernetes secret. Each entry specifies the source secret in the external provider and the corresponding key in the Kubernetes secret."},"item":{"args":[{"format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"help":{"short":"SourcePath is the identifier for the secret data as defined by the external secret provider. This is the key or path to the secret in the provider's system, which gets mounted to a specific path in the pod. The value should match the name of the secret as specified in the SecretProviderClass's objects array."},"options":["source-path"],"required":true,"type":"string","var":"$properties.properties.objectSecretMapping[].sourcePath"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"help":{"short":"TargetKey is the key in the Kubernetes secret's data field where the secret value will be stored. This key is used to reference the secret data within Kubernetes, and it should be unique within the secret."},"options":["target-key"],"required":true,"type":"string","var":"$properties.properties.objectSecretMapping[].targetKey"}],"type":"object"},"options":["object-secret-mapping"],"type":"array<object>","var":"$properties.properties.objectSecretMapping"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"group":"Properties","help":{"short":"SecretProviderClassName specifies the name of the SecretProviderClass resource, which contains the information needed to access the cloud provider secret store."},"options":["secret-provider-class-name"],"type":"string","var":"$properties.properties.secretProviderClassName"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"group":"Properties","help":{"short":"ServiceAccountName specifies the name of the service account used to access the cloud provider secret store. The audience field in the service account token must be passed as parameter in the controller configuration. The audience is used when requesting a token from the API server for the service account; the supported audiences are defined by each provider."},"options":["service-account-name"],"type":"string","var":"$properties.properties.serviceAccountName"},{"additionalProps":{"item":{"type":"string"}},"group":"Properties","help":{"short":"Resource tags."},"options":["tags"],"type":"object","var":"$properties.tags"}],"name":"Properties"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SecretSyncController/secretSyncs/{secretSyncName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"properties","props":[{"clientFlatten":true,"name":"properties","props":[{"arg":"$properties.properties.forceSynchronization","format":{"maxLength":253,"pattern":"^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?"},"name":"forceSynchronization","type":"string"},{"arg":"$properties.properties.objectSecretMapping","format":{"minLength":1},"identifiers":["targetKey"],"item":{"props":[{"arg":"$properties.properties.objectSecretMapping[].sourcePath","format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"name":"sourcePath","required":true,"type":"string"},{"arg":"$properties.properties.objectSecretMapping[].targetKey","format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"name":"targetKey","required":true,"type":"string"}],"type":"object"},"name":"objectSecretMapping","type":"array<object>"},{"arg":"$properties.properties.secretProviderClassName","format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"name":"secretProviderClassName","type":"string"},{"arg":"$properties.properties.serviceAccountName","format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"name":"serviceAccountName","type":"string"}],"type":"object"},{"additionalProps":{"item":{"type":"string"}},"arg":"$properties.tags","name":"tags","type":"object"}],"required":true,"type":"object"}}},"method":"patch","path":{"params":[{"arg":"$Path.resourceGroupName","format":{"maxLength":90,"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.secretSyncName","format":{"maxLength":253,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"name":"secretSyncName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"uuid"}]},"query":{"consts":[{"const":true,"default":{"value":"2024-08-21-preview"},"format":{"minLength":1},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"name":"extendedLocation","props":[{"name":"name","required":true,"type":"string"},{"enum":{"items":[{"value":"CustomLocation"},{"value":"EdgeZone"}]},"name":"type","required":true,"type":"string"}],"type":"object"},{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.SecretSyncController/secretSyncs/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"location","required":true,"type":"ResourceLocation"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"format":{"maxLength":253,"pattern":"^[A-Za-z0-9]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?"},"name":"forceSynchronization","type":"string"},{"enum":{"items":[{"value":"Opaque"},{"value":"kubernetes.io/tls"}]},"name":"kubernetesSecretType","required":true,"type":"string"},{"format":{"minLength":1},"identifiers":["targetKey"],"item":{"props":[{"format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"name":"sourcePath","required":true,"type":"string"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[A-Za-z0-9.]([-A-Za-z0-9]+([-._a-zA-Z0-9]?[A-Za-z0-9])*)?(\\/([0-9]+))*$"},"name":"targetKey","required":true,"type":"string"}],"type":"object"},"name":"objectSecretMapping","required":true,"type":"array<object>"},{"enum":{"items":[{"value":"Canceled"},{"value":"Failed"},{"value":"Succeeded"}]},"name":"provisioningState","readOnly":true,"type":"string"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"name":"secretProviderClassName","required":true,"type":"string"},{"format":{"maxLength":253,"minLength":1,"pattern":"^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"},"name":"serviceAccountName","required":true,"type":"string"},{"name":"status","props":[{"item":{"props":[{"format":{"protocol":"iso"},"name":"lastTransitionTime","readOnly":true,"type":"dateTime"},{"name":"message","readOnly":true,"type":"string"},{"name":"observedGeneration","readOnly":true,"type":"integer64"},{"format":{"maxLength":1024,"minLength":1,"pattern":"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"},"name":"reason","readOnly":true,"type":"string"},{"enum":{"items":[{"value":"False"},{"value":"True"},{"value":"Unknown"}]},"name":"status","readOnly":true,"type":"string"},{"format":{"maxLength":316,"pattern":"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"},"name":"type","readOnly":true,"type":"string"}],"type":"object"},"name":"conditions","readOnly":true,"type":"array<object>"},{"format":{"protocol":"iso"},"name":"lastSuccessfulSyncTime","readOnly":true,"type":"dateTime"}],"readOnly":true,"type":"object"}],"type":"object"},{"name":"systemData","props":[{"format":{"protocol":"iso"},"name":"createdAt","type":"dateTime"},{"name":"createdBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"createdByType","type":"string"},{"format":{"protocol":"iso"},"name":"lastModifiedAt","type":"dateTime"},{"name":"lastModifiedBy","type":"string"},{"enum":{"items":[{"value":"Application"},{"value":"Key"},{"value":"ManagedIdentity"},{"value":"User"}]},"name":"lastModifiedByType","type":"string"}],"readOnly":true,"type":"object"},{"additionalProps":{"item":{"type":"string"}},"name":"tags","type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200]},{"header":{"items":[{"name":"Location"},{"name":"Retry-After"}]},"statusCode":[202]},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"location"},"operationId":"SecretSyncs_Update"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.secretsynccontroller/secretsyncs/{}","plane":"mgmt-plane"}]}