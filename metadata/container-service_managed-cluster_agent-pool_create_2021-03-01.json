{"argGroups":[{"args":[{"help":{"short":"The name of the agent pool."},"idPart":"child_name_1","options":["n","name","agent-pool-name"],"required":true,"type":"string","var":"$Path.agentPoolName"},{"idPart":"resource_group","options":["g","resource-group"],"required":true,"type":"ResourceGroupName","var":"$Path.resourceGroupName"},{"format":{"maxLength":63,"minLength":1,"pattern":"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"},"help":{"short":"The name of the managed cluster resource."},"idPart":"name","options":["resource-name"],"required":true,"type":"string","var":"$Path.resourceName"},{"idPart":"subscription","options":["subscription"],"required":true,"type":"SubscriptionId","var":"$Path.subscriptionId"}],"name":""},{"args":[{"group":"Properties","help":{"short":"Availability zones for nodes. Must use VirtualMachineScaleSets AgentPoolType."},"item":{"type":"string"},"options":["availability-zones"],"type":"array<string>","var":"$parameters.properties.availabilityZones"},{"group":"Properties","help":{"short":"Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 100 (inclusive) for user pools and in the range of 1 to 100 (inclusive) for system pools. The default value is 1."},"options":["count"],"type":"integer32","var":"$parameters.properties.count"},{"group":"Properties","help":{"short":"Whether to enable auto-scaler"},"options":["enable-auto-scaling"],"type":"boolean","var":"$parameters.properties.enableAutoScaling"},{"group":"Properties","help":{"short":"Whether to enable EncryptionAtHost"},"options":["enable-encryption-at-host"],"type":"boolean","var":"$parameters.properties.enableEncryptionAtHost"},{"group":"Properties","help":{"short":"Whether to use FIPS enabled OS"},"options":["enable-fips"],"type":"boolean","var":"$parameters.properties.enableFIPS"},{"group":"Properties","help":{"short":"Enable public IP for nodes"},"options":["enable-node-public-ip"],"type":"boolean","var":"$parameters.properties.enableNodePublicIP"},{"enum":{"items":[{"name":"MIG1g","value":"MIG1g"},{"name":"MIG2g","value":"MIG2g"},{"name":"MIG3g","value":"MIG3g"},{"name":"MIG4g","value":"MIG4g"},{"name":"MIG7g","value":"MIG7g"}]},"group":"Properties","help":{"short":"GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU. Supported values are MIG1g, MIG2g, MIG3g, MIG4g and MIG7g."},"options":["gpu-instance-profile"],"type":"string","var":"$parameters.properties.gpuInstanceProfile"},{"args":[{"help":{"short":"Allowlist of unsafe sysctls or unsafe sysctl patterns (ending in `*`)."},"item":{"type":"string"},"options":["allowed-unsafe-sysctls"],"type":"array<string>","var":"$parameters.properties.kubeletConfig.allowedUnsafeSysctls"},{"format":{"minimum":2},"help":{"short":"The maximum number of container log files that can be present for a container. The number must be â‰¥ 2."},"options":["container-log-max-files"],"type":"integer32","var":"$parameters.properties.kubeletConfig.containerLogMaxFiles"},{"help":{"short":"The maximum size (e.g. 10Mi) of container log file before it is rotated."},"options":["container-log-max-size-mb"],"type":"integer32","var":"$parameters.properties.kubeletConfig.containerLogMaxSizeMB"},{"help":{"short":"Enable CPU CFS quota enforcement for containers that specify CPU limits."},"options":["cpu-cfs-quota"],"type":"boolean","var":"$parameters.properties.kubeletConfig.cpuCfsQuota"},{"help":{"short":"Sets CPU CFS quota period value."},"options":["cpu-cfs-quota-period"],"type":"string","var":"$parameters.properties.kubeletConfig.cpuCfsQuotaPeriod"},{"help":{"short":"CPU Manager policy to use."},"options":["cpu-manager-policy"],"type":"string","var":"$parameters.properties.kubeletConfig.cpuManagerPolicy"},{"help":{"short":"If set to true it will make the Kubelet fail to start if swap is enabled on the node."},"options":["fail-swap-on"],"type":"boolean","var":"$parameters.properties.kubeletConfig.failSwapOn"},{"help":{"short":"The percent of disk usage after which image garbage collection is always run."},"options":["image-gc-high-threshold"],"type":"integer32","var":"$parameters.properties.kubeletConfig.imageGcHighThreshold"},{"help":{"short":"The percent of disk usage before which image garbage collection is never run."},"options":["image-gc-low-threshold"],"type":"integer32","var":"$parameters.properties.kubeletConfig.imageGcLowThreshold"},{"help":{"short":"The maximum number of processes per pod."},"options":["pod-max-pids"],"type":"integer32","var":"$parameters.properties.kubeletConfig.podMaxPids"},{"help":{"short":"Topology Manager policy to use."},"options":["topology-manager-policy"],"type":"string","var":"$parameters.properties.kubeletConfig.topologyManagerPolicy"}],"group":"Properties","help":{"short":"KubeletConfig specifies the configuration of kubelet on agent nodes."},"options":["kubelet-config"],"type":"object","var":"$parameters.properties.kubeletConfig"},{"enum":{"items":[{"name":"OS","value":"OS"},{"name":"Temporary","value":"Temporary"}]},"group":"Properties","help":{"short":"KubeletDiskType determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage. Currently allows one value, OS, resulting in Kubelet using the OS disk for data."},"options":["kubelet-disk-type"],"type":"string","var":"$parameters.properties.kubeletDiskType"},{"args":[{"help":{"short":"SwapFileSizeMB specifies size in MB of a swap file will be created on each node."},"options":["swap-file-size-mb"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.swapFileSizeMB"},{"args":[{"help":{"short":"Sysctl setting fs.aio-max-nr."},"options":["fs-aio-max-nr"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.fsAioMaxNr"},{"help":{"short":"Sysctl setting fs.file-max."},"options":["fs-file-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.fsFileMax"},{"help":{"short":"Sysctl setting fs.inotify.max_user_watches."},"options":["fs-inotify-max-user-watches"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches"},{"help":{"short":"Sysctl setting fs.nr_open."},"options":["fs-nr-open"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.fsNrOpen"},{"help":{"short":"Sysctl setting kernel.threads-max."},"options":["kernel-threads-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.kernelThreadsMax"},{"help":{"short":"Sysctl setting net.core.netdev_max_backlog."},"options":["net-core-netdev-max-backlog"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog"},{"help":{"short":"Sysctl setting net.core.optmem_max."},"options":["net-core-optmem-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreOptmemMax"},{"help":{"short":"Sysctl setting net.core.rmem_default."},"options":["net-core-rmem-default"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreRmemDefault"},{"help":{"short":"Sysctl setting net.core.rmem_max."},"options":["net-core-rmem-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreRmemMax"},{"help":{"short":"Sysctl setting net.core.somaxconn."},"options":["net-core-somaxconn"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreSomaxconn"},{"help":{"short":"Sysctl setting net.core.wmem_default."},"options":["net-core-wmem-default"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreWmemDefault"},{"help":{"short":"Sysctl setting net.core.wmem_max."},"options":["net-core-wmem-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netCoreWmemMax"},{"help":{"short":"Sysctl setting net.ipv4.ip_local_port_range."},"options":["net-ipv4-ip-local-port-range"],"type":"string","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange"},{"help":{"short":"Sysctl setting net.ipv4.neigh.default.gc_thresh1."},"options":["net-ipv4-neigh-default-gc-thresh1"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1"},{"help":{"short":"Sysctl setting net.ipv4.neigh.default.gc_thresh2."},"options":["net-ipv4-neigh-default-gc-thresh2"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2"},{"help":{"short":"Sysctl setting net.ipv4.neigh.default.gc_thresh3."},"options":["net-ipv4-neigh-default-gc-thresh3"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3"},{"help":{"short":"Sysctl setting net.ipv4.tcp_fin_timeout."},"options":["net-ipv4-tcp-fin-timeout"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout"},{"help":{"short":"Sysctl setting net.ipv4.tcp_keepalive_probes."},"options":["net-ipv4-tcp-keepalive-probes"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes"},{"help":{"short":"Sysctl setting net.ipv4.tcp_keepalive_time."},"options":["net-ipv4-tcp-keepalive-time"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime"},{"help":{"short":"Sysctl setting net.ipv4.tcp_max_syn_backlog."},"options":["net-ipv4-tcp-max-syn-backlog"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog"},{"help":{"short":"Sysctl setting net.ipv4.tcp_max_tw_buckets."},"options":["net-ipv4-tcp-max-tw-buckets"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets"},{"help":{"short":"Sysctl setting net.ipv4.tcp_tw_reuse."},"options":["net-ipv4-tcp-tw-reuse"],"type":"boolean","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse"},{"help":{"short":"Sysctl setting net.ipv4.tcp_keepalive_intvl."},"options":["net-ipv4-tcpkeepalive-intvl"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl"},{"help":{"short":"Sysctl setting net.netfilter.nf_conntrack_buckets."},"options":["net-netfilter-nf-conntrack-buckets"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets"},{"help":{"short":"Sysctl setting net.netfilter.nf_conntrack_max."},"options":["net-netfilter-nf-conntrack-max"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax"},{"help":{"short":"Sysctl setting vm.max_map_count."},"options":["vm-max-map-count"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.vmMaxMapCount"},{"help":{"short":"Sysctl setting vm.swappiness."},"options":["vm-swappiness"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.vmSwappiness"},{"help":{"short":"Sysctl setting vm.vfs_cache_pressure."},"options":["vm-vfs-cache-pressure"],"type":"integer32","var":"$parameters.properties.linuxOSConfig.sysctls.vmVfsCachePressure"}],"help":{"short":"Sysctl settings for Linux agent nodes."},"options":["sysctls"],"type":"object","var":"$parameters.properties.linuxOSConfig.sysctls"},{"help":{"short":"Transparent Huge Page defrag configuration."},"options":["transparent-huge-page-defrag"],"type":"string","var":"$parameters.properties.linuxOSConfig.transparentHugePageDefrag"},{"help":{"short":"Transparent Huge Page enabled configuration."},"options":["transparent-huge-page-enabled"],"type":"string","var":"$parameters.properties.linuxOSConfig.transparentHugePageEnabled"}],"group":"Properties","help":{"short":"LinuxOSConfig specifies the OS configuration of linux agent nodes."},"options":["linux-os-config"],"type":"object","var":"$parameters.properties.linuxOSConfig"},{"group":"Properties","help":{"short":"Maximum number of nodes for auto-scaling"},"options":["max-count"],"type":"integer32","var":"$parameters.properties.maxCount"},{"group":"Properties","help":{"short":"Maximum number of pods that can run on a node."},"options":["max-pods"],"type":"integer32","var":"$parameters.properties.maxPods"},{"group":"Properties","help":{"short":"Minimum number of nodes for auto-scaling"},"options":["min-count"],"type":"integer32","var":"$parameters.properties.minCount"},{"enum":{"items":[{"name":"System","value":"System"},{"name":"User","value":"User"}]},"group":"Properties","help":{"short":"AgentPoolMode represents mode of an agent pool"},"options":["mode"],"type":"string","var":"$parameters.properties.mode"},{"additionalProps":{"item":{"type":"string"}},"group":"Properties","help":{"short":"Agent pool node labels to be persisted across all nodes in agent pool."},"options":["node-labels"],"type":"object","var":"$parameters.properties.nodeLabels"},{"group":"Properties","help":{"short":"Public IP Prefix ID. VM nodes use IPs assigned from this Public IP Prefix."},"options":["node-public-ip-prefix-id"],"type":"string","var":"$parameters.properties.nodePublicIPPrefixID"},{"group":"Properties","help":{"short":"Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule."},"item":{"type":"string"},"options":["node-taints"],"type":"array<string>","var":"$parameters.properties.nodeTaints"},{"group":"Properties","help":{"short":"Version of orchestrator specified when creating the managed cluster."},"options":["orchestrator-version"],"type":"string","var":"$parameters.properties.orchestratorVersion"},{"format":{"maximum":2048,"minimum":0},"group":"Properties","help":{"short":"OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified."},"options":["os-disk-size-gb"],"type":"integer32","var":"$parameters.properties.osDiskSizeGB"},{"enum":{"items":[{"name":"Ephemeral","value":"Ephemeral"},{"name":"Managed","value":"Managed"}]},"group":"Properties","help":{"short":"OS disk type to be used for machines in a given agent pool. Allowed values are 'Ephemeral' and 'Managed'. If unspecified, defaults to 'Ephemeral' when the VM supports ephemeral OS and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation."},"options":["os-disk-type"],"type":"string","var":"$parameters.properties.osDiskType"},{"enum":{"items":[{"name":"CBLMariner","value":"CBLMariner"},{"name":"Ubuntu","value":"Ubuntu"}]},"group":"Properties","help":{"short":"OsSKU to be used to specify os sku. Choose from Ubuntu(default) and CBLMariner for Linux OSType. Not applicable to Windows OSType."},"options":["os-sku"],"type":"string","var":"$parameters.properties.osSKU"},{"default":{"value":"Linux"},"enum":{"items":[{"name":"Linux","value":"Linux"},{"name":"Windows","value":"Windows"}]},"group":"Properties","help":{"short":"OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux."},"options":["os-type"],"type":"string","var":"$parameters.properties.osType"},{"group":"Properties","help":{"short":"Pod SubnetID specifies the VNet's subnet identifier for pods."},"options":["pod-subnet-id"],"type":"string","var":"$parameters.properties.podSubnetID"},{"group":"Properties","help":{"short":"The ID for Proximity Placement Group."},"options":["proximity-placement-group-id"],"type":"string","var":"$parameters.properties.proximityPlacementGroupID"},{"default":{"value":"Delete"},"enum":{"items":[{"name":"Deallocate","value":"Deallocate"},{"name":"Delete","value":"Delete"}]},"group":"Properties","help":{"short":"ScaleSetEvictionPolicy to be used to specify eviction policy for Spot virtual machine scale set. Default to Delete."},"options":["scale-set-eviction-policy"],"type":"string","var":"$parameters.properties.scaleSetEvictionPolicy"},{"default":{"value":"Regular"},"enum":{"items":[{"name":"Regular","value":"Regular"},{"name":"Spot","value":"Spot"}]},"group":"Properties","help":{"short":"ScaleSetPriority to be used to specify virtual machine scale set priority. Default to regular."},"options":["scale-set-priority"],"type":"string","var":"$parameters.properties.scaleSetPriority"},{"default":{"value":-1.0},"group":"Properties","help":{"short":"SpotMaxPrice to be used to specify the maximum price you are willing to pay in US Dollars. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand."},"options":["spot-max-price"],"type":"float","var":"$parameters.properties.spotMaxPrice"},{"additionalProps":{"item":{"type":"string"}},"group":"Properties","help":{"short":"Agent pool tags to be persisted on the agent pool virtual machine scale set."},"options":["tags"],"type":"object","var":"$parameters.properties.tags"},{"enum":{"items":[{"name":"AvailabilitySet","value":"AvailabilitySet"},{"name":"VirtualMachineScaleSets","value":"VirtualMachineScaleSets"}]},"group":"Properties","help":{"short":"AgentPoolType represents types of an agent pool"},"options":["type"],"type":"string","var":"$parameters.properties.type"},{"args":[{"help":{"short":"Count or percentage of additional nodes to be added during upgrade. If empty uses AKS default"},"options":["max-surge"],"type":"string","var":"$parameters.properties.upgradeSettings.maxSurge"}],"group":"Properties","help":{"short":"Settings for upgrading the agentpool"},"options":["upgrade-settings"],"type":"object","var":"$parameters.properties.upgradeSettings"},{"group":"Properties","help":{"short":"Size of agent VMs."},"options":["vm-size"],"type":"string","var":"$parameters.properties.vmSize"},{"group":"Properties","help":{"short":"VNet SubnetID specifies the VNet's subnet identifier for nodes and maybe pods"},"options":["vnet-subnet-id"],"type":"string","var":"$parameters.properties.vnetSubnetID"}],"name":"Properties"}],"operations":[{"http":{"path":"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{resourceName}/agentPools/{agentPoolName}","request":{"body":{"json":{"schema":{"clientFlatten":true,"name":"parameters","props":[{"clientFlatten":true,"name":"properties","props":[{"arg":"$parameters.properties.availabilityZones","item":{"type":"string"},"name":"availabilityZones","type":"array<string>"},{"arg":"$parameters.properties.count","name":"count","type":"integer32"},{"arg":"$parameters.properties.enableAutoScaling","name":"enableAutoScaling","type":"boolean"},{"arg":"$parameters.properties.enableEncryptionAtHost","name":"enableEncryptionAtHost","type":"boolean"},{"arg":"$parameters.properties.enableFIPS","name":"enableFIPS","type":"boolean"},{"arg":"$parameters.properties.enableNodePublicIP","name":"enableNodePublicIP","type":"boolean"},{"arg":"$parameters.properties.gpuInstanceProfile","enum":{"items":[{"value":"MIG1g"},{"value":"MIG2g"},{"value":"MIG3g"},{"value":"MIG4g"},{"value":"MIG7g"}]},"name":"gpuInstanceProfile","type":"string"},{"arg":"$parameters.properties.kubeletConfig","name":"kubeletConfig","props":[{"arg":"$parameters.properties.kubeletConfig.allowedUnsafeSysctls","item":{"type":"string"},"name":"allowedUnsafeSysctls","type":"array<string>"},{"arg":"$parameters.properties.kubeletConfig.containerLogMaxFiles","format":{"minimum":2},"name":"containerLogMaxFiles","type":"integer32"},{"arg":"$parameters.properties.kubeletConfig.containerLogMaxSizeMB","name":"containerLogMaxSizeMB","type":"integer32"},{"arg":"$parameters.properties.kubeletConfig.cpuCfsQuota","name":"cpuCfsQuota","type":"boolean"},{"arg":"$parameters.properties.kubeletConfig.cpuCfsQuotaPeriod","name":"cpuCfsQuotaPeriod","type":"string"},{"arg":"$parameters.properties.kubeletConfig.cpuManagerPolicy","name":"cpuManagerPolicy","type":"string"},{"arg":"$parameters.properties.kubeletConfig.failSwapOn","name":"failSwapOn","type":"boolean"},{"arg":"$parameters.properties.kubeletConfig.imageGcHighThreshold","name":"imageGcHighThreshold","type":"integer32"},{"arg":"$parameters.properties.kubeletConfig.imageGcLowThreshold","name":"imageGcLowThreshold","type":"integer32"},{"arg":"$parameters.properties.kubeletConfig.podMaxPids","name":"podMaxPids","type":"integer32"},{"arg":"$parameters.properties.kubeletConfig.topologyManagerPolicy","name":"topologyManagerPolicy","type":"string"}],"type":"object"},{"arg":"$parameters.properties.kubeletDiskType","enum":{"items":[{"value":"OS"},{"value":"Temporary"}]},"name":"kubeletDiskType","type":"string"},{"arg":"$parameters.properties.linuxOSConfig","name":"linuxOSConfig","props":[{"arg":"$parameters.properties.linuxOSConfig.swapFileSizeMB","name":"swapFileSizeMB","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls","name":"sysctls","props":[{"arg":"$parameters.properties.linuxOSConfig.sysctls.fsAioMaxNr","name":"fsAioMaxNr","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.fsFileMax","name":"fsFileMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.fsInotifyMaxUserWatches","name":"fsInotifyMaxUserWatches","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.fsNrOpen","name":"fsNrOpen","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.kernelThreadsMax","name":"kernelThreadsMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreNetdevMaxBacklog","name":"netCoreNetdevMaxBacklog","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreOptmemMax","name":"netCoreOptmemMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreRmemDefault","name":"netCoreRmemDefault","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreRmemMax","name":"netCoreRmemMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreSomaxconn","name":"netCoreSomaxconn","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreWmemDefault","name":"netCoreWmemDefault","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netCoreWmemMax","name":"netCoreWmemMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4IpLocalPortRange","name":"netIpv4IpLocalPortRange","type":"string"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh1","name":"netIpv4NeighDefaultGcThresh1","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh2","name":"netIpv4NeighDefaultGcThresh2","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4NeighDefaultGcThresh3","name":"netIpv4NeighDefaultGcThresh3","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpFinTimeout","name":"netIpv4TcpFinTimeout","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveProbes","name":"netIpv4TcpKeepaliveProbes","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpKeepaliveTime","name":"netIpv4TcpKeepaliveTime","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpMaxSynBacklog","name":"netIpv4TcpMaxSynBacklog","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpMaxTwBuckets","name":"netIpv4TcpMaxTwBuckets","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpTwReuse","name":"netIpv4TcpTwReuse","type":"boolean"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netIpv4TcpkeepaliveIntvl","name":"netIpv4TcpkeepaliveIntvl","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netNetfilterNfConntrackBuckets","name":"netNetfilterNfConntrackBuckets","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.netNetfilterNfConntrackMax","name":"netNetfilterNfConntrackMax","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.vmMaxMapCount","name":"vmMaxMapCount","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.vmSwappiness","name":"vmSwappiness","type":"integer32"},{"arg":"$parameters.properties.linuxOSConfig.sysctls.vmVfsCachePressure","name":"vmVfsCachePressure","type":"integer32"}],"type":"object"},{"arg":"$parameters.properties.linuxOSConfig.transparentHugePageDefrag","name":"transparentHugePageDefrag","type":"string"},{"arg":"$parameters.properties.linuxOSConfig.transparentHugePageEnabled","name":"transparentHugePageEnabled","type":"string"}],"type":"object"},{"arg":"$parameters.properties.maxCount","name":"maxCount","type":"integer32"},{"arg":"$parameters.properties.maxPods","name":"maxPods","type":"integer32"},{"arg":"$parameters.properties.minCount","name":"minCount","type":"integer32"},{"arg":"$parameters.properties.mode","enum":{"items":[{"value":"System"},{"value":"User"}]},"name":"mode","type":"string"},{"additionalProps":{"item":{"type":"string"}},"arg":"$parameters.properties.nodeLabels","name":"nodeLabels","type":"object"},{"arg":"$parameters.properties.nodePublicIPPrefixID","name":"nodePublicIPPrefixID","type":"string"},{"arg":"$parameters.properties.nodeTaints","item":{"type":"string"},"name":"nodeTaints","type":"array<string>"},{"arg":"$parameters.properties.orchestratorVersion","name":"orchestratorVersion","type":"string"},{"arg":"$parameters.properties.osDiskSizeGB","format":{"maximum":2048,"minimum":0},"name":"osDiskSizeGB","type":"integer32"},{"arg":"$parameters.properties.osDiskType","enum":{"items":[{"value":"Ephemeral"},{"value":"Managed"}]},"name":"osDiskType","type":"string"},{"arg":"$parameters.properties.osSKU","enum":{"items":[{"value":"CBLMariner"},{"value":"Ubuntu"}]},"name":"osSKU","type":"string"},{"arg":"$parameters.properties.osType","default":{"value":"Linux"},"enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"osType","type":"string"},{"arg":"$parameters.properties.podSubnetID","name":"podSubnetID","type":"string"},{"arg":"$parameters.properties.proximityPlacementGroupID","name":"proximityPlacementGroupID","type":"string"},{"arg":"$parameters.properties.scaleSetEvictionPolicy","default":{"value":"Delete"},"enum":{"items":[{"value":"Deallocate"},{"value":"Delete"}]},"name":"scaleSetEvictionPolicy","type":"string"},{"arg":"$parameters.properties.scaleSetPriority","default":{"value":"Regular"},"enum":{"items":[{"value":"Regular"},{"value":"Spot"}]},"name":"scaleSetPriority","type":"string"},{"arg":"$parameters.properties.spotMaxPrice","default":{"value":-1},"name":"spotMaxPrice","type":"float"},{"additionalProps":{"item":{"type":"string"}},"arg":"$parameters.properties.tags","name":"tags","type":"object"},{"arg":"$parameters.properties.type","enum":{"items":[{"value":"AvailabilitySet"},{"value":"VirtualMachineScaleSets"}]},"name":"type","type":"string"},{"arg":"$parameters.properties.upgradeSettings","name":"upgradeSettings","props":[{"arg":"$parameters.properties.upgradeSettings.maxSurge","name":"maxSurge","type":"string"}],"type":"object"},{"arg":"$parameters.properties.vmSize","name":"vmSize","type":"string"},{"arg":"$parameters.properties.vnetSubnetID","name":"vnetSubnetID","type":"string"}],"type":"object"}],"required":true,"type":"object"}}},"method":"put","path":{"params":[{"arg":"$Path.agentPoolName","name":"agentPoolName","required":true,"type":"string"},{"arg":"$Path.resourceGroupName","format":{"minLength":1},"name":"resourceGroupName","required":true,"type":"string"},{"arg":"$Path.resourceName","format":{"maxLength":63,"minLength":1,"pattern":"^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$"},"name":"resourceName","required":true,"type":"string"},{"arg":"$Path.subscriptionId","name":"subscriptionId","required":true,"type":"string"}]},"query":{"consts":[{"const":true,"default":{"value":"2021-03-01"},"name":"api-version","readOnly":true,"required":true,"type":"string"}]}},"responses":[{"body":{"json":{"schema":{"props":[{"format":{"template":"/subscriptions/{}/resourceGroups/{}/providers/Microsoft.ContainerService/managedClusters/{}/agentPools/{}"},"name":"id","readOnly":true,"type":"ResourceId"},{"name":"name","readOnly":true,"type":"string"},{"clientFlatten":true,"name":"properties","props":[{"item":{"type":"string"},"name":"availabilityZones","type":"array<string>"},{"name":"count","type":"integer32"},{"name":"enableAutoScaling","type":"boolean"},{"name":"enableEncryptionAtHost","type":"boolean"},{"name":"enableFIPS","type":"boolean"},{"name":"enableNodePublicIP","type":"boolean"},{"enum":{"items":[{"value":"MIG1g"},{"value":"MIG2g"},{"value":"MIG3g"},{"value":"MIG4g"},{"value":"MIG7g"}]},"name":"gpuInstanceProfile","type":"string"},{"name":"kubeletConfig","props":[{"item":{"type":"string"},"name":"allowedUnsafeSysctls","type":"array<string>"},{"format":{"minimum":2},"name":"containerLogMaxFiles","type":"integer32"},{"name":"containerLogMaxSizeMB","type":"integer32"},{"name":"cpuCfsQuota","type":"boolean"},{"name":"cpuCfsQuotaPeriod","type":"string"},{"name":"cpuManagerPolicy","type":"string"},{"name":"failSwapOn","type":"boolean"},{"name":"imageGcHighThreshold","type":"integer32"},{"name":"imageGcLowThreshold","type":"integer32"},{"name":"podMaxPids","type":"integer32"},{"name":"topologyManagerPolicy","type":"string"}],"type":"object"},{"enum":{"items":[{"value":"OS"},{"value":"Temporary"}]},"name":"kubeletDiskType","type":"string"},{"name":"linuxOSConfig","props":[{"name":"swapFileSizeMB","type":"integer32"},{"name":"sysctls","props":[{"name":"fsAioMaxNr","type":"integer32"},{"name":"fsFileMax","type":"integer32"},{"name":"fsInotifyMaxUserWatches","type":"integer32"},{"name":"fsNrOpen","type":"integer32"},{"name":"kernelThreadsMax","type":"integer32"},{"name":"netCoreNetdevMaxBacklog","type":"integer32"},{"name":"netCoreOptmemMax","type":"integer32"},{"name":"netCoreRmemDefault","type":"integer32"},{"name":"netCoreRmemMax","type":"integer32"},{"name":"netCoreSomaxconn","type":"integer32"},{"name":"netCoreWmemDefault","type":"integer32"},{"name":"netCoreWmemMax","type":"integer32"},{"name":"netIpv4IpLocalPortRange","type":"string"},{"name":"netIpv4NeighDefaultGcThresh1","type":"integer32"},{"name":"netIpv4NeighDefaultGcThresh2","type":"integer32"},{"name":"netIpv4NeighDefaultGcThresh3","type":"integer32"},{"name":"netIpv4TcpFinTimeout","type":"integer32"},{"name":"netIpv4TcpKeepaliveProbes","type":"integer32"},{"name":"netIpv4TcpKeepaliveTime","type":"integer32"},{"name":"netIpv4TcpMaxSynBacklog","type":"integer32"},{"name":"netIpv4TcpMaxTwBuckets","type":"integer32"},{"name":"netIpv4TcpTwReuse","type":"boolean"},{"name":"netIpv4TcpkeepaliveIntvl","type":"integer32"},{"name":"netNetfilterNfConntrackBuckets","type":"integer32"},{"name":"netNetfilterNfConntrackMax","type":"integer32"},{"name":"vmMaxMapCount","type":"integer32"},{"name":"vmSwappiness","type":"integer32"},{"name":"vmVfsCachePressure","type":"integer32"}],"type":"object"},{"name":"transparentHugePageDefrag","type":"string"},{"name":"transparentHugePageEnabled","type":"string"}],"type":"object"},{"name":"maxCount","type":"integer32"},{"name":"maxPods","type":"integer32"},{"name":"minCount","type":"integer32"},{"enum":{"items":[{"value":"System"},{"value":"User"}]},"name":"mode","type":"string"},{"name":"nodeImageVersion","readOnly":true,"type":"string"},{"additionalProps":{"item":{"type":"string"}},"name":"nodeLabels","type":"object"},{"name":"nodePublicIPPrefixID","type":"string"},{"item":{"type":"string"},"name":"nodeTaints","type":"array<string>"},{"name":"orchestratorVersion","type":"string"},{"format":{"maximum":2048,"minimum":0},"name":"osDiskSizeGB","type":"integer32"},{"enum":{"items":[{"value":"Ephemeral"},{"value":"Managed"}]},"name":"osDiskType","type":"string"},{"enum":{"items":[{"value":"CBLMariner"},{"value":"Ubuntu"}]},"name":"osSKU","type":"string"},{"default":{"value":"Linux"},"enum":{"items":[{"value":"Linux"},{"value":"Windows"}]},"name":"osType","type":"string"},{"name":"podSubnetID","type":"string"},{"name":"powerState","props":[{"enum":{"items":[{"value":"Running"},{"value":"Stopped"}]},"name":"code","type":"string"}],"readOnly":true,"type":"object"},{"name":"provisioningState","readOnly":true,"type":"string"},{"name":"proximityPlacementGroupID","type":"string"},{"default":{"value":"Delete"},"enum":{"items":[{"value":"Deallocate"},{"value":"Delete"}]},"name":"scaleSetEvictionPolicy","type":"string"},{"default":{"value":"Regular"},"enum":{"items":[{"value":"Regular"},{"value":"Spot"}]},"name":"scaleSetPriority","type":"string"},{"default":{"value":-1},"name":"spotMaxPrice","type":"float"},{"additionalProps":{"item":{"type":"string"}},"name":"tags","type":"object"},{"enum":{"items":[{"value":"AvailabilitySet"},{"value":"VirtualMachineScaleSets"}]},"name":"type","type":"string"},{"name":"upgradeSettings","props":[{"name":"maxSurge","type":"string"}],"type":"object"},{"name":"vmSize","type":"string"},{"name":"vnetSubnetID","type":"string"}],"type":"object"},{"name":"type","readOnly":true,"type":"string"}],"type":"object"},"var":"$Instance"}},"statusCode":[200,201]},{"body":{"json":{"schema":{"type":"@ODataV4Format"}}},"isError":true},{"body":{"json":{"schema":{"type":"@MgmtErrorFormat"}}},"isError":true}]},"longRunning":{"finalStateVia":"azure-async-operation"},"operationId":"AgentPools_CreateOrUpdate"}],"outputs":[{"clientFlatten":true,"ref":"$Instance","type":"object"}],"resources":[{"id":"/subscriptions/{}/resourcegroups/{}/providers/microsoft.containerservice/managedclusters/{}/agentpools/{}","plane":"mgmt-plane"}]}